#!/usr/bin/perl
#
# Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010
# NTT Advanced Technology, Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: v6eval/bin/remotes/kame-freebsd/manualaddrconf.rmt,v 1.4 2001/10/05 06:27:19 masaxmasa Exp $
#
# $Id: ifconfig.rmt,v 1.3 2008/06/03 07:39:53 akisada Exp $
#
########################################################################

BEGIN {
	push(@INC, '/usr/local/koi/libdata');
	push(@INC, '..');
}

use kRemote;
use File::Basename;

my $_ifconfig = '/sbin/ifconfig';

my $true = 1;
my $false = 0;

my $basename = basename($0, '.rmt');
my $prompt = "$basename> ";

my $fd = select (STDIN);  $| = 1; select($fd);
   $fd = select (STDOUT); $| = 1; select($fd);
   $fd = select (STDERR); $| = 1; select($fd);

unless(defined(kRemoteOpen())) {
	print STDERR "fail to open session.\n";
	exit($kRemote::exitFail);
}

unless(defined(kRemoteLogin($timeout))) {
	print STDERR "fail to login.\n";
	exit($kRemote::exitFail);
}

unless(defined(kRemoteSubstituteRootWait())) {
	print STDERR "fail to substitute to Root.\n";
	exit($kRemote::exitFail);
}

unless(defined(kRemoteCommandWait("$_ifconfig -a", $timeout))) {
	print("fail to display information about all interfaces in the system.\n");
	exit($kRemote::exitFail);
}

my $operation = $kRemote::kRemoteOpt{'operation'};
unless(ifconfig($operation)) {
	exit($kRemote::exitFail);
}

sleep(3);

unless(defined(kRemoteCommandWait("$_ifconfig -a", $timeout))) {
	print("fail to display information about all interfaces in the system.\n");
	exit($kRemote::exitFail);
}

unless(defined(kRemoteLogoutWait($timeout))) {
	print STDERR "fail to logout.\n";
	exit($kRemote::exitFail);
}

unless(defined(kRemoteLogoutNoWait($timeout))) {
	print STDERR "fail to logout.\n";
	exit($kRemote::exitFail);
}

kRemoteClose();

exit($kRemote::exitPass);
########################################################################
sub
ifconfig($)
{
	my ($operation) = @_;

	unless(defined($operation)) {
		my $address	= $kRemote::kRemoteOpt{'ifconfig.address'};
		my $address_family	= $kRemote::kRemoteOpt{'ifconfig.address_family'};
		my $interface	= $kRemote::kRemoteOpt{'ifconfig.interface'};
		my $alias = ($address_family eq 'inet') ? 'alias' : '';

		unless(defined(kRemoteCommandWait("$_ifconfig $interface $address_family $address $alias", $timeout))) {
			print("fail to configure network interface parameters.\n");
			exit($kRemote::exitFail);
		}

		return($true);
	}

	if($operation eq 'delete') {
		my $address	= $kRemote::kRemoteOpt{'ifconfig.address'};
		my $address_family	= $kRemote::kRemoteOpt{'ifconfig.address_family'};
		my $interface	= $kRemote::kRemoteOpt{'ifconfig.interface'};

		unless(defined(kRemoteCommandWait("$_ifconfig $interface $address_family $address $operation", $timeout))) {
			print("fail to configure network interface parameters.\n");
			exit($kRemote::exitFail);
		}

		return($true);
	}

	print("unknown operation -- $operation\n");
	return($false);
}
