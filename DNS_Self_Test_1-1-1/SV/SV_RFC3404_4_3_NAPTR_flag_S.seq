#!/usr/bin/perl
#
# Copyright (C) 2006 Yokogawa Electric Corporation.
# All rights reserved.
# 
# Redistribution and use of this software in source and binary
# forms, with or without modification, are permitted provided that
# the following conditions and disclaimer are agreed and accepted
# by the user:
# 
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with
#    the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project
#    which is related to this software (hereinafter referred to as
#    "project") nor the names of the contributors may be used to
#    endorse or promote products derived from this software without
#    specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written
#    notification to the copyrighters.
# 
# 5. The copyrighters, the project and the contributors may prohibit
#    the use of this software at any time.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct-dns/dns/SV/SV_RFC3404_4_3_NAPTR_flag_S.seq,v 1.1.1.1 2006/06/02 05:15:49 akisada Exp $
# $Id: SV_RFC3404_4_3_NAPTR_flag_S.seq,v 1.1.1.1 2006/06/02 05:15:49 akisada Exp $
#
######################################################################

BEGIN {
        $kCommon::TestVersion = '$Name: REL_1_1_1 $';
        push( @INC, '/usr/local/koi/libdata' );
        push( @INC, '..' );
}

END {
}

# use strict;
use DNS;

#------------------------------#
# NUT configuration            #
#------------------------------#
my $NutConfig={ 
##mode
	                     'ModeRequiredTestMode' => 'nonrecursive',
	                     'ModeSetNamedConf' => 'yes',
	                     'ModeSetZoneFiles' => 'yes',
##named.conf
	                     'ConfZone0Name' => 'example.com',
	                     'ConfZone0Type' => 'master',
	                     'ConfZone0AllowQuery' => 'any',
	                     'ConfZone0AllowTransfer' => 'any',
	                     'ConfZone1Name' => 'cid.urn.arpa',
	                     'ConfZone1Type' => 'master',
	                     'ConfZone1AllowQuery' => 'any',
	                     'ConfZone1AllowTransfer' => 'any',
##zone
#SOA
	                     'ZoneZone0Name' => 'example.com',
	                     'ZoneZone0Ttl' => 86400,
	                     'ZoneZone0Type' => 'master',
	                     'ZoneZone0Rec0Name' => 'example.com.',
	                     'ZoneZone0Rec0Type' => 'SOA',
	                     'ZoneZone0Rec0Class' => 'IN',
	                     'ZoneZone0Rec0Ttl' => 86400,
	                     'ZoneZone0Rec0Mname' => 'NS1.example.com.',
	                     'ZoneZone0Rec0Rname' => 'root.example.com.',
	                     'ZoneZone0Rec0Serial' => 2005081600,
	                     'ZoneZone0Rec0Refresh' => 3600,
	                     'ZoneZone0Rec0Retry' => 900,
	                     'ZoneZone0Rec0Expire' => 604800,
	                     'ZoneZone0Rec0Minimum' => 3600,
#@  NS
	                     'ZoneZone0Rec1Name' => 'example.com.',
	                     'ZoneZone0Rec1Type' => 'NS',
	                     'ZoneZone0Rec1Class' => 'IN',
	                     'ZoneZone0Rec1Ttl' => 86400,
	                     'ZoneZone0Rec1Value' => 'NS1.example.com.',
#NS1 A
	                     'ZoneZone0Rec2Name' => 'NS1',
	                     'ZoneZone0Rec2Type' => 'A',
	                     'ZoneZone0Rec2Class' => 'IN',
	                     'ZoneZone0Rec2Ttl' => 86400,
	                     'ZoneZone0Rec2Value' => '192.168.0.10',
#WWW A
	                     'ZoneZone0Rec3Name' => 'WWW',
	                     'ZoneZone0Rec3Type' => 'A',
	                     'ZoneZone0Rec3Class' => 'IN',
	                     'ZoneZone0Rec3Ttl' => 86400,
	                     'ZoneZone0Rec3Value' => '192.168.1.10',
#_http._tcp SRV
	                     'ZoneZone0Rec4Name' => '_http._tcp',
	                     'ZoneZone0Rec4Type' => 'SRV',
	                     'ZoneZone0Rec4Class' => 'IN',
	                     'ZoneZone0Rec4Ttl' => 86400,
	                     'ZoneZone0Rec4Priority' => '10',
	                     'ZoneZone0Rec4Weight' => '20',
	                     'ZoneZone0Rec4Port' => '80',
	                     'ZoneZone0Rec4Value' => 'www.example.com.',
#10 NAPTR
	                     'ZoneZone0Rec5Name' => 'example.com.',
	                     'ZoneZone0Rec5Type' => 'NAPTR',
	                     'ZoneZone0Rec5Class' => 'IN',
	                     'ZoneZone0Rec5Ttl' => 86400,
	                     'ZoneZone0Rec5Order' => 100,
	                     'ZoneZone0Rec5Preference' => 50,
	                     'ZoneZone0Rec5Flags' => '"\"S\""',
	                     'ZoneZone0Rec5Services' => '"\"http+N2L+N2C+N2R\""',
	                     'ZoneZone0Rec5Regexp' => '"\"\""',
	                     'ZoneZone0Rec5Replacement' => '"_http._tcp.example.com."',
#SOA
	                     'ZoneZone1Name' => 'cid.urn.arpa',
	                     'ZoneZone1Ttl' => 86400,
	                     'ZoneZone1Type' => 'master',
	                     'ZoneZone1Rec0Name' => 'cid.urn.arpa.',
	                     'ZoneZone1Rec0Type' => 'SOA',
	                     'ZoneZone1Rec0Class' => 'IN',
	                     'ZoneZone1Rec0Ttl' => 86400,
	                     'ZoneZone1Rec0Mname' => 'NS1.example.com.',
	                     'ZoneZone1Rec0Rname' => 'root.example.com.',
	                     'ZoneZone1Rec0Serial' => 2005081600,
	                     'ZoneZone1Rec0Refresh' => 3600,
	                     'ZoneZone1Rec0Retry' => 900,
	                     'ZoneZone1Rec0Expire' => 604800,
	                     'ZoneZone1Rec0Minimum' => 3600,
#@  NS
	                     'ZoneZone1Rec1Name' => 'cid.urn.arpa.',
	                     'ZoneZone1Rec1Type' => 'NS',
	                     'ZoneZone1Rec1Class' => 'IN',
	                     'ZoneZone1Rec1Ttl' => 86400,
	                     'ZoneZone1Rec1Value' => 'NS1.example.com.',
#10 NAPTR
	                     'ZoneZone1Rec2Name' => 'cid.urn.arpa.',
	                     'ZoneZone1Rec2Type' => 'NAPTR',
	                     'ZoneZone1Rec2Class' => 'IN',
	                     'ZoneZone1Rec2Ttl' => 86400,
	                     'ZoneZone1Rec2Order' => 100,
	                     'ZoneZone1Rec2Preference' => 10,
	                     'ZoneZone1Rec2Flags' => '"\"\""',
	                     'ZoneZone1Rec2Services' => '"\"\""',
	                     'ZoneZone1Rec2Regexp' => '"\"!^urn:cid:.+@([^\\\\\\.]+\\\\\\.)(.*)\$!\\\\\\2!i\""',
	                     'ZoneZone1Rec2Replacement' => '"."',
	                    };

my $remoteRet = DNSRemote("setconfig.rmt",$NutConfig);
unless ( defined($remoteRet) ) {
        Debug_Print("ERROR:DNSRemote\n");
        DNSExit($FAIL);
}

#------------------------------#
# configuration                #
#------------------------------#
my @dns_session_config = ();
my $dns_param          = { 'dns_session_config' => \@dns_session_config };

$dns_session_config[0] = {
        'TN_INTERFACE'   => 'Link0',
        'TN_ADDR'        => $TN_NET0_NODE2_ADDR,
        'TN_ADDR_PORT'   => $TN_CL_PORT,
        'TN_ADDR_PROTO'  => 'UDP',
        'TN_ADDR_FAMILY' => $ADDR_FAMILY,
        'NUT_ADDR'       => $NUT_ADDR_0,
        'NUT_ADDR_PORT'  => $NUT_SV_PORT,
};

#--------------------
# DNS Server1
#--------------------
my @dns_session   = ();
my @gen_dns_msg_0 = ();
my @exp_dns_msg_0 = ();
my @gen_dns_msg_1 = ();
my @exp_dns_msg_1 = ();
my @gen_dns_msg_2 = ();
my @exp_dns_msg_2 = ();

$dns_session[0] = {
        'socket_ref'      => undef,
        'dns_one_session' => [
                {
                        'gen_dns_msg' => \@gen_dns_msg_0,
                        'dec_dns_msg' => undef,
                        'exp_dns_msg' => \@exp_dns_msg_0
                },
                {
                        'gen_dns_msg' => \@gen_dns_msg_1,
                        'dec_dns_msg' => undef,
                        'exp_dns_msg' => \@exp_dns_msg_1
                },
                {
                        'gen_dns_msg' => \@gen_dns_msg_2,
                        'dec_dns_msg' => undef,
                        'exp_dns_msg' => \@exp_dns_msg_2
                },
        ]
};

#--------------------------
# Send packet definition
#--------------------------
#------------------
# 1st message()
#------------------
$gen_dns_msg_0[0]->{'header'} = {
        'id'      => 0x1000,
        'qr'      => 0,
        'opcode'  => 0,
        'aa'      => 0,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => 0,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 0,
        'nscount' => 0,
        'arcount' => 0,
};

$gen_dns_msg_0[0]->{'question'}->[0] = {
        'qname'  => Gen_DNS_Name('cid.urn.arpa.'),
        'qtype'  => 0x0023,    #NAPTR
        'qclass' => 0x0001,
};

#------------------
# 3rd message()
#------------------
$gen_dns_msg_1[0]->{'header'} = {
        'id'      => 0x1001,
        'qr'      => 0,
        'opcode'  => 0,
        'aa'      => 0,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => 0,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 0,
        'nscount' => 0,
        'arcount' => 0,
};

$gen_dns_msg_1[0]->{'question'}->[0] = {
        'qname'  => Gen_DNS_Name('example.com'),
        'qtype'  => 0x0023,    #NAPTR
        'qclass' => 0x0001,
};

#------------------
# 5th message()
#------------------
$gen_dns_msg_2[0]->{'header'} = {
        'id'      => 0x1002,
        'qr'      => 0,
        'opcode'  => 0,
        'aa'      => 0,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => 0,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 0,
        'nscount' => 0,
        'arcount' => 0,
};

$gen_dns_msg_2[0]->{'question'}->[0] = {
        'qname'  => Gen_DNS_Name('_http._tcp.example.com.'),
        'qtype'  => 0x0021,    #SRV
        'qclass' => 0x0001,
};

#--------------------------
# Expect packet definition
#--------------------------
#------------------
# 2nd message
#------------------
$exp_dns_msg_0[0]->{'header'} = {
        'id'      => 0x1000,
        'qr'      => 1,
        'opcode'  => 0,
        'aa'      => undef,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => undef,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 1,
        'nscount' => 1,
        'arcount' => 1,
};

$exp_dns_msg_0[0]->{'question'}->[0] = {
        'qname' => 'cid.urn.arpa.',
        'qtype'  => 0x0023,    #NAPTR
        'qclass' => 0x0001,
};

$exp_dns_msg_0[0]->{'answer'}->[0] = {
        'name'   => 'cid.urn.arpa.',
        'type'     => 0x0023,             #NAPTR
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 41,
        'rdata'    => {
		       'order' => 100,
		       'preference' => 10,
		       'flags' => '',
		       'services' => '',
		       'regexp' => '\!\^urn:cid:\.\+@\(\[\^\\\\.\]\+\\\\.\)\(\.\*\)\$\!\\\2\!\i',
		       'replacement' => '',
		      },
};

$exp_dns_msg_0[0]->{'authority'}->[0] = {
        'name'     => 'cid.urn.arpa.',
        'type'     => 0x0002,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 17,
        'rdata'    => 'NS1.example.com.'
};

$exp_dns_msg_0[0]->{'additional'}->[0] = {
        'name'     => 'NS1.example.com.',
        'type'     => 0x0001,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 4,
        'rdata'    => '192.168.0.10',
};

#------------------
# 4th message
#------------------
$exp_dns_msg_1[0]->{'header'} = {
        'id'      => 0x1001,
        'qr'      => 1,
        'opcode'  => 0,
        'aa'      => undef,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => undef,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 1,
        'nscount' => 1,
        'arcount' => undef,
};

$exp_dns_msg_1[0]->{'question'}->[0] = {
        'qname' => 'example.com.',
        'qtype'  => 0x0023,    #NAPTR
        'qclass' => 0x0001,
};

$exp_dns_msg_1[0]->{'answer'}->[0] = {
        'name'   => 'example.com.',
        'type'     => 0x0023,             #NAPTR
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 48,
        'rdata'    => {
		       'order' => 100,
		       'preference' => 50,
		       'flags' => 'S',
		       'services' => 'http\+N2L\+N2C\+N2R',
		       'regexp' => '',
		       'replacement' => '_http._tcp.example.com.',
		      },
};

$exp_dns_msg_1[0]->{'authority'}->[0] = {
        'name'     => 'example.com.',
        'type'     => 0x0002,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 6,
        'rdata'    => 'NS1.example.com.'
};

$exp_dns_msg_1[0]->{'additional'}->[0] = {
        'name'     => 'NS1.example.com.',
        'type'     => 0x0001,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 4,
        'rdata'    => '192.168.0.10',
};

$exp_dns_msg_1[0]->{'additional'}->[1] = {
        'name'     => 'www.example.com.',
        'type'     => 0x0001,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 4,
        'rdata'    => '192.168.1.10',
};

$exp_dns_msg_1[0]->{'additional'}->[2] = {
        'name'     => '_http._tcp.example.com.',
        'type'     => 0x0021,                      #SRV,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 23,
        'rdata'    => {
                'priority' => '10',
                'weight'   => '20',
                'port'     => '80',
                'target'   => 'www.example.com.',
        },
};

#------------------
# 6th message
#------------------
$exp_dns_msg_2[0]->{'header'} = {
        'id'      => 0x1002,
        'qr'      => 1,
        'opcode'  => 0,
        'aa'      => undef,
        'tc'      => 0,
        'rd'      => 1,
        'ra'      => undef,
        'z'       => 0,
        'rcode'   => 0,
        'qdcount' => 1,
        'ancount' => 1,
        'nscount' => 1,
        'arcount' => undef,
};

$exp_dns_msg_2[0]->{'question'}->[0] = {
        'qname'  => '_http._tcp.example.com.',
        'qtype'  => 0x0021,                      #SRV
        'qclass' => 0x0001,
};

$exp_dns_msg_2[0]->{'answer'}->[0] = {
        'name'     => '_http._tcp.example.com.',
        'type'     => 0x0021,                      #SRV,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 23,
        'rdata'    => {
                'priority' => '10',
                'weight'   => '20',
                'port'     => '80',
                'target'   => 'www.example.com.',
        },
};

$exp_dns_msg_2[0]->{'authority'}->[0] = {
        'name'     => 'example.com.',
        'type'     => 0x0002,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 6,
        'rdata'    => 'NS1.example.com.',
};

$exp_dns_msg_2[0]->{'additional'}->[0] = {
        'name'     => 'NS1.example.com.',
        'type'     => 0x0001,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 4,
        'rdata'    => '192.168.0.10',
};

$exp_dns_msg_2[0]->{'additional'}->[1] = {
        'name'     => 'www.example.com.',
        'type'     => 0x0001,
        'class'    => 0x0001,
        'ttl'      => 86400,
        'rdlength' => 4,
        'rdata'    => '192.168.1.10',
};

################################
# start tests                  #
################################

my $ret = DNSStartConnect( $dns_param, \@dns_session );
unless ( defined($ret) ) {
        Debug_Print("ERROR:DNSStartConnect\n");
        DNSExit($FAIL);
}

#------------------------------#
# 1st packet (send)            #
#------------------------------#
#Print_Message( "=", ["Send 1st message\n"] );

$ret = undef;
$ret = DNSSendRecv(
        1, 1, 60,
        $dns_session[0]->{'socket_ref'},
        $dns_session[0]->{'dns_one_session'}->[0]
);
unless ( defined($ret) ) {
        DNSExit($FAIL);
}

#Print_Message( "=", ["Receive 2nd message\n"] );

#------------------------------#
# Judgment (2nd packet)       #
#------------------------------#
Print_Message(
        "#",
        [
                "Judgment (2nd packet)\n",
"2. Received standard query response including NAPTR resource record.\n",
        ]
);

my $recv_data = $dns_session[0]->{'dns_one_session'}->[0]->{'dec_dns_msg'}->[0];

$ret = undef;
$ret = JudgeDNSMsg( $recv_data, $exp_dns_msg_0[0] );

unless ( defined($ret) ) {
        DNSExit($FAIL);
}

Print_Message( "=", ["2nd packet PASS\n"] );
#------------------------------#
# 3rd packet (send)            #
#------------------------------#
#Print_Message( "=", ["Send 1st message\n"] );

$ret = undef;
$ret = DNSSendRecv(
        1, 1, 60,
        $dns_session[0]->{'socket_ref'},
        $dns_session[0]->{'dns_one_session'}->[1]
);
unless ( defined($ret) ) {
        DNSExit($FAIL);
}
#------------------------------#
# Judgment (4th packet)       #
#------------------------------#
Print_Message(
        "#",
        [
                "Judgment (4th packet)\n",
"4. Received standard query response including NAPTR resource record.\n",
        ]
);

$recv_data = undef;
$recv_data = $dns_session[0]->{'dns_one_session'}->[1]->{'dec_dns_msg'}->[0];

$ret = undef;
$ret = JudgeDNSMsg( $recv_data, $exp_dns_msg_1[0] );

unless ( defined($ret) ) {
        DNSExit($FAIL);
}

Print_Message( "=", ["4th packet PASS\n"] );
#------------------------------#
# 5th packet (send)            #
#------------------------------#
#Print_Message( "=", ["Send 1st message\n"] );

$ret = undef;
$ret = DNSSendRecv(
        1, 1, 60,
        $dns_session[0]->{'socket_ref'},
        $dns_session[0]->{'dns_one_session'}->[2]
);
unless ( defined($ret) ) {
        DNSExit($FAIL);
}
#------------------------------#
# Judgment (6th packet)       #
#------------------------------#
Print_Message(
        "#",
        [
                "Judgment (6th packet)\n",
"6. Received standard query response including SRV resource record.\n",
        ]
);

$recv_data = undef;
$recv_data = $dns_session[0]->{'dns_one_session'}->[2]->{'dec_dns_msg'}->[0];

$ret = undef;
$ret = JudgeDNSMsg( $recv_data, $exp_dns_msg_2[0] );

unless ( defined($ret) ) {
        DNSExit($FAIL);
}

Print_Message( "=", ["6th packet PASS\n"] );

DNSExit($OK);
__END__

######################################################################

=head1 NAME

	SV_RFC3404_4_3_NAPTR_flag_S - Flag in NAPTR resource record (S flag)

=head1 VERIFICATION POINTS

	Verify that a NUT transmits correct message including NAPTR resource record with S flag

=begin html
	<UL>
	<DD><LI>NAPTR RDATA field
	<DD><TABLE BORDER="0">
		<TBODY>
		<TR>
			<TD VALIGN="top">
			<B>FLAGS :</B>
			</TD>
			<TD>
			<B>A &lt;character-string&gt; containing flags to control aspects of the
			rewriting and interpretation of the fields in the record.  Flags
			are single characters from the set A-Z and 0-9.  The case of the
			alphabetic characters is not significant.  The field can be empty</B>
			</TD>
		</TR>
		</TBODY>
	</TABLE>
	<DD><LI>Flags<br>
   At this time only four flags, "S", "A", "U", and "P", are defined.
   The "S", "A" and "U" flags are for a terminal lookup.  This means
   that the Rule is the last one and that the flag determines what the
   next stage should be.
	</UL>


=end html

=head1 TARGET

	Authoritative Server

=head1 SYNOPSIS

=begin html
<PRE>
	<A HREF="./SV_RFC3404_4_3_NAPTR_flag_S.seq">SV_RFC3404_4_3_NAPTR_flag_S.seq</A> [-tooloption ...]: KOI tool option
	See also <A HREF="../DNSConfig.pm">DNSConfig.pm</A>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
	<UL>
	<DD><LI><STRONG>Network Topology</STRONG></LI> 
	<PRE>
        AP Server1 (TN)
          |3ffe:501:ffff:101::10
          |192.168.1.10
          |
Net-y   --+--------+-------------------------- 3ffe:501:ffff:101::/64 
                   |                           192.168.1/24
                   |
                   |
                 Router (TN)
                   |3ffe:501:ffff:100::1
                   |192.168.0.1
                   |
                   |
Net-z   --+--------+-----------------+-------- 3ffe:501:ffff:100::/64 
          |                          |          192.168.0/24
          |                          |
        DNS Server1 (NUT)            DNS Client1 (TN)
           3ffe:501:ffff:100::XXXX     3ffe:501:ffff:100::20 
           3ffe:501:ffff:100::10
           192.168.0.10                192.168.0.20
	<BR>
	XXXX: EUI64
	</PRE>
	<DD><LI><STRONG>Setup</STRONG></LI><BR>
	<BR>
	<DD>Set the DNS Server1's (NUT) address as above mentioned Network Topology.<BR>
	<DD>Configure the Server1's (NUT) zone file to response query from TN.<BR>
	<BR>
	<DD>Example of example.com zone file:<BR>
	<PRE>
$TTL    86400           ; TTL of 1 day
@ IN SOA NS1.example.com. root.example.com. (
	2005081600	; serial
	3600		; refresh every 1 hr
	900		; retry every 15 min
	604800		; expire after a week
	3600		; Minimum TTL of a 1 hr
)
;
	IN	NS	NS1.example.com.
;
        IN NAPTR 100  50  "S"    "http+N2L+N2C+N2R"  ""   _http._tcp.example.com.
;
_http._tcp      IN      SRV     10      20      80      www.example.com.
;
NS1	IN	A	192.168.0.10
;
WWW	IN	A	192.168.1.10
	</PRE>
	<DD>Example of cid.urn.arpa. domain zone file:<BR>
	<PRE>
$TTL	86400		; TTL of 1 day
@ IN SOA NS1.example.com. root.example.com. (
	2005081600	; serial
	3600		; refresh after 1 hr
	900		; retry after 15 min
	604800		; expire after 1 week
	3600		; Minimum TTL of 1 hr
)
;
	IN	NS	NS1.example.com.
;
cid.urn.arpa. IN NAPTR 100 10 "" ""  "!^urn:cid:.+@([^\\.]+\\.)(.*)$!\\2!i" .
	</PRE>
	</UL>

=end html

=head1 TEST PROCEDURE

	This test sequence is following.

    DNS Client1 (TN)                       DNS Server1 (NUT)
        |                                      |
        |------------------------------------->|
        |   1. Send standard query             |
        |      QNAME = cid.urn.arpa.           |
        |      QTYPE= NAPTR                    |
        |                                      |
        |<-------------------------------------|
        |   2. Standard query response         |
        |                                      |
        |------------------------------------->|
        |   3. Send standard query             |
        |      QNAME = example.com.            |
        |      QTYPE= NAPTR                    |
        |                                      |
        |<-------------------------------------|
        |   4. Standard query response         |
        |                                      |
        |------------------------------------->|
        |   5. Send standard query             |
        |      QNAME = _http._tcp.example.com. |
        |      QTYPE= SRV                      |
        |                                      |
        |<-------------------------------------|
        |   6. Standard query response         |
        |                                      |
        |                                      |
        v                                      v

	1. TN send standard query
	   QNAME=cid.urn.arpa.,
	   QTYPE=NAPTR to NUT.
	2. NUT reply query response w/ NAPTR resource record to TN (Judgment *2)
	3. TN send standard query
	   QNAME=example.com.,
	   QTYPE=NAPTR to NUT.
	4. NUT reply query response w/ NAPTR resource record to TN (Judgment *4)
	5. TN send standard query
	   QNAME=_http._tcp.example.com.,
	   QTYPE=SRV to NUT.
	6. NUT reply query response w/ SRV resource record to TN (Judgment *6)

=begin html
	<UL>
	<DD><LI>Packet Description</LI><BR>
	<BR>
	<DD>1st packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query from DNS Client1 (TN) to Server1 (NUT) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1000</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>cid.urn.arpa.</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<DD>2nd packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query response from DNS Server1 (NUT) to Client (TN) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1000</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>ANY</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>
			cid.urn.arpa.
			</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="11">DNS Answer section</TD>
			<TD>NAME</TD>
			<TD>cid.urn.arpa. (Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>86400sec</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>41</TD>
		</TR>
		<TR>
			<TD>ORDER</TD>
			<TD>100</TD>
		</TR>
		<TR>
			<TD>PREFERENCE</TD>
			<TD>10</TD>
		</TR>
		<TR>
			<TD>FLAGS</TD>
			<TD></TD>
		</TR>
		<TR>
			<TD>SERVICES</TD>
			<TD></TD>
		</TR>
		<TR>
			<TD>REGEXP</TD>
			<TD>!^urn:cid:.+@([^\.]+\.)(.*)$!\2!i</TD>
		</TR>
		<TR>
			<TD>REPLACEMENT</TD>
			<TD>.</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Authority section</TD>
			<TD>NAME</TD>
			<TD>cid.urn.arpa. (Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>NS (0x0002)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>17</TD>
		</TR>
		<TR>
			<TD>NSDNAME</TD>
			<TD>NS1.example.com</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Additional section</TD>
			<TD>NAME</TD>
			<TD>NS1.example.com (Pointer 0xC05F)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>A (0x0001)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>4</TD>
		</TR>
		<TR>
			<TD>ADDRESS</TD>
			<TD>192.168.0.10</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<DD>3rd packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query from DNS Client1 (TN) to Server1 (NUT) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1001</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>example.com.</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<DD>4th packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query response from DNS Server1 (NUT) to Client (TN) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1001</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>ANY</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>
			example.com
			</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="11">DNS Answer section</TD>
			<TD>NAME</TD>
			<TD>example.com. (Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>NAPTR (0x0023)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>86400sec</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>48</TD>
		</TR>
		<TR>
			<TD>ORDER</TD>
			<TD>100</TD>
		</TR>
		<TR>
			<TD>PREFERENCE</TD>
			<TD>50</TD>
		</TR>
		<TR>
			<TD>FLAGS</TD>
			<TD>S</TD>
		</TR>
		<TR>
			<TD>SERVICES</TD>
			<TD>http+N2L+N2C+N2R</TD>
		</TR>
		<TR>
			<TD>REGEXP</TD>
			<TD></TD>
		</TR>
		<TR>
			<TD>REPLACEMENT</TD>
			<TD>_http._tcp.example.com.</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Authority section</TD>
			<TD>NAME</TD>
			<TD>example.com (Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>NS (0x0002)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>6</TD>
		</TR>
		<TR>
			<TD>NSDNAME</TD>
			<TD>NS1.example.com (NS1 + Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Additional section</TD>
			<TD>NAME</TD>
			<TD>NS1.example.com (Pointer 0xC065)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>A (0x0001)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>4</TD>
		</TR>
		<TR>
			<TD>ADDRESS</TD>
			<TD>192.168.0.10</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<DD>5th packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query from DNS Client1 (TN) to Server1 (NUT) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1002</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>_http._tcp.example.com.</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>SRV (0x0021)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<DD>6th packet.
	<P></P>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD COLSPAN="3">
			<CENTER>Standard query response from DNS Server1 (NUT) to Client (TN) </CENTER>
			</TD>
		</TR>
		<TR>
			<TD ROWSPAN="2">IP Header</TD>
			<TD>Source Address</TD>
			<TD>NUT_NETZ</TD>
		</TR>
		<TR>
			<TD>Destination Address</TD>
			<TD>CL1_NETZ</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="2">UDP Header</TD>
			<TD>Src Port</TD>
			<TD>53</TD>
		</TR>
		<TR>
			<TD>Dst Port</TD>
			<TD>2000</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="13">DNS Header</TD>
			<TD>ID</TD>
			<TD>0x1002</TD>
		</TR>
		<TR>
			<TD>QR</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>OPCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>AA</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>TC</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RD</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>RA</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>Z</TD>
			<TD>ANY</TD>
		</TR>
		<TR>
			<TD>RCODE</TD>
			<TD>0</TD>
		</TR>
		<TR>
			<TD>QDCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ANCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>NSCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD>ARCOUNT</TD>
			<TD>1</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="3">DNS Question section</TD>
			<TD>QNAME</TD>
			<TD>
			_http._tcp.example.com.
			</TD>
		</TR>
		<TR>
			<TD>QTYPE</TD>
			<TD>SRV (0x0021)</TD>
		</TR>
		<TR>
			<TD>QCLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="9">DNS Answer section</TD>
			<TD>NAME</TD>
			<TD>_http._tcp.example.com. (Pointer 0xC00C)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>SRV (0x0021)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>86400sec</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>23</TD>
		</TR>
		<TR>
			<TD>Priority</TD>
			<TD>10</TD>
		</TR>
		<TR>
			<TD>Weight</TD>
			<TD>20</TD>
		</TR>
		<TR>
			<TD>Port</TD>
			<TD>80</TD>
		</TR>
		<TR>
			<TD>Target</TD>
			<TD>www.example.com.</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Authority section</TD>
			<TD>NAME</TD>
			<TD>example.com (Pointer 0xC017)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>NS (0x0002)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>6</TD>
		</TR>
		<TR>
			<TD>NSDNAME</TD>
			<TD>NS1.example.com (NS1 + Pointer 0xC017)</TD>
		</TR>
		<TR>
			<TD COLSPAN="1" ROWSPAN="6">DNS Additional section</TD>
			<TD>NAME</TD>
			<TD>NS1.example.com (Pointer 0xC057)</TD>
		</TR>
		<TR>
			<TD>TYPE</TD>
			<TD>A (0x0001)</TD>
		</TR>
		<TR>
			<TD>CLASS</TD>
			<TD>IN (0x0001)</TD>
		</TR>
		<TR>
			<TD>TTL</TD>
			<TD>1 day (86400)</TD>
		</TR>
		<TR>
			<TD>RDLENGTH</TD>
			<TD>4</TD>
		</TR>
		<TR>
			<TD>ADDRESS</TD>
			<TD>192.168.0.10</TD>
		</TR>
		</TBODY>
	</TABLE>
	<BR>
	<BR>
	<DD>Exp.
	<BR>
	<DD><TABLE BORDER="1">
		<TBODY>
		<TR>
			<TD>NUT_NETZ</TD>
			<TD>DNS Server1's (NUT) Net-z address</TD>
		</TR>
		<TR>
			<TD>CL1_NETZ</TD>
			<TD>DNS Client1's (TN) Net-z address</TD>
		</TR>
		</TBODY>
	</TABLE>
	</UL>

=end html

=head1 JUDGMENT

	2. Received standard query response including NAPTR resource record.
	4. Received standard query response including NAPTR resource record.
	6. Received standard query response including SRV resource record.

=head1 TERMINATION

	None

=head1 REFERENCE

	RFC3403 Dynamic Delegation Discovery System (DDDS)
                Part Three: The Domain Name System (DNS) Database
	4.1 Packet Format

	RFC3403 Dynamic Delegation Discovery System (DDDS)
                Part Four: The Uniform Resource Identifiers (URI)
	        Resolution Application
	4.3 Flags

=cut
