#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/tunnel/hoplimit.seq,v 1.10 2001/10/05 06:39:23 masaxmasa Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use tunnel;

checkNUT(router);

$IF=$tunnel::IF_ID_0;
$IF1=$tunnel::IF_ID_1;

vCapture($IF);
vCapture($IF1);

$ret=makeNCE_TN_LLA();
if( $ret !=0) {
        vLogHTML("<FONT COLOR=#FF0000><H4>NUT can not be initialized !!</H4></FONT>");
        goto error;
}else {
        vLogHTML("<H4>--- TN can make TN's link local address NCE in TN ---</H4>");
}

$ret=makeNCE_TN_GA();
if( $ret !=0) {
        vLogHTML("<FONT COLOR=#FF0000><H4>NUT can not be initialized !!</H4></FONT>");
        goto error;
}else {
        vLogHTML("<H4>--- TN can make TN's global address NCE in TN ---</H4>");
}

$ret=makeARPTable_LINK1();
if( $ret !=0) {
        vLogHTML("<FONT COLOR=#FF0000><H4>NUT can not convert v4 address to ethernet address !!</H4></FONT>");
        goto error;
}else {
        vLogHTML("<H4>--- NUT can convert v4 address to ethernet address ---</H4>");
}

vSend($IF, v6_echo_request_LINK0_tn2nut_OFFLINK);

%ret=vRecv($IF1,5,0,0,v6overv4_echo_request_LINK1_nut2tn);
if( $ret{status} !=0) {
	vLogHTML("<FONT COLOR=#FF0000><H4>TN can not receive Echo Reply from NUT</H4></FONT><BR>");
	goto error;
}else {
	vLogHTML("<H4>NUT decremets the hop limit</H4><BR>");
}	

######################################
vSend($IF1, v6overv4_echo_request_LINK1_tn2nut);

%ret=vRecv($IF,5,0,0,v6_echo_request_LINK0_nut2tn_OFFLINK);

if( $ret{status} !=0) {
        vLogHTML("<FONT COLOR=#FF0000><H4>TN can not receive Echo Reply from NUT</H4><FONT COLOR=#FF0000>");
        goto error;
}else {
	vLogHTML("<H4>NUT decremets the hop limit</H4>"."<BR>");
    vLogHTML("<H4>TN can receive Echo Reply from NUT</H4>"."<BR>");
    vLogHTML("<H3>OK</H3>");
    exit $V6evalTool::exitPass;
}       
        


error:

vLogHTML("<FONT COLOR=#FF0000><H3>NG</H3></FONT>");
exit $V6evalTool::exitFail;



########################################################################
__END__

=head1 NAME

	hoplimit.seq - Verify that decrease hoplimt when the 
	encapulating packet is forwarded

=head1 TARGET

	Router

=head1 SYNOPSIS

	hoplimt.seq [-tooloption ...] -p 
	hoplimit.def

=head1 INITIALIZATION

=begin html
<PRE>
	Before this test starts, run <A HREF="initialize.html">initialize.seq</A>.
</PRE>

=end html

=head1 TEST PROCEDURE

	This test verifies that NUT decrease hoplimit when forward through tnnnel.
	
	Network Topology

	Link0
	--------------------------
	    |               |
	   TN              NUT
	    |               |
	--------------------------
	Link1

	TN -- (Link0) -- NUT        TN -- (Link1) -- NUT

	---------------------      ------------------------

	- encapsulation, and forwarding a packet
	1.
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0  IPv6 global address        
			dst address : Off-link IPv6 global address
			hoplimit : 64
	
	2.
	In NUT, received ICMPv6 Echo Request packet is encapsulated, 
	and forward IPv4 packet
	
	3.
	<<JUDGMENT>>
	                           <===================
	IPv4 packet encapsulating IPv6 packet
		Outer Header (IPv4)
			src address : NUT Link1 IPv4 address
			dst address : Off-link IPv4 address
		Inner Header (IPv6)
			src address : TN LINK0 IPv6 global address        
			dst address : Off-link IPv6 global address
			hoplimit : 63 (for ISDN router, 62)

	- decapsulation, and forwarding a packet
	4.
                                ===================>
	IPv4 packet encapsulating IPv6 packet
		Outer Header (IPv4)     
			src address : Off-link IPv4 address
			dst address : NUT Link1 IPv4 address        
		Inner Header (IPv6)     
			src address : Off-link IPv6 global address
			dst address : TN LINK0 IPv6 global address        
			hoplimit : 64

	5.
	In NUT, received IPv4 packet is decapsulated, and forward 
	ICMPv6 Echo Request packet.   
	6.
	<< JUDGMENT >>

	<===================
	ICMPv6 Echo Reply
		IPv6 Header
			src address : Off-link IPv6 global address
			dst address : TN LINK0  IPv6 global address        
			hoplimit : 63 (for ISDN router, 62)

=head1 JUDGMENT

	<< PASS >>
		NUT decreased hoplimit 
		

	<< FAIL >>	
		NUT did not decrease hoplimit 


=head1 SEE ALSO

	  perldoc V6evalTool

=cut
