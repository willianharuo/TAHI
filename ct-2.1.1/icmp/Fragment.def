//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/icmp/Fragment.def,v 1.1 2003/03/26 07:47:30 masaxmasa Exp $
// import from ct/spec/Fragment.def
//

#include "./ID.def"

//----------------------------------------------------------------------
// ICMP echo request original packets
//----------------------------------------------------------------------

FEM_icmp6_echo_request(
	echo_request_link_local_1024,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		Identifier = REQ_ID;
		SequenceNumber = SEQ_NO;
		payload = data_size_1024;
	}
)

FEM_icmp6_echo_request(
	echo_request_global_1024,
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		Identifier = REQ_ID;
		SequenceNumber = SEQ_NO;
		payload = data_size_1024;
	}
)

//----------------------------------------------------------------------
// ICMP echo reply original packets
//----------------------------------------------------------------------

FEM_icmp6_echo_reply(
	echo_reply_link_local_1024,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		Identifier = REQ_ID;
		SequenceNumber = SEQ_NO;
		payload = data_size_1024;
	}
)

FEM_icmp6_echo_reply(
	echo_reply_global_1024,
	_HETHER_nut2tn,
	{
		_SRC(NUT_GLOBAL);
		_DST(TN_GLOBAL);
	},
	{
		Identifier = REQ_ID;
		SequenceNumber = SEQ_NO;
		payload = data_size_1024;
	}
)

//----------------------------------------------------------------------
// ICMP echo request (1st fragment)
//----------------------------------------------------------------------

FEM_hdr_ipv6_exth(
	echo_request_1st_link_local,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_request_1st_link_local);
		exthdr = frag_1st;
		upper = payload_1st_link_local;
	}
)

FEM_hdr_ipv6_exth(
	echo_request_1st_global,
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		header = _HDR_IPV6_NAME(echo_request_1st_global);
		exthdr = frag_1st;
		upper = payload_1st_global;
	}
)

//----------------------------------------------------------------------
// ICMP echo request (2nd fragment)
//----------------------------------------------------------------------

FEM_hdr_ipv6_exth(
	echo_request_2nd_link_local,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_request_2nd_link_local);
		exthdr = frag_2nd;
		upper = payload_2nd_link_local;
	}
)

FEM_hdr_ipv6_exth(
	echo_request_2nd_global,
	_HETHER_tn2nut,
	{
		_SRC(TN_GLOBAL);
		_DST(NUT_GLOBAL);
	},
	{
		header = _HDR_IPV6_NAME(echo_request_2nd_global);
		exthdr = frag_2nd;
		upper = payload_2nd_global;
	}
)

//----------------------------------------------------------------------
// Fragment header and payload
//----------------------------------------------------------------------

Hdr_Fragment frag_1st {
	NextHeader = 58;
	FragmentOffset = 0;
	MFlag = 1;
	Identification = FRAG_ID;
}

Hdr_Fragment frag_2nd {
	NextHeader = 58;	// ignored
	FragmentOffset = 65;	// 520/8
	MFlag = 0;
	Identification = FRAG_ID;
}

Payload payload_1st_link_local {
	data = substr(_PACKET_IPV6_NAME(echo_request_link_local_1024), 40, 520);
}

Payload payload_2nd_link_local {
	data = substr(_PACKET_IPV6_NAME(echo_request_link_local_1024), 560, 512);
}

Payload payload_1st_global {
	data = substr(_PACKET_IPV6_NAME(echo_request_global_1024), 40, 520);
}

Payload payload_2nd_global {
	data = substr(_PACKET_IPV6_NAME(echo_request_global_1024), 560, 512);
}

//----------------------------------------------------------------------
// Payload Data
//----------------------------------------------------------------------
Payload data_size_1024 {
	data = repeat(1, 512);
	data = repeat(2, 512);
}

Payload data_size_1452 {
	data=repeat(0xff,1452);
}
