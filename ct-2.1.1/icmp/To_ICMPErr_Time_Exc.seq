#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/icmp/To_ICMPErr_Time_Exc.seq,v 1.1 2003/03/26 07:47:33 masaxmasa Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use icmp;

$IF=Link0;

checkNUT(router);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF);

$ret = mkNCE_Link();

if ($ret != 0) {
	vLog("NUT can not be initialized !!");
	goto error;
}
else {
	vLog("*** TN can make TN's link local address NCE in TN ***");
}

$ret = mkNCE_Global();

if ($ret != 0) {
	vLog("NUT can not be initialized !!");
	goto error;
}
else {
	vLog("*** TN can make TN's global address NCE in TN ***");
}

%pktdesc = (
	time_exceeded_hop_0	=> 'Send Time Exceeded Message with Hoplimit = 0',
	time_exceeded		=> 'Receive ICMP Error (Time Exceeded, hop limit exceeded in transmit)',
	ns_global		=> 'Receive Neighbor Solicitation',
	ns_global_sll		=> 'Receive Neighbor Solicitation',
	na_global		=> 'Send Neighbor Advertisement'
);

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");

vSend($IF, time_exceeded_hop_0);

%ret = vRecv($IF, 5, 0, 0, time_exceeded, ns_global, ns_global_sll);

if ($ret{status} != 0) {
	vLog("TN do not receive ICMPv6 error message from NUT");
	vLog("OK");
	exit($V6evalTool::exitPass);
}
elsif ($ret{recvFrame} eq 'time_exceeded') {
	vLog("TN receive ICMPv6 error message from NUT");
	goto error;
}
elsif ($ret{recvFrame} eq 'ns_global' || $ret{recvFrame} eq 'ns_global_sll') {
	vSend($IF, na_global);

	%ret = vRecv($IF, 5, 0, 0, time_exceeded);
	if ($ret{status} != 0) {
		vLog("TN do not receive ICMPv6 error message from NUT");
		vLog("OK");
		exit($V6evalTool::exitPass);
	}
	elsif ($ret{recvFrame} eq 'time_exceeded') {
		vLog("TN receive ICMPv6 error message from NUT");
		goto error;
	};
}
else {
	vLog("TN receive unexpected packets from NUT");
	goto error;
}   

error:

vLog("FAIL");
exit($V6evalTool::exitFail);


########################################################################
__END__

=head1 NAME

	To_ICMPErr_Time_Exc.seq - check Message Processing Rules (ICMPv6
	Time Exceeded , link local address)

=head1 TARGET

	Router

=head1 SYNOPSIS

	To_ICMPErr_Time_Exc.seq [-tooloption ...] -p To_ICMPErr_Time_Exc.def

=head1 NETWORK CONFIGURATION

        This test is OFF-LINK Network Configuration test.
        
        Physical Network configuration
        
        ---------------------------------------
                |               |
                NUT             TN



        Logical Network Configuration

                                TN
                                |
        ----------------------------------
                        |
                        NUT
                        |
        ----------------------------------
                | 
                OFFLINKA Host

=head1 INITIALIZATION

	When test stars, states of Neighbor Cache Entry for TN's 
	addresses are reachable.

=head1 TEST PROCEDURE

	This test verifies that the message processing rule ,
	
    (e) An ICMPv6 error message MUST NOT be sent as a result of
        receiving:

         (e.1) an ICMPv6 error message, or


	TN			NUT

	---------------------------

	1.
	 === ICMPv6  Time Exceeded  ===>
             
	2.
	<< JUDGMENT >>

     <=== No packets ===
                   or      
	 <=== ICMPv6  Time Exceeded ===
             Code is 0

=head1 JUDGMENT

	<< PASS >>
		NUT do not send ICMPv6 Time Exceeded.

	<< FAIL >>	
		NUT send ICMPv6 Time Exceeded.


=head1 SEE ALSO

	  perldoc V6evalTool

=cut
