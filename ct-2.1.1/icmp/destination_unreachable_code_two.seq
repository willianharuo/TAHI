#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/icmp/destination_unreachable_code_two.seq,v 1.5 2001/10/05 06:38:51 masaxmasa Exp $
########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use icmp;

$IF=Link0;

vCapture($IF);

$ret=makeNCE_TN_LLA();
if( $ret !=0) {
        vLog("NUT can not be initialized !!");
        exit $V6evalTool::exitFail;
}else {
        vLog("*** TN can make TN's link local address NCE in TN ***");
}
$ret=makeNCE_TN_GA();
if( $ret !=0) {
        vLog("NUT can not be initialized !!");
        exit $V6evalTool::exitFail;
}else {
        vLog("*** TN can make TN's global address NCE in TN ***");
}

vSend($IF, echo_request_tn2nut_source_LLA_destination_GA);

%ret=vRecv($IF,5,0,0,destination_unreachable_nut2tn_any_code_two,
				echo_reply_nut2tn_source_LLA_GA_destination_LLA_GA);

if( $ret{status} !=0) {
        vLog("TN can not receive ICMPv6 error message from NUT");
        goto error;
}elsif($ret{recvFrame} eq 'destination_unreachable_nut2tn_any_code_zero') {
        vLog("TN can receive ICMPv6 error message from NUT");
        vLog("OK");
        exit $V6evalTool::exitPass;
}elsif($ret{recvFrame} eq 'echo_reply_nut2tn_source_LLA_GA_destination_LLA_GA') {
        vLog("TN can not receive Echo Reply from NUT");
        vLog("But, if you do not implement draft-ietf-ipngwg-icmp-v3-00.txt");
        vLog("This test is PASS");
        vLog("WARN");
        exit $V6evalTool::exitWarn;
}else {
        vLog("TN receive unexpected packets from NUT");
        goto error;
}   



error:

vLog("FAIL");
exit $V6evalTool::exitFail;


########################################################################
__END__

=head1 NAME

	destination_unreachable_code_two.seq - check ICMPv6 Destination 
	Unreachable code 2 

=head1 TARGET

	Host and Router

=head1 SYNOPSIS

	destination_unreachable_code_two.seq [-tooloption ...] -p 
	destination_unreachable_code_two.def


=head1 INITIALIZATION

	When test stars, states of Neighbor Cache Entry for TN's 
	addresses are reachable.

=head1 TEST PROCEDURE

	This test verifies that NUT sends valid ICMPv6 Destination 
	Unreachable (code 2) in response to a packet whose destina
	-tion is beyond the scope of the source address can not be 
	delivered to destination address.

	(Note that this ICMPv6 (Destination Unreachable code 2)is 
	defined in draft-ietf-ipngwg-icmp-v3-00. thus if NUT don't 
	implement this draft NUT send Echo Reply in response to 
	Echo Request)

	TN			NUT

	---------------------------

	1.
	 === Echo Request packet  ===>
			src address : TN link local address
			dst address : NUT global address
	2.
	<< JUDGMENT >>

	 <=== ICMPv6 Destination Unreachable ===
             Code is 2

=head1 JUDGMENT

	If NUT implemented draft-ietf-ipngwg-icmp-v3-00,

	<< PASS >>
		NUT send ICMPv6 Destination Unreachable.
		

	<< FAIL >>	
		NUT do not send ICMPv6 Destination Unreachable.


=head1 SEE ALSO

	  perldoc V6evalTool

=cut
