#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/icmp/Err_Msg_Size_P_Problem.seq,v 1.2 2003/03/27 07:24:54 masaxmasa Exp $
#----------------------------------------------------------------------

BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use icmp;

$IF = Link0;

#----------------------------------------------------------------------
# Initialization
#----------------------------------------------------------------------

vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");

vCapture($IF);

$ret = mkNCE_Link();

if ($ret != 0) {
	vLog("*** NUT can not be initialized !! ***");
	exit($V6evalTool::exitFail);
}
else {
	vLog("TN created the entry of TN's link-local address to Neighbor cache in NUT.");
};

#----------------------------------------------------------------------
# Test
#----------------------------------------------------------------------
%pktdesc = (
    unknown_nxthdr	=> 'Send a packet (1280 bytes) include unknown next header field value',
    parameter_problem	=> 'Receive Parameter Problem (unrecognized Next Header)'
);

vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");

vSend($IF, unknown_nxthdr);

%ret = vRecv($IF, 5, 0, 0, parameter_problem);

if ($ret{status} != 0) {
	vLog("TN can not receive ICMPv6 error message from NUT");
	goto error;
}
elsif ($ret{recvFrame} eq 'parameter_problem') {
	vLog("TN can receive ICMPv6 Parameter Problem message from NUT");
	vLog("OK");
	exit($V6evalTool::exitPass);
}
else {
	vLog("TN receive unexpected packets from NUT");
	goto error;
}   

error:

vLog("FAIL");
exit($V6evalTool::exitFail);


#----------------------------------------------------------------------

__END__

=head1 NAME

	Err_Msg_Size_P_Problem.seq - check Message Processing Rules (ICMPv6
	Parameter Problem , link local address)

=head1 TARGET

	Host/Router

=head1 SYNOPSIS

	Err_Msg_Size_P_Problem.seq [-tooloption ...] -p Err_Msg_Size_P_Problem.def

=head1 INITIALIZATION

	When test starts, states of Neighbor Cache Entry for TN's 
	addresses are reachable.

=head1 TEST PROCEDURE

	This test verifies that the message processing rule ,
	
	Every ICMPv6 error message (type < 128) includes as much of the
	IPv6 offending (invoking) packet (the packet that caused the
	error) as will fit without making the error message packet
	exceed the minimum IPv6 MTU [IPv6].


	TN			NUT

	---------------------------

	1.
	 === IPv6 packet  ===>
		next header  is not used in NUT
		packet size is 1280 octets
	2.
	<< JUDGMENT >>

	 <=== ICMPv6 Prameter Problem ===
		Code is 1
		Pointer is 40
			packet size is 1280 octets

=head1 JUDGMENT

	<< PASS >>
		NUT send ICMPv6 ICMPv6 Parameter Problem.
		

	<< FAIL >>	
		NUT do not send ICMPv6 Parameter Problem.


=head1 SEE ALSO

	  perldoc V6evalTool

=cut
