//
// Copyright (C) 2002, 2003 Yokogawa Electric Corporation, 
// INTAP(Interoperability Technology Association for Information 
// Processing, Japan), IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
// $TINY: LCNA_RAwMTUopt.def,v 1.3 2002/03/05 02:59:08 masaxmasa Exp $
// 

#include "PMTU.def"

///////////////////////////////////
//
// Packets for HOST A or related A
//
///////////////////////////////////

//////////////////////////
// Ping packet
// size 1280


FEM_icmp6_echo_request(
         echo_request_1280_from_A,
         _HETHER_tn2nut,
        {
                 _SRC(v6("3ffe:501:ffff:10a0::1"));
                 _DST(NUT_GLOBAL_ADDRESS);
        },
        {
                 payload=ping_data_1232;
        }
)


FEM_icmp6_echo_reply(
         echo_reply_1280_to_A,
         _HETHER_nut2tn,
        {
                 _SRC(NUT_GLOBAL_ADDRESS);
                 _DST(v6("3ffe:501:ffff:10a0::1"));
        },
        {
                 payload=ping_data_1232;
        }
)


///////////////////////////////////
//
// Packets for HOST A or related A
//
///////////////////////////////////


// size 1500


FEM_icmp6_echo_request(
         echo_request_1500_from_A,
         _HETHER_tn2nut,
        {
                 _SRC(v6("3ffe:501:ffff:10a0::1"));
                 _DST(NUT_GLOBAL_ADDRESS);
        },
        {
                 payload=ping_data_1452;
        }
)


FEM_icmp6_echo_reply(
         echo_reply_1500_to_A,
         _HETHER_nut2tn,
        {
                 _SRC(NUT_GLOBAL_ADDRESS);
                 _DST(v6("3ffe:501:ffff:10a0::1"));
        },
        {
                 payload=ping_data_1452;
        }
)

// size 1400


FEM_icmp6_echo_request(
         echo_request_1400_from_A,
         _HETHER_tn2nut,
        {
                 _SRC(v6("3ffe:501:ffff:10a0::1"));
                 _DST(NUT_GLOBAL_ADDRESS);
        },
        {
                 payload=ping_data_1352;
        }
)


FEM_icmp6_echo_reply(
         echo_reply_1400_to_A,
         _HETHER_nut2tn,
        {
                 _SRC(NUT_GLOBAL_ADDRESS);
                 _DST(v6("3ffe:501:ffff:10a0::1"));
        },
        {
                 payload=ping_data_1352;
        }
)


//////////////////////////
// Fragmented packets

// size = 1280

PMTU_fragment( 
        frag_echo_reply_1400_1st_mtu1280_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=0;
             MFlag=1;  
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1400_to_A),40,1232);
        }
)

PMTU_fragment(
        frag_echo_reply_1400_2nd_mtu1280_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=154;
             MFlag=0;
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1400_to_A),1272,128);
        }
)

// size = 1280


PMTU_fragment( 
        frag_echo_reply_1500_1st_mtu1280_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=0;
             MFlag=1;  
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1500_to_A),40,1232);
        }
)


PMTU_fragment(
        frag_echo_reply_1500_2nd_mtu1280_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=154;
             MFlag=0;
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1500_to_A),1272,228);
        }
)

// size = 1280


PMTU_fragment( 
        frag_echo_request_1500_1st_mtu1280_A,
        _HETHER_tn2nut,
                {
                NextHeader=44;
                _SRC(v6("3ffe:501:ffff:10a0::1"));
                _DST(NUT_GLOBAL_ADDRESS);
        },
                {
             NextHeader=58;
             FragmentOffset=0;
             MFlag=1;  
             Identification=65001;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_request_1500_from_A),40,1232);
        }
)


PMTU_fragment(
        frag_echo_request_1500_2nd_mtu1280_A,
        _HETHER_tn2nut,
                {
                NextHeader=44;
                _SRC(v6("3ffe:501:ffff:10a0::1"));
                _DST(NUT_GLOBAL_ADDRESS);
        },
                {
             NextHeader=58;
             FragmentOffset=154;
             MFlag=0;
             Identification=65001;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_request_1500_from_A),1272,228);
        }
)


// size = 1400


PMTU_fragment( 
        frag_echo_reply_1500_1st_mtu1400_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=0;
             MFlag=1;  
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1500_to_A),40,1352);
        }
)


PMTU_fragment(
        frag_echo_reply_1500_2nd_mtu1400_A,
        _HETHER_nut2tn,
                {
                NextHeader=44;
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
        },
                {
             NextHeader=58;
             FragmentOffset=169;
             MFlag=0;
             Identification=any;
        },
                {
        data=substr(_PACKET_IPV6_NAME(echo_reply_1500_to_A),1392,108);
        }
)


//////////////////////////
// ICMP Parameter Problem
// 
  

FEM_icmp6_parameter_problem(
        Param_unrecog_frag_echo_request_1500_1st_mtu1280_A,
        _HETHER_nut2tn,
        {
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
		HopLimit=any;
        },
        { 
                Code = 1;       // unrecognized Next Header type encountered
                Pointer = 40;   // (40)
                payload = err1;
        }
)
         
//
// data  
//

Payload err1 {
        data = substr(_PACKET_IPV6_NAME(frag_echo_request_1500_1st_mtu1280_A),0,1232);
}




FEM_icmp6_parameter_problem(
        Param_unrecog_frag_echo_request_1500_2nd_mtu1280_A,
        _HETHER_nut2tn,
        {
                _SRC(NUT_GLOBAL_ADDRESS);
                _DST(v6("3ffe:501:ffff:10a0::1"));
		HopLimit=any;
        },
        { 
                Code = 1;       // unrecognized Next Header type encountered
                Pointer = 40;   // (40)
                payload = err2;
        }
)
         
//
// data  
//

Payload err2 {
        data = right(_PACKET_IPV6_NAME(frag_echo_request_1500_2nd_mtu1280_A),0);
}
