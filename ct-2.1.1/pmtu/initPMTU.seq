#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/pmtu/initPMTU.seq,v 1.20 2003/03/26 10:32:33 miyata Exp $

########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ '; }
use V6evalTool;
use PMTU_ORG;

%pktdesc = (
	frag1 => 'TN --Fragmented Echo Request 1st 800/1460-> NUT',
	frag2 => 'TN --Fragmented Echo Request 2nd 660/1460-> NUT',
	receive_reply => 'TN <-A Echo Reply-- NUT'
);

checkNUT(hostrouter);

$IF=Link0;

rebootNUT();

vCapture($IF);

$ret=initNUT();
if( $ret !=0) {
        vLog("NUT can not be initialized !!");
		vLog("FAIL");
        exit $V6evalTool::exitFail;
}
	
vSend($IF,frag1);

vSend($IF,frag2);

%ret=vRecv($IF,5,0,0,receive_reply);
if( $ret{status} !=0) {
        vLog("Can not receive Echo Reply !!");
		vLog("FAIL");
        exit $V6evalTool::exitFail;
}

vLog("Success: Initialized Path MTU of this path in NUT ");
vLog(OK);
exit $V6evalTool::exitPass;



########################################################################
__END__

=head1 NAME

	initPMTU - Verify that the NUT initialize Path MTU

=head1 TARGET

	Host

=head1 SYNOPSIS

	initPMTU.seq [-tooloption ...] -p initPMTU.def

=head1 NETWORK CONFIGURATION

	This test is OFF-LINK Network Configuration test.
	In this test, TN play a Roll of the Router.
	
	Phisical Network configuration
	
	---------------------------------------
		|		|
		NUT		TN



	Logical Network Configuration

				HOST A (globaladdress:A)
				|
	----------------------------------
			|
			Router
			|
	----------------------------------
		| 
		NUT (globaladdress:B)

	NUT < --- Router --- > HOST A

	In this configuration, Packets are send and received. 

	for example,
		In Logical
			HOST A           -- Echo Reply --> NUT
		Actually, in physical
			TN (as Router X) -- Echo Reply --> NUT

=head1 INITIALIZATION

	There are 2 patterns for initialize.	

	-- Test for host --

        The TN send a RA to assign global address prefix.

        TN              NUT

        -------------------

        ===multicast RA===>
        src=TN's link-local
        dst=LinkLocal-all-node                                                  
        M=0, O=0,
        Lifetime=3600, ReachableTime=60000, RetransTImer=1005
        Prefix:
           L=1, A=1,                       
           ValidLifetime=3600005, PreferredLifetime=3600005
           Prefix=3ffe:501:ffff:100::, PrefixLength=64                      
   
          Wait (5 sec.)
                 Ignoring DAD packets for global address.                 

	-- Test for router --

	TN attempt to execute remote command 'vRemote(route.rmt)'.
	
	'route add -inet6 3ffe:501:ffff:109 TN'slink-local-address' 

=head1 TEST PROCEDURE

	"initPMTU" verifies that the node sets Path MTU of a path
	 to the MTU of the first hop in the path.

	TN			NUT

	---------------------------

	1.
	After NUT is initialized ( reboot e.t.c) , NUT sets 
	the Path MTU of a path to 1500 of Ether's Link MTU.

	2.
	TN send Echo Request which is fragmented.

	 === echo request 1st ===>


	 === echo request 2nd ===>

	3.
	<< JUDGMENT >>
	NUT send Echo Reply 

	 <=== echo reply ===


=head1 JUDGMENT

	<< PASS >>
		NUT send Echo Reply which is no fragmented.
		
		NUT's Path MTU sets 1500 which is Ether Link MTU.

	<< FAIL >>	
		NUT send Echo Reply which is fragmented.
		
		NUT can not initialize Path MTU of MTU.

		etc.


=head1 SEE ALSO

	  perldoc V6evalTool
	  perldoc V6evalRemote

=cut
