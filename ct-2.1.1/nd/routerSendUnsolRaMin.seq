#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/nd/routerSendUnsolRaMin.seq,v 1.6 2002/02/27 01:08:29 masaxmasa Exp $

########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ '; }
 
use V6evalTool;
use nd;
use ra;

ndOptions(@ARGV);

# The following generate debugging messages.
$nd::debug=$ndOpt_v|$ndOpt_vv;

# You can specifies debug options to a remote control program.
# If you want to know more detail, please see the following:
# - V6evalTool.pm: perldoc V6evalTool
# - V6evalRemote.pm: perldoc V6evalRemote
$nd::remote_debug="-o1" if $ndOpt_vv;

$IF=Link0;
$wait_ra=$ra::minRAmaxInterval*2;

#
#
#
$type=$V6evalTool::NutDef{Type};
if($type eq host) {
    vLogHTML("This test is for the router only<BR>");
    exit $V6evalTool::exitRouterOnly;
}

$type=$V6evalTool::NutDef{Type};
if($type ne router) {
    vLogHTML(ndErrmsg("ERROR: $V6evalTool::NutDef{Type}: ".
		      "Unknown target type<BR>"));
    exit $V6evalTool::exitFail;
}

#
#
#
raStartMinRA() || exit $V6evalTool::exitFail;

#
#
#
vCapture($IF);

#
#
#
$r=raRecvMinRA($IF, $wait_ra, 0, 0, %ret);
if($ret{status} != 0 || $r == 0) {
    $exit_rtn=$V6evalTool::exitFail;
    goto end;
}

#
#
#
end:
    if($exit_rtn == $V6evalTool::exitPass) {
	vLogHTML("OK<BR>");
    } else {
	vLogHTML(ndErrmsg("NG<BR>"));
    }
    exit $exit_rtn;

########################################################################
__END__

=head1 NAME

routerSendUnsolRaMin - NUT sends configured RAs.

=head1 TARGET

  Router only

=head1 SYNOPSIS

  routerSendUnsolRaMin.seq [-tooloption ...] -p routerSendUnsolRaMin.def

=head1 INITIALIZATION

  Start NUT advertising RAs:

    MaxRtrAdvInterval                   10
    MinRtrAdvInterval                   7
    AdvCurHopLimit                      64
    AdvManagedFlag&AdvOtherConfigFlag   False
    AdvDefaultLifetime                  0 (min value)
    AdvReachableTime                    0 (min value)
    AdvRetransTimer                     0 (min value)
    AdvOnlinkFlag&AdvAutonomousFlag     True
    AdvValidLifetime                    2592000
    AdvPerferredLifetime                604800
    AdvLinkMTU                          1500

=head1 TEST PROCEDURE

=begin html
<B>routerSendUnsolRaMin</B> verifies that NUT sends RAs
<UL>
<LI>whose parameters are as same as <A HREF="#INITIALIZATION">configured</A>.
<LI>that may contain a Prefix option and/or a MUT option and/or SLL option.
</UL>

=end html

=head1 TERMINATION

  N/A

=head1 NOTE

  TBD

=head1 SEE ALSO

  perldoc V6evalTool
  perldoc V6evalRemote

=cut
