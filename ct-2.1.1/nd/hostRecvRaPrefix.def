// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/nd/hostRecvRaPrefix.def,v 1.2 2001/10/05 06:39:06 masaxmasa Exp $

#include "nd.def"

//----------------------------------------------------------------------
_HETHER_define(hether_w2allnode, ether(A0N_MAC_ADDR),
	v62ethermulti(v6(_ALLNODES_MCAST_ADDR)))
_SLLOPT_define(sllopt_w, ether(A0N_MAC_ADDR))

_HETHER_define(hether_x2allnode, ether(A1N_MAC_ADDR),
	v62ethermulti(v6(_ALLNODES_MCAST_ADDR)))
_SLLOPT_define(sllopt_x, ether(A1N_MAC_ADDR))

_HETHER_define(hether_y2allnode, ether(A2N_MAC_ADDR),
	v62ethermulti(v6(_ALLNODES_MCAST_ADDR)))
_SLLOPT_define(sllopt_y, ether(A2N_MAC_ADDR))

_HETHER_define(hether_z2allnode, ether(A3N_MAC_ADDR),
	v62ethermulti(v6(_ALLNODES_MCAST_ADDR)))
_SLLOPT_define(sllopt_z, ether(A3N_MAC_ADDR))

//----------------------------------------------------------------------
// multicast RA
//	W(link-local) ==> all-node
//	m=0, o=0
//	lifetime=600, reachableTime=0, retransTimer=0
//	w/ SLLA
//	w/ prefix
//		l=1/0, a=1/0
//		ValidLifetime=2592000, PreferredLifetime=604800;
//----------------------------------------------------------------------
FEM_icmp6_ra(ra_w2allnode_LA, hether_w2allnode,
	{
	 _SRC(v6ether(A0N_MAC_ADDR));
	 _DST(v6(_ALLNODES_MCAST_ADDR));
	 HopLimit=255;
	},
	{
	 CurHopLimit=0;
	 MFlag=0;
	 OFlag=0;
	 LifeTime=600;
	 ReachableTime=0;
	 RetransTimer=0;
	 option=sllopt_w;
	 option=prefixopt_0_LA;
	}
)

//----------------------------------------------------------------------
Opt_ICMPv6_Prefix prefixopt_0_LA {
//      Type=3;
//      Length=4;
        PrefixLength=_GLOBAL0_UCAST_PRFXLEN;
        LFlag=1;
        AFlag=1;        
//      Reserved1=ZERO; 
        ValidLifetime=2592000;
        PreferredLifetime=604800;
//      Reserved2=ZERO; 
        Prefix=v6(_GLOBAL0_UCAST_PRFX);
}

//----------------------------------------------------------------------
FEM_icmp6_ra(ra_x2allnode_La, hether_x2allnode,
	{
	 _SRC(v6ether(A1N_MAC_ADDR));
	 _DST(v6(_ALLNODES_MCAST_ADDR));
	 HopLimit=255;
	},
	{
	 CurHopLimit=0;
	 MFlag=0;
	 OFlag=0;
	 LifeTime=600;
	 ReachableTime=0;
	 RetransTimer=0;
	 option=sllopt_x;
	 option=prefixopt_1_La;
	}
)

//----------------------------------------------------------------------
Opt_ICMPv6_Prefix prefixopt_1_La {
//      Type=3;
//      Length=4;
        PrefixLength=_GLOBAL1_UCAST_PRFXLEN;
        LFlag=1;
        AFlag=0;        
//      Reserved1=ZERO; 
        ValidLifetime=2592000;
        PreferredLifetime=604800;
//      Reserved2=ZERO; 
        Prefix=v6(_GLOBAL1_UCAST_PRFX);
}

//----------------------------------------------------------------------
FEM_icmp6_ra(ra_y2allnode_lA, hether_y2allnode,
	{
	 _SRC(v6ether(A2N_MAC_ADDR));
	 _DST(v6(_ALLNODES_MCAST_ADDR));
	 HopLimit=255;
	},
	{
	 CurHopLimit=0;
	 MFlag=0;
	 OFlag=0;
	 LifeTime=600;
	 ReachableTime=0;
	 RetransTimer=0;
	 option=sllopt_y;
	 option=prefixopt_2_lA;
	}
)

//----------------------------------------------------------------------
Opt_ICMPv6_Prefix prefixopt_2_lA {
//      Type=3;
//      Length=4;
        PrefixLength=_GLOBAL2_UCAST_PRFXLEN;
        LFlag=0;
        AFlag=1;        
//      Reserved1=ZERO; 
        ValidLifetime=2592000;
        PreferredLifetime=604800;
//      Reserved2=ZERO; 
        Prefix=v6(_GLOBAL2_UCAST_PRFX);
}

//----------------------------------------------------------------------
FEM_icmp6_ra(ra_z2allnode_la, hether_z2allnode,
	{
	 _SRC(v6ether(A3N_MAC_ADDR));
	 _DST(v6(_ALLNODES_MCAST_ADDR));
	 HopLimit=255;
	},
	{
	 CurHopLimit=0;
	 MFlag=0;
	 OFlag=0;
	 LifeTime=600;
	 ReachableTime=0;
	 RetransTimer=0;
	 option=sllopt_z;
	 option=prefixopt_3_la;
	}
)

//----------------------------------------------------------------------
Opt_ICMPv6_Prefix prefixopt_3_la {
//      Type=3;
//      Length=4;
	PrefixLength=_GLOBAL3_UCAST_PRFXLEN;
        LFlag=0;
        AFlag=0;        
//      Reserved1=ZERO; 
        ValidLifetime=2592000;
        PreferredLifetime=604800;
//      Reserved2=ZERO; 
        Prefix=v6(_GLOBAL3_UCAST_PRFX);
}

//----------------------------------------------------------------------
// echo-request
//      TN(global) ==> NUT(global)
//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2g_p0, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL0_UCAST_PRFX, _GLOBAL0_UCAST_PRFXLEN));
         _DST(nut2v6(_GLOBAL0_UCAST_PRFX, _GLOBAL0_UCAST_PRFXLEN));},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2g_p1, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL1_UCAST_PRFX, _GLOBAL1_UCAST_PRFXLEN));
         _DST(nut2v6(_GLOBAL1_UCAST_PRFX, _GLOBAL1_UCAST_PRFXLEN));},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2g_p2, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL2_UCAST_PRFX, _GLOBAL2_UCAST_PRFXLEN));
         _DST(nut2v6(_GLOBAL2_UCAST_PRFX, _GLOBAL2_UCAST_PRFXLEN));},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2g_p3, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL3_UCAST_PRFX, _GLOBAL3_UCAST_PRFXLEN));
         _DST(nut2v6(_GLOBAL3_UCAST_PRFX, _GLOBAL3_UCAST_PRFXLEN));},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
// echo-request
//      TN(global) ==> NUT(link-local)
//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2l_p0, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL0_UCAST_PRFX, _GLOBAL0_UCAST_PRFXLEN));
         _DST(nutv6());
	},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2l_p1, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL1_UCAST_PRFX, _GLOBAL1_UCAST_PRFXLEN));
         _DST(nutv6());
	},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2l_p2, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL2_UCAST_PRFX, _GLOBAL2_UCAST_PRFXLEN));
         _DST(nutv6());
	},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
FEM_icmp6_echo_request(echo_request_g2l_p3, _HETHER_tn2nut,
        {
         _SRC(tn2v6(_GLOBAL3_UCAST_PRFX, _GLOBAL3_UCAST_PRFXLEN));
         _DST(nutv6());
	},
        {
         payload=echo_data;
        }
)

//----------------------------------------------------------------------
Payload echo_data {
        data=repeat(0x11,10);
}

//----------------------------------------------------------------------


