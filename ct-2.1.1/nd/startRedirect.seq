#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/nd/startRedirect.seq,v 1.9 2002/02/27 01:08:29 masaxmasa Exp $

########################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ '; }
 
use V6evalTool;
use nd;
use routerRedirect;

ndOptions(@ARGV);

# The following generate debugging messages.
$nd::debug=$ndOpt_v|$ndOpt_vv;

# You can specifies debug optons to a remote control program.
# If you want to know more detail, please see the following:
# - V6evalTool.pm: perldoc V6evalTool
# - V6evalRemote.pm: perldoc V6evalRemote
$nd::remote_debug="-o1" if $ndOpt_vv;

#
#
#
$type=$V6evalTool::NutDef{Type};
if($type eq host) {
    vLogHTML("This test is for the router only<BR>");
    exit $V6evalTool::exitRouterOnly;
}

$type=$V6evalTool::NutDef{Type};
if($type ne router) {
    vLogHTML(ndErrmsg("ERROR: $V6evalTool::NutDef{Type}: ".
		      "Unknown target type<BR>"));
    exit $V6evalTool::exitFail;
}

#
#
#
$IF=Link0;
vCapture($IF);

#
#
#
rrdSetRdEnv($IF) || goto error;

#
#
#
vLogHTML("OK<BR>");
exit $V6evalTool::exitIgnore;

error:
    vLogHTML(ndErrmsg("NG<BR>"));
    exit $V6evalTool::exitFail;

########################################################################
__END__

=head1 NAME

startRedirect - TBD

=head1 TARGET

  Router Only

=head1 SYNOPSIS

  startRedirect.seq [-tooloption ...] -p startRedirect.def

=head1 INITIALIZATION

=begin html
The initialization configures NUT as the followings:
<UL>
<LI>Assign "3ffe:501:ffff:108:200:ff:fe00:a0a0" to the i/f specified as Link0.
<LI>Set the route 3ffe:501:ffff:109::/64  to R1's link-local (fe80::200:ff:fe00:a1a1)
</UL>
<PRE>
        [NUT]
          | 3ffe:501:ffff:100::ifid
          | <B>3ffe:501:ffff:108:200:ff:fe00:a0a0</B>
          | <B>route 3ffe:501:ffff:109::/64 to R1's link-local</B>
          |                                                  3ffe:501:ffff:100/64
  ---+----+----+------------------------------------+------- 3ffe:501:ffff:108/64
     |         |                                    |
     |         | 3ffe:501:ffff:100:200:ff:fe00:a1a1 | 3ffe:501:ffff:100:200:ff:fe00:a2a2
     |         | 3ffe:501:ffff:108:200:ff:fe00:a1a1 | 3ffe:501:ffff:108:200:ff:fe00:a2a2
    [TN]      [R1]                                 [H2]
               |
               |
         ------+------ 3ffe:501:ffff:109/64
               |
               | 3ffe:501:ffff:109:200:ff:fe00:a3a3
              [H3]
</PRE>
<OL> Initialization sequences:
<LI>Set a global address (3ffe:501:ffff:108:200:ff:fe00:a0a0) on the NUT's interface.
<LI>Wait for DAD NS if any.
<LI>Set a route (3ffe:501:ffff:109::/64) to R1 's link-local address (fe80::200:ff:fe00:a1a1)
    on the NUT's routing table.
<LI>Wait for NSs if any.
<LI>Send a solicited NA w/ SLL.
    It is ok if the NUT does not create related neighbor cache entry
    because the following tests create the neighbor cache by themselves.
    Is is meaningless in almost case.
</OL>

=end html

=head1 TEST PROCEDURE

  N/A

=head1 JUDGMENT

  N/A

=head1 TERMINATION

  N/A

=head1 NOTE

  TBD

=head1 SEE ALSO

  perldoc V6evalTool
  perldoc V6evalRemote

=cut
