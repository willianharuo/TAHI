#!/usr/bin/perl
#
# Copyright (C) 2002, 2003 Yokogawa Electric Corporation, 
# INTAP(Interoperability Technology Association for Information 
# Processing, Japan), IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/ipsec/HTR_C_In_rijndaelcbc_SPD_discard_none.seq,v 1.3 2003/06/06 09:02:17 ozoe Exp $
#
######################################################################
BEGIN {
    unshift(@INC, '../ipsec/');
    $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ ';
}

use V6evalTool;
use IPSEC;

%pktdesc = (
	    ### TBD
);
$IF = Link0;

#----- check NUT type

ipsecCheckNUT(host);

#----- set SAD,SPD
vLogHTML("<FONT SIZE=3>*** Target initialization phase ***</FONT><BR>");

ipsecClearAll();

## HOST1 vs NUT
ipsecSetSAD(
	"src=$IPSEC::IPsecAddr{IPSEC_HOST1_NET5_ADDR}" ,
	"dst=$IPSEC::IPsecAddr{IPSEC_NUT_NET3_ADDR}" ,
	"spi=0x1000" ,
	"mode=transport" ,
	"protocol=esp" ,
	"ealgo=rijndael-cbc" ,
	"ealgokey=TAHITEST89ABCDEF"
	);

ipsecSetSPD(
	"src=$IPSEC::IPsecAddr{IPSEC_HOST1_NET5_ADDR}" ,
	"dst=$IPSEC::IPsecAddr{IPSEC_NUT_NET3_ADDR}" ,
	"upperspec=any" ,
	"direction=in" ,
	"policy=discard" ,
	);

## HOST2 vs NUT
ipsecSetSAD(
	"src=$IPSEC::IPsecAddr{IPSEC_HOST2_NET5_ADDR}" ,
	"dst=$IPSEC::IPsecAddr{IPSEC_NUT_NET3_ADDR}" ,
	"spi=0x2000" ,
	"mode=transport" ,
	"protocol=esp" ,
	"ealgo=rijndael-cbc" ,
	"ealgokey=foo0foo1foo2foo3"
	);

ipsecSetSPD(
	"src=$IPSEC::IPsecAddr{IPSEC_HOST2_NET5_ADDR}" ,
	"dst=$IPSEC::IPsecAddr{IPSEC_NUT_NET3_ADDR}" ,
	"upperspec=any" ,
	"direction=in" ,
	"policy=none" ,
	);

#======================================================================
vLogHTML("<FONT SIZE=3>*** Target testing phase ***<FONT><BR>");
vCapture($IF);

if ($IPSEC::IPsecAddr{IPSEC_IPVERSION} == 4) {
} else {
## RA

vSend($IF, ra_to_nut);
vSleep(3);
}

#### subtest No.1
$subtest_no = 1;
$subtest_title[$subtest_no] = "Discard the packet if policy=discard";
vLogHTML("<FONT SIZE=4>Subtest No.$subtest_no: $subtest_title[$subtest_no]</FONT><BR>");

($stat, %ret) = ipsecPing2NUT($IF, 'echo_request_from_host1', 'echo_reply_to_host1');

if ($stat ne 'NO_REPLY') {
    vLogHTML("TN received something reply packet from NUT to HOST1.<BR>");
    $ret = 'FAIL';
} else {
    vLogHTML("TN received no echo reply from NUT to HOST2.<BR>");
    vLogHTML("Ping over 1st SPD entry (policy=discard) is available.<BR>");
    $ret = 'PASS';
}

vLogHTML("Subtest No.$subtest_no $ret<BR><BR>");
$subtest_results[$subtest_no] = $ret;


#### subtest No.2
$subtest_no = 2;
$subtest_title[$subtest_no] = "Pass the packet without IPsec process if policy=none";
vLogHTML("<FONT SIZE=4>Subtest No.$subtest_no: $subtest_title[$subtest_no]</FONT><BR>");

($stat, %ret) = ipsecPing2NUT($IF, 'echo_request_from_host2', 'echo_reply_to_host2');

if ($stat ne 'GOT_REPLY') {
    vLogHTML("TN received no echo reply from NUT to HOST2.<BR>");
    $ret = 'FAIL';
} else {
    vLogHTML("TN received echo reply from NUT to HOST2.<BR>");
    vLogHTML("Ping over 2nd SPD entry (policy=none) is available.<BR>");
    $ret = 'PASS';
}

vLogHTML("Subtest No.$subtest_no $ret<BR><BR>");
$subtest_results[$subtest_no] = $ret;


### resluts table
vLogHTML("Subtest Results<BR>");
for($i=1; $i < @subtest_title; $i++) {
    vLogHTML("|$i| $subtest_title[$i] | $subtest_results[$i] |<BR>");
    $test_results = 'FAIL' if $subtest_results[$i] eq 'FAIL';
}

if ($test_results eq 'FAIL') {
    ipsecExitFail();
}else{
    ipsecExitPass();
}


######################################################################
__END__

=head1 NAME

  HTR_C_In_rijndaelcbc_SPD_discard_none - Host Common Inbound, Select SPD entry (policy=discard,none), ESP(RIJNDAEL-CBC)
  

=head1 TARGET

  Host

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./HTR_C_In_rijndaelcbc_SPD_discard_none.seq">HTR_C_In_rijndaelcbc_SPD_discard_none.seq</A> [-tooloption ...] -pkt <A HREF="./HTR_E_SPD_discard_none.def">HTR_E_SPD_discard_none.def</A>
    -tooloption : v6eval tool option
  See also <A HREF="./HTR_common.def">HTR_common.def</A>
</PRE>

=end html

=head1 INITIALIZATION

=begin html
<P>
For details of Network Topology, see <A HREF="00README">00README</A>
</P>
<P>
Set NUT's SAD and SPD as following:
</P>
<PRE>
              NET5      NET3
    HOST1_NET5 -+ Router -- NUT
         ---policy=discard-->
                |
    HOST2_NET5 -+
         ---policy=none----->
</PRE>
<P>
Security Association Database (SAD)
</P>
<TABLE border="1">
  <TR>
    <TD>source address</TD>
    <TD>HOST1_NET5</TD></TR>
  <TR>
    <TD>destination address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>SPI</TD>
    <TD>0x1000</TD></TR>
  <TR>
    <TD>mode</TD>
    <TD>transport</TD></TR>
  <TR>
    <TD>protocol</TD>
    <TD>ESP</TD></TR>
  <TR>
    <TD>ESP algorithm</TD>
    <TD>RIJNDAEL-CBC</TD></TR>
  <TR>
    <TD>ESP algorithm key</TD>
    <TD>TAHITEST89ABCDEF</TD></TR>
</TABLE>
<P>
Security Policy Database (SPD) for policy=discard
</P>
<TABLE border="1">
  <TR>
    <TD>source address</TD>
    <TD>HOST1_NET5</TD></TR>
  <TR>
    <TD>destination address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>upper spec</TD>
    <TD>any</TD></TR>
  <TR>
    <TD>direction</TD>
    <TD>in</TD></TR>
  <TR>
    <TD>policy</TD>
    <TD>discard</TD></TR>
</TABLE>
<P>
Security Association Database (SAD)
</P>
<TABLE border="1">
  <TR>
    <TD>source address</TD>
    <TD>HOST2_NET5</TD></TR>
  <TR>
    <TD>destination address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>SPI</TD>
    <TD>0x1000</TD></TR>
  <TR>
    <TD>mode</TD>
    <TD>transport</TD></TR>
  <TR>
    <TD>protocol</TD>
    <TD>ESP</TD></TR>
  <TR>
    <TD>ESP algorithm</TD>
    <TD>RIJNDAEL-CBC</TD></TR>
  <TR>
    <TD>ESP algorithm key</TD>
    <TD>foo0foo1foo2foo3</TD></TR>
</TABLE>
<P>
Security Policy Database (SPD) for policy=discard
</P>
<TABLE border="1">
  <TR>
    <TD>source address</TD>
    <TD>HOST2_NET5</TD></TR>
  <TR>
    <TD>destination address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>upper spec</TD>
    <TD>any</TD></TR>
  <TR>
    <TD>direction</TD>
    <TD>in</TD></TR>
  <TR>
    <TD>policy</TD>
    <TD>none</TD></TR>
</TABLE>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
 Tester                      Target
   |                           |
 Subtest No.1 "Discard the packet if policy=discard"
   |-------------------------->|
   |      ICMP Echo Request    |
   |      for policy=discard   |
   |                           |
   |(<------------------------)|
   |          No Reply         |
   |        Judgment #1       |
   |                           |
 Subtest No.2 "Pass the packet without IPsec process if policy=none"
   |                           |
   |-------------------------->|
   |      ICMP Echo Request    |
   |      for policy=none      |
   |                           |
   |<--------------------------|
   |      ICMP Echo Reply      |
   |        Judgment #2       |
   |                           |
   v                           v
</PRE>
<P>
ICMP Echo Request for policy=discard
</P>
<TABLE border="1">
  <TR>
    <TD>IP Header</TD>
    <TD>Source Address</TD>
    <TD>HOST1_NET5</TD></TR>
  <TR>
    <TD></TD>
    <TD>Destination Address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>ICMP</TD>
    <TD>Type</TD>
    <TD>128 (Echo Request)</TD></TR>
</TABLE>
<P>
ICMP Echo Request for policy=none
</P>
<TABLE border="1">
  <TR>
    <TD>IP Header</TD>
    <TD>Source Address</TD>
    <TD>HOST2_NET5</TD></TR>
  <TR>
    <TD></TD>
    <TD>Destination Address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD>ICMP</TD>
    <TD>Type</TD>
    <TD>128 (Echo Request)</TD></TR>
</TABLE>
<P>
ICMP Echo Reply
</P>
<TABLE border="1">
  <TR>
    <TD>IP Header</TD>
    <TD>Source Address</TD>
    <TD>NUT_NET3</TD></TR>
  <TR>
    <TD></TD>
    <TD>Destination Address</TD>
    <TD>HOST2_NET5</TD></TR>
  <TR>
    <TD>ICMP</TD>
    <TD>Type</TD>
    <TD>129 (Echo Reply)</TD></TR>
</TABLE>


=end html

=head1 JUDGMENT

  Judgment #1:
      No Reply
  Judgment #2:
      ICMP Echo Reply received

=head1 SEE ALSO

  perldoc V6evalTool

=begin html
<PRE>
  <A HREF="./IPSEC.html">IPSEC.html</A> IPsec Test Common Utility
</PRE>

=cut

