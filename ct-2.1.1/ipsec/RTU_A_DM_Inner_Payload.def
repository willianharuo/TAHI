//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $Name: REL_2_1_1 $
//
// $TAHI: ct/ipsec/RTU_A_DM_Inner_Payload.def,v 1.2 2001/10/05 06:38:55 masaxmasa Exp $
//

#include "./RTU_A_common.def"
//======================================================================
//
// AH/ESP definition
//


//======================================================================
//
// Real packet definition with IPsec AH
//

FEM_icmp6_echo_request(
	echo_request_from_host1_net4_to_host1_net1_on_net1_cracked,
	hether_nut2host1,
	{
		_SRC(v6(IPSEC_HOST1_NET4_ADDR));
		_DST(v6(IPSEC_HOST1_NET1_ADDR));
	},
	{
		payload = echo_data_cracked; // cracked data
	//	payload = IPSEC_ECHO_DATA;   // original data
	}
)

Payload echo_data_cracked {
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // "cracked "
}

FEM_hdr_ipv6_exth(
	ahtun_from_sg1_net2_real1 ,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_SG1_NET2_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));

	},
	{
		header = _HDR_IPV6_NAME(ahtun_from_sg1_net2_real1);
		exthdr = ah_from_sg_sn2;
		upper = _PACKET_IPV6_NAME(echo_request_from_host1_net4_to_host1_net1_on_net0);
                                           // Inner IPv6 header hoplimit will be modified
	}
)

FEM_hdr_ipv6_exth(
	ahtun_from_sg1_net2_cracked ,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_SG1_NET2_ADDR));
		_DST(v6(IPSEC_NUT_NET0_ADDR));

	},
	{
		header = _HDR_IPV6_NAME(ahtun_from_sg1_net2_real1);
		exthdr = ah_from_sg_sn2;
		upper = _PACKET_IPV6_NAME(echo_request_from_host1_net4_to_host1_net1_on_net1_cracked);
	}
)


//======================================================================
//
// Modified packet definition with IPsec AH
//

// Common use Ether Header
Hdr_Ether hether_router2nut_0x86dd {
	SourceAddress=ether(IPSEC_ROUTER_NET0_MAC_ADDR);
	DestinationAddress=nutether();
	Type=0x86dd; // need to specify IPv6
}


// Inner IPv6 payload is modified
Frame_Ether ahtun_from_sg1_net2_dm_inner_payload_echo_request_from_host1_net4_to_host1_net1_on_net0 {
	header=hether_router2nut_0x86dd;
	packet=ahtun_from_sg1_net2_modpkt1;
}

Payload ahtun_from_sg1_net2_modpkt1 {
	data=substr(ahtun_from_sg1_net2_real1, 14, 40);  // Tunnel Outer IPv6 header
	data=substr(ahtun_from_sg1_net2_real1, 54, 12);  // Tunnel Outer AH (except for ICV)
	data=substr(ahtun_from_sg1_net2_real1, 66, 12);  // Tunnel Outer AH (only ICV)
	//data={0x11,0xb9,0x73,0x5f, 0x5a,0xfa,0xe6,0x18, 0x47,0xe2,0xc8,0x89}; // correct ICV
	data=substr(ahtun_from_sg1_net2_real1, 78, 40);  // Tunnel Inner IPv6 header
	data=substr(ahtun_from_sg1_net2_real1, 118, 2);  // Tunnel Inner ICMP type,code
	data={0x61, 0xcf}; // correct ICMP checksum
	data=substr(ahtun_from_sg1_net2_real1, 122, 4);  // Tunnel Inner ICMP echo request ID,Seq
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // echo request data "cracked "
}


//end





