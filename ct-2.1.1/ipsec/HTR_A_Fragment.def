//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $Name: REL_2_1_1 $
//
// $TAHI: ct/ipsec/HTR_A_Fragment.def,v 1.3 2002/09/19 08:51:39 ozoe Exp $
//

#define AALGO_FROM_HOST1	aalgo_hmacmd5_012
#define AALGO_TO_HOST1		aalgo_hmacmd5_012

#include "./HTR_A_common.def"


Hdr_AH ah_from_host_big {
	SPI = 0x1000;
	SequenceNumber = 2;
	algorithm = AALGO_FROM_HOST1;
}

Hdr_AH ah_to_host_big {
	SPI = 0x1000;
	SequenceNumber = 2;
	algorithm = AALGO_TO_HOST1;
}

//======================================================================
//
// Echo Request from Host1 IPsec AH (before fragment)
//


FEM_icmp6_echo_request_exth(
	echo_request_from_host1_big_ah,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST1_NET5_ADDR));
		_DST(v6(IPSEC_NUT_NET3_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_request_from_host1_big_ah);
		exthdr = ah_from_host_big;
		upper = _ICMPV6_NAME(echo_request_from_host1_big_ah);
	},
	{
		payload = echo_data_big;
	}
)

//
// Echo Request from Host1 IPsec AH (fragment 1st)
//

FEM_hdr_ipv6_exth(
	echo_request_from_host1_1st_ah,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST1_NET5_ADDR));
		_DST(v6(IPSEC_NUT_NET3_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_request_from_host1_1st_ah);
		exthdr = frag_req_1st_ah;
		upper = payload_req_1st_ah;
	}
)

//
// Echo Request from Host1 IPsec AH (fragment 2nd)
//

FEM_hdr_ipv6_exth(
	echo_request_from_host1_2nd_ah,
	hether_router2nut,
	{
		_SRC(v6(IPSEC_HOST1_NET5_ADDR));
		_DST(v6(IPSEC_NUT_NET3_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_request_from_host1_2nd_ah);
		exthdr = frag_req_2nd_ah;
		upper = payload_req_2nd_ah;
	}
)

Hdr_Fragment frag_req_1st_ah {
	NextHeader = 51;	// AH
	FragmentOffset = 0;
	MFlag = 1;
	Identification = 0x0002;
}

Hdr_Fragment frag_req_2nd_ah {
	NextHeader = 51;	// AH
	FragmentOffset = 181;
	MFlag = 0;
	Identification = 0x0002;
}

Payload payload_req_1st_ah {
	data = substr(_PACKET_IPV6_NAME(echo_request_from_host1_big_ah), 40, 1448);
}

Payload payload_req_2nd_ah {
	data = right(_PACKET_IPV6_NAME(echo_request_from_host1_big_ah), 1488);
}

//======================================================================
//
// Echo Reply to Host1 IPsec AH (before fragment)
//

FEM_icmp6_echo_reply_exth(
	echo_reply_to_host1_big_ah,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET3_ADDR));
		_DST(v6(IPSEC_HOST1_NET5_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_to_host1_big_ah);
		exthdr = ah_to_host_big;
		upper = _ICMPV6_NAME(echo_reply_to_host1_big_ah);
	},
	{
		payload = echo_data_big;
	}
)

//
// Echo Reply to Host1 IPsec AH (fragment 1st)
//

FEM_hdr_ipv6_exth(
	echo_reply_to_host1_1st_ah,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET3_ADDR));
		_DST(v6(IPSEC_HOST1_NET5_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_to_host1_1st_ah);
		exthdr = frag_rep_1st_ah;
		upper = payload_rep_1st_ah;
	}
)

//
// Echo Reply to Host1 IPsec AH (fragment 2nd)
//

FEM_hdr_ipv6_exth(
	echo_reply_to_host1_2nd_ah,
	hether_nut2router,
	{
		_SRC(v6(IPSEC_NUT_NET3_ADDR));
		_DST(v6(IPSEC_HOST1_NET5_ADDR));
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_to_host1_2nd_ah);
		exthdr = frag_rep_2nd_ah;
		upper = payload_rep_2nd_ah;
	}
)

Hdr_Fragment frag_rep_1st_ah {
	NextHeader = 51;	// AH
	FragmentOffset = 0;
	MFlag = 1;
	Identification = any;
}

Hdr_Fragment frag_rep_2nd_ah {
	NextHeader = any;	// AH
	FragmentOffset = 181;
	MFlag = 0;
	Identification = any;
}

Payload payload_rep_1st_ah {
	data = substr(_PACKET_IPV6_NAME(echo_reply_to_host1_big_ah), 40, 1448);
}

Payload payload_rep_2nd_ah {
	data = right(_PACKET_IPV6_NAME(echo_reply_to_host1_big_ah), 1488);
}

