#!/usr/bin/perl
#
# Copyright (C) 2003 Yokogawa Electric Corporation, 
# INTAP(Interoperability Technology Association
# for Information Processing, Japan).  All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/pd/RRSolicitRapid.seq,v 1.4 2003/06/11 09:31:14 ozoe Exp $
#
######################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ '; }

use V6evalTool;
use pd;

%pktdesc = (
	echo_request    => 'Send Echo Request (Link-Local Address)',
	echo_reply      => 'Recv Echo Reply (Link-Local Address)',
	ns              => 'Recv Neighbor Solicitation',
	na              => 'Send Neighbor Advertisement',
	rs              => 'Send Router Solicitation',
	ra              => 'Recv Router Advertisement',
	ra1             => 'Recv Router Advertisement including mtu option',
	ra2             => 'Recv Router Advertisement including multiple prefix information',
	ra3             => 'Recv Router Advertisement including mtu option and multiple prefix information',
	dhcp_sol_rapid	=> 'Recv DHCP Solicit message w/ Rapid Commit option',
	dhcp_sol_rapid_any	=> 'Recv DHCP Solicit message w/ Rapid Commit option',
	dhcp_rep	=> 'Send DHCP Reply message w/o Rapid Commit optin',
	dhcp_rep_rapid	=> 'Send DHCP Reply message w/ Rapid Commit option',
);

pdOptions(@ARGV);

# The following generate debugging messages.
$pd::debug=$pdOpt_v|$pdOpt_vv;

# You can specifies debug options to a remote control program.
# If you want to know more detail, please see the following:
# - V6evalTool.pm: perldoc V6evalTool
# - V6evalRemote.pm: perldoc V6evalRemote
$pd::remote_debug="-o1" if $pdOpt_vv;

#
#
$IF = Link0;
$IF1 = Link1;
$exit_rtn=$V6evalTool::exitPass;
$idx=0;
$wait_ras=$pd::MIN_DELAY_BETWEEN_RAS+1;

#
$delegateprefix="3ffe:501:fffe::";
$preferredlifetime="600";
$validlifetime="1200";
#
$wait_time=16;
$maxcount = 4;
# time is Jan 1, 2000 (UTC), modulo 2^32
$t64 = time() - 946684800;
foreach($count = 0; $count < $maxcount; $count++){
    $sid_duid_time[$count] = ($t64 & 0xffffffff);
    $t64 = $t64 + 86400; #1 day after
}

@sid_link_addr = (
    "00:00:00:00:a0:a0",
    "00:00:00:00:a1:a1",
    "00:00:00:00:a2:a2",
    "00:00:00:00:a3:a3",
);

#
#
#
$type=$V6evalTool::NutDef{Type};
if($type eq host) {
    vLogHTML("This test is for the router only<BR>");
    exit $V6evalTool::exitRouterOnly;
}

$type=$V6evalTool::NutDef{Type};
if($type ne router) {
    vLogHTML(pdErrmsg("ERROR: $V6evalTool::NutDef{Type}: ".
                      "Unknown target type<BR>"));
    exit $V6evalTool::exitFail;
}

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");
vLogHTML("Trying to setup NUT<BR>");
pdStartDefaultRA() || exit $V6evalTool::exitFail;
pdStopDHCP6Client() || exit $V6evalTool::exitFail;
$vcpp = pdSetVCPP($pd::INITIAL, $delegateprefix, 0, 0, 
        $maxcount, @sid_duid_time, @sid_link_addr, %ret);
vCPP($vcpp);
#
pdStartRapidDHCP6Client() || exit $V6evalTool::exitFail;
#
vCapture($IF);
#
#
vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");
vLogHTML("Transmission of Solicit Messages<BR>");
%ret = vRecv($IF, $wait_time, 0, 0, dhcp_sol_rapid, dhcp_sol_rapid_any);
$rt0 = time();

if($ret{status} != 0) {
        vLogHTML('No response from NUT, Configuration Problem ?<BR>');
        vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	pdAsyncWait() || exit $V6evalTool::exitFatal;
        exit $V6evalTool::exitFail;
}

if($ret{status} == 0) {
        $title{$idx}="<TD>$pktdesc{'dhcp_sol_rapid'}</TD><TD>exp:sending DHCP Solicit message w/ Rapid Commit option</TD>";
	$title{$idx}.="<TD>result:sent DHCP Solicit message w/ Rapid Commit option</TD>";
	$result{$idx}=$V6evalTool::exitPass;
	vLogHTML("<A NAME=\"T$idx\">OK: NUT sent DHCP Solicit message w/ Rapid Commit option.</A><BR>");
	$idx++;

        $vcpp = pdSetVCPP($pd::SOLICIT, $delegateprefix, $preferredlifetime, $validlifetime,
		$maxcount, @sid_duid_time, @sid_link_addr, %ret);
        vCPP($vcpp);

	vLogHTML("Receipt of invalid Reply Message<BR>");
        vSend($IF, dhcp_rep);

        $irt = $pd::SOL_TIMEOUT;
        $mrt = $pd::SOL_MAX_RT;
        $rt = 0;
        $msgtyp = $pd::SOLICIT;

        $rt = pdRetransmitTimer($irt, $mrt, $rt);

        $vcpp = pdSetVCPP($pd::INITIAL, $delegateprefix, 0, 0,
		$maxcount, @sid_duid_time, @sid_link_addr, %ret);
	%ret = vRecv($IF, $rt, 0, 0, ns, dhcp_sol_rapid, dhcp_sol_rapid_any);

        if ($ret{recvFrame} eq 'ns') {
                vSend($IF, na);
        	%ret = vRecv($IF, $rt, 0, 0, dhcp_sol_rapid, dhcp_sol_rapid_any);
        }
        $title{$idx}="<TD>$pktdesc{'dhcp_sol_rapid'}</TD><TD>exp:Ignore received DHCP Reply message w/o Rapid Commit option,";
        $title{$idex}.="Resending DHCP Solicit message w/ Rapid Commit option</TD>";
        if($ret{status} == 0) {
        	$title{$idx}.="<TD>result:resent DHCP Solicit message w/ Rapid Commit option</TD>";
        	$result{$idx}=$V6evalTool::exitPass;
        	vLogHTML("<A NAME=\"T$idx\">OK: NUT resent DHCP Solicit message w/ Rapid Commit option.</A><BR>");
        	$idx++;

                $vcpp = pdSetVCPP($pd::SOLICIT, $delegateprefix, $preferredlifetime, $validlifetime,
			$maxcount, @sid_duid_time, @sid_link_addr, %ret);
                vCPP($vcpp);
		vLogHTML("Receipt of valid Reply Message<BR>");
                vSend($IF, dhcp_rep_rapid);
        }
        else{
        	$title{$idx}.="<TD>result:NOT resent DHCP Solicit message w/ Rapid Commit option</TD>";
        	$result{$idx}=$V6evalTool::exitFail;
        	vLogHTML("<A NAME=\"T$idx\">NG: NUT NOT resent DHCP Solicit message w/ Rapid Commit option.</A><BR>");
                $exit_rtn=$V6evalTool::exitFail;
		pdAsyncWait() || exit $V6evalTool::exitFatal;
                goto error;
        }
}
else{
	vLogHTML('Cannot receive DHCP Solicit message w/ Rapid Commit option<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	pdAsyncWait() || exit $V6evalTool::exitFatal;
	exit $V6evalTool::exitFail;
}

pdAsyncWait() || exit $V6evalTool::exitFatal;
vSleep($wait_time);

vCapture($IF1);
$wait_ra=2;

vSend($IF1, rs);
$title{$idx}="<TD>$pktdesc{'ra'}</TD><TD>exp:sending RA</TD>";
%ret = vRecv($IF1, $wait_ra, $ret{sentTime1}, 0, ra, ra1, ra2, ra3);


if ($ret{status} == 0) {
        $title{$idx}.="<TD>result:sent RA</TD>";
        $result{$idx}=$V6evalTool::exitPass;
        vLogHTML("<A NAME=\"T$idx\">OK: NUT sent RA</A><BR>");
} else {
        $title{$idx}.="<TD>result:NOT sent RA</TD>";
        $result{$idx}=$V6evalTool::exitFail;
        $exit_rtn=$V6evalTool::exitFail;
        vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
}

vSleep($wait_ras, "Wait for MIN_DELAY_BETWEEN_RAS (3 sec)");

#
#
#
@col=('PTN', 'EXP', 'RESULT');
pdPrintSummaryHTML("*** Test Summary: PE vs CPE ***", @col,
                   %title, %result, $idx);

#
#
#
exit $exit_rtn;

#
#
#
error:
    @col=('PTN', 'EXP', 'RESULT');
    pdPrintSummaryHTML("*** Test Summary: PE vs CPE ***", @col,
                   %title, %result, $idx);
    exit $V6evalTool::exitFail;

#####################################################################r
__END__

=head1 NAME

=begin html
  &nbsp;&nbsp;RRSolicitRapid.seq - Requesting Router has sent Solicit message with Rapid Commit option 

=end html

=head1 TARGET

  Router for DHCP Client

=head1 SYNOPSIS

=begin html
  &nbsp;&nbsp;<A HREF="./RRSolicitRapid.seq">RRSolicitRapid.seq</A> [-tooloption ...] -pkt <A HREF="./RRSolicitRapid.def">RRSolicitRapid.def</A> -tooloption : v6eval tool option

=end html

=head1 TOPOLOGY

=begin html
<BLOCKQUOTE>
<PRE>
                TN
                 |        ISP site
     ----+-------+------- Link0
         |
        NUT     Host
         |       |        Customer site
  -------+-------+------- Link1 3ffe:501:fffe:XXXX::/64
</PRE>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD rowSpan=4><TT>TN</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
    </TR>
    <TR>
      <TD><TT>Ether</TT></TD>
      <TD><TT>00:00:00:00:a0:a0</TT></TD></TR>
    <TR>
      <TD><TT>Delegate Prefix</TT></TD>
      <TD><TT>3ffe:501:fffe::</TT></TD>
    </TR>
    <TR>
      <TD><TT>Prefix Length</TT></TD>
      <TD><TT>48</TT></TD></TR>
    <TR>
      <TD rowspan="2"><TT>Host</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:101</TT></TD>
    </TR>
    <TR>
      <TD><TT>ether</TT></TD>
      <TD><TT>00:00:00:00:01:01</TT></TD></TR></TBODY>
  </TABLE>
</BLOCKQUOTE>

=end html

=head1 INITIALIZATION

=begin html 
<OL>
  <LI>NUT sets up Prefix Delegation with Rapid Commit option.
  <LI>NUT sets up Router Advertisement to the interface by the side of downstream.
</OL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
Tester as Server          Target as Client          Tester as Host
    |                           |                           |
    |<--------------------------|                           |
    |   <A HREF="#JDG1">Judgment #1</A>             |                           |
    |   DHCP Solicit message    |                           |
    |  w/ Rapid Commit option   |                           |
    |                           |                           |
    |-------------------------->|                           |
    |   DHCP Reply message      |                           |
    |  w/o Rapid Commit option  |                           |
    |                           |                           |
    |<--------------------------|                           |
    |   <A HREF="#JDG2">Judgment #2</A>             |                           |
    |   DHCP Solicit message    |                           |
    |  w/ Rapid Commit option   |                           |
    |                           |                           |
    |-------------------------->|                           |
    |   DHCP Reply message      |                           |
    |  w/ Rapid Commit option   |                           |
    |                           |                           |
    |                           |<--------------------------|
    |                           |    Router Solicitation    |
    |                           |                           |
    |                           |-------------------------->|
    |                           |    <A HREF="#JDG3">Judgment #3</A>            |
    |                           |    Router Advertisement   |
    |                           |                           |
    |                           |                           |
    v                           v                           v
<BR>
  1. Wait DHCP Solicit message with Rapid Commit option
  2. Send DHCP Reply message without Rapid Commit option
  3. Wait DHCP Solicit message with Rapid Commit option
  4. Send DHCP Reply message with Rapid Commit option
  5. Send Router Solicitation
  6. Wait Router Advertisement
<BR>
<b>Addresses</b>
<BLOCKQUOTE>
Solicit message<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>NUT link-local address</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>All_DHCP_Relay_Agents_and_Servers</TD>
    </TR>  
    </TBODY>
  </TABLE>
<BR>
All_DHCP_Relay_Agents_and_Servers FF02::1:2<BR>
Reply message<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>fe80::200:ff:fe00:a0a0</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>NUT link-local address</TD>
    </TR>
    </TBODY>
  </TABLE>
</BLOCKQUOTE>
<b>UDP Ports</b><BR>
      Clients listen for DHCP messages on UDP port 546
      Server listen for DHCP messages on UDP port 547<BR>
<b>DHCP Messages</b>
<BLOCKQUOTE>
DHCP Solicit message with Rapid Commit option<BR>
<TABLE border=1>
    <TR>
      <TD colspan="2">msg-type</TD>
      <TD><b>SOLICIT</b>(1)</TD>
    </TR>
    <tr>
      <TD colspan="2">transaction-id</TD>
      <TD>The transaction ID for this message exchange</TD>
    </tr>
    <TR>
      <TD colspan="3">options</TD>
    </TR>
    <TR>
      <TD colspan="3"><b>Client Identifier Option</b> (MUST)</TD>
    </TR>
    <tr>
      <TD colspan="3"><b>IA_PD Option</b> (MUST)</TD> 
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>33 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>IAID</TD>
      <TD>The unique identifier which client specified</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>T1</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>T2</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD colspan="3"><b>Elapsed Time Option </b>(MUST)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>elapsed-time</TD>
      <TD>ANY</TD>
    </tr>
    <TR>
      <TD colspan="3"><b>Rapid Commit Option</b> (MUST)</TD>
    </TR>
    <TR>
      <TD colspan="3">Option Request Option (Optional)</TD>
    </TR>
</TABLE>
<BR>
DHCP Reply message without Rapid Commit option<BR>
<TABLE border=1>
    <TR>
      <TD colspan="3">msg-type</TD>
      <TD><b>REPLY</b>(7)</TD>
    </TR>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD> 
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                   
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD>00:00:00:00:a0:a0</TD></TR>
    <TR>
      <TD colspan="4">IA_PD Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option</TD>                   
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:fffe::</TD>
    </tr>
</TABLE>
<BR>
DHCP Reply message with Rapid Commit option<BR>
<TABLE border=1>
    <TR>
      <TD colspan="3">msg-type</TD>
      <TD><b>REPLY</b>(7)</TD>
    </TR>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD> 
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                   
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD>00:00:00:00:a0:a0</TD></TR>
    <TR>
      <TD colspan="4">IA_PD Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option</TD>                   
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:fffe::</TD>
    </tr>
    <tr>
      <TD colspan="4"><b>Rapid Commit Option</b></TD>
    </tr>
</TABLE>
</BLOCKQUOTE>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<A NAME="JDG1"></A>
  1. DHCP Solicit message with Rapid Commit option is recieved.
<A NAME="JDG2"></A>
  2. NUT ignore the DHCP Reply message without Rapid Commit option. DHCP Solicit message with Rapid Commit option is recieved again.
<A NAME="JDG3"></A>
  3. Router Advertisement is recieved include delegated prefix.
</PRE>

=end html

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
draft-ietf-dhc-dhcpv6-opt-prefix-delegation-01.txt
<HR>
10. Delegating Router Solicitation <BR>
   The requesting router locates and selects a delegating router in the
   same way as described in section "DHCP Server Solicitation" of the
   DHCP specification [6].  The details of the solicitation process are
   described in this section.  <BR>
10.1 Requesting router behaviour <BR>
   The requesting router creates and transmits a Solicit message as
   described in sections "Creation of Solicit Messages" and
   "Transmission of Solicit Messages" of the DHCP specification [6].
   <B>The requesting router creates an IA_PD and assigns it an IAID.  The
   requesting router MUST include the IA_PD option in the Solicit
   message.</B> <BR>
11. Requesting router initiated prefix delegation <BR>
   A requesting router uses the same message exchanges as described in
   section "DHCP Client-Initiated Configuration Exchange" of the DHCP
   specification [6] to obtain or update prefix(es) from a delegating
   router.  The requesting router and the delegating router use the
   IA_PD Prefix option to exchange information about prefix(es) in much
   the same way IA Address options are used for assigned addresses.  <BR>
11.1 Requesting router behaviour <BR>
   Upon the receipt of a valid Reply message, the requesting router
   assigns a subnet from each of the delegated prefixes to each of the
   links to which it is attached, with the following exception: <B>the
   requesting router MUST NOT assign any delegated prefixes or subnets
   from the delegated prefix(es) to the link through which it received
   the DHCP message from the delegating router.</B> <BR>
   <B>If the requesting router assigns a delegated prefix to a link to
   which the router is attached, and begins to send router
   advertisements for the prefix on the link, the requesting router MUST
   set the valid lifetime in those advertisements to be no later than
   the valid lifetime specified in the IA_PD Prefix option.</B>  A
   requesting router MAY use the preferred lifetime specified in the
   IA_PD Prefix option.  <HR>
draft-ietf-dhc-dhcpv6-28.txt
<HR>
14. Reliability of Client Initiated Message Exchanges
<BR>
see <A href=./retrans_mech>the retransmission mechanism</A> <BR>
15. Message Validation <BR>
15.2. Solicit Message <BR>
   <B>Clients MUST discard any received Solicit messages.</B> <BR>
   <B>Servers MUST discard any Solicit messages that do not include a
   Client Identifier option or that do include a Server Identifier
   option.</B> <BR>
17. DHCP Server Solicitation <BR>
   <B>If the client will accept a Reply message with committed address
   assignments and other resources in response to the Solicit message,
   the client includes a Rapid Commit option (see section 22.14) in the
   Solicit message.</B> <BR>
17.1.1. Creation of Solicit Messages <BR>
   The client sets the "msg-type" field to SOLICIT. The client generates
   a transaction ID and inserts this value in the "transaction-id"
   field.  <BR>
   <B>The client MUST include a Client Identifier option to identify itself
   to the server.</B>  The client includes IA options for any IAs to which
   it wants the server to assign addresses.  The client MAY include
   addresses in the IAs as a hint to the server about addresses for
   which the client has a preference.  <B>The client MUST NOT include any
   other options in the Solicit message except as specifically allowed
   in the definition of individual options.</B> <BR>
   The client uses IA_NA options to request the assignment of
   non-temporary addresses and uses IA_TA options to request the
   assignment of temporary addresses.  Either IA_NA or IA_TA options, or
   a combination of both can be included in DHCP messages.  <BR>
   The client SHOULD include an Option Request option (see section 22.7)
   to indicate the options the client is interested in receiving.  The
   client MAY additionally include instances of those options that are
   identified in the Option Request option with data values as hints
   to the server about parameter values the client would like to have
   returned.  <BR>
17.1.2. Transmission of Solicit Messages <BR>
   The first Solicit message from the client on the interface MUST be
   delayed by a random amount of time between 0 and SOL_MAX_DELAY. In
   the case of a Solicit message transmitted when DHCP is initiated
   by IPv6 Neighbor Discovery, the delay gives the amount of time to
   wait after IPv6 Neighbor Discovery causes the client to invoke the
   stateful address autoconfiguration protocol (see section 5.5.3 of
   RFC2462).  This random delay desynchronizes clients which start at
   the same time (for example, after a power outage).  <BR>
   The client transmits the message according to section 14, using the
   following parameters: <BR>
      IRT   SOL_TIMEOUT <BR>
      MRT   SOL_MAX_RT <BR>
      MRC   0 <BR>
      MRD   0 <BR>
   <B>If the client has included a Rapid Commit option in its Solicit
   message, the client terminates the waiting process as soon as a Reply
   message with a Rapid Commit option is received.</B> <BR>
17.1.4. Receipt of Reply Message <BR>
   <B>If the client includes a Rapid Commit option in the Solicit message,
   it will expect a Reply message that includes a Rapid Commit option
   in response.  The client discards any Reply messages it receives
   that do not include a Rapid Commit option.  If the client receives
   a valid Reply message that includes a Rapid Commit option, it
   processes the message as described in section 18.1.8.</B>  If it does
   not receive such a Reply message and does receive a valid Advertise
   message, the client processes the Advertise message as described in
   section 17.1.3.  <BR>
18. DHCP Client-Initiated Configuration Exchange <BR>
18.1.8. Receipt of Reply Messages <BR>
   <B>Upon the receipt of a valid Reply message in response to a Solicit
   (with a Rapid Commit option), Request, Confirm, Renew, Rebind or
   Information-request message, the client extracts the configuration
   information contained in the Reply.</B>  The client MAY choose to report
   any status code or message from the status code option in the Reply
   message.  <BR>
   The client SHOULD perform duplicate address detection [21] on each
   of the addresses in any IAs it receives in the Reply message before
   using that address for traffic.  If any of the addresses are found
   to be in use on the link, the client sends a Decline message to the
   server as described in section 18.1.7.  <BR>
   <B>If the Reply was received in response to a Solicit (with a Rapid
   Commit option), Request, Renew or Rebind message, the client updates
   the information it has recorded about IAs from the IA options
   contained in the Reply message</B>: <BR>
    -  Record T1 and T2 times <BR>
    -  Add any new addresses in the IA option to the IA as recorded by
       the client <BR>
    -  Update lifetimes for any addresses in the IA option that the
       client already has recorded in the IA <BR>
    -  Discard any addresses from the IA as recorded by the client that
       have a valid lifetime of 0 in the IA Address option <BR>
5.5. Transmission and Retransmission Parameters <BR>
   This section presents a table of values used to describe the message
   transmission behavior of clients and servers.  <BR>
      Parameter     Default  Description
   -------------------------------------
   SOL_MAX_DELAY     1 sec   Max delay of first Solicit
   SOL_TIMEOUT       1 sec   Initial Solicit timeout
   SOL_MAX_RT      120 secs  Max Solicit timeout value <BR>
24.2. DHCP Message Types <BR>
   IANA is requested to record the following message types (defined
   in section 5.3).  IANA is requested to maintain a registry of DHCP
   message types.  <BR>
      SOLICIT               1
      REPLY                 7 <BR>
A. Appearance of Options in Message Types <BR>
   The following table indicates with a "*" the options are allowed in
   each DHCP message type: <BR>
        Client Server IA_NA  Option Pref  Time Relay Auth. Server
          ID     ID   IA_TA  Request            Msg.       Unica.
Solicit   *             *      *           *           *
Reply     *      *      *            *     *           *     * <BR>
         Status  Rap. User  Vendor Vendor Inter. Recon. Recon.
          Code  Comm. Class Class  Spec.    ID    Msg.  Accept
Solicit           *     *     *      *                    *
Reply      *      *     *     *      *                    *
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

