#!/usr/bin/perl
#
# Copyright (C) 2003 Yokogawa Electric Corporation, 
# INTAP(Interoperability Technology Association
# for Information Processing, Japan).  All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/pd/RRSolicit.seq,v 1.4 2003/06/11 09:31:14 ozoe Exp $
#
######################################################################
BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $ '; }

use V6evalTool;
use pd;

%pktdesc = (
	echo_request    => 'Send Echo Request (Link-Local Address)',
	echo_reply      => 'Recv Echo Reply (Link-Local Address)',
	ns              => 'Recv Neighbor Solicitation',
	ns_count1       => 'Recv Neighbor Solicitation',
	ns_count2       => 'Recv Neighbor Solicitation',
	na              => 'Send Neighbor Advertisement',
	na_count1       => 'Send Neighbor Advertisement',
	na_count2       => 'Send Neighbor Advertisement',
	rs              => 'Send Router Solicitation',
	ra		=> 'Recv Router Advertisement',
	ra1		=> 'Recv Router Advertisement including mtu option',
	ra2		=> 'Recv Router Advertisement including multiple prefix information',
	ra3		=> 'Recv Router Advertisement including mtu option and multiple prefix information',
	dhcp_sol		=> 'Recv DHCP Solicit message w/o Option Request option',
	dhcp_sol_any		=> 'Recv DHCP Solicit message',
	dhcp_sol_any1		=> 'Recv DHCP Solicit message w/o Elapsed time and Option Request option',
	dhcp_sol_any2		=> 'Recv DHCP Solicit message w/o Elapsed time option',
	dhcp_adv_count		=> 'Send first DHCP Advertise message',
	dhcp_adv_count1		=> 'Send the 2nd DHCP Advertise message',
	dhcp_adv_count2		=> 'Send the 3rd DHCP Advertise message',
	dhcp_req_count		=> 'Recv DHCP Request message w/o Option Request option',
	dhcp_req_count_any	=> 'Recv DHCP Request message',
	dhcp_req_count_any1	=> 'Recv DHCP Request message w/o Option Request and IA_PD Prefix option',
	dhcp_req_count_any2	=> 'Recv DHCP Request message w/o IA_PD Prefix option',
	dhcp_req_count_any3	=> 'Recv DHCP Request message w/o Elapsed time and Option Request option',
	dhcp_req_count_any4	=> 'Recv DHCP Request message w/o Elapsed time option',
	dhcp_req_count_any5	=> 'Recv DHCP Request message w/o Elapsed time and Option Request and IA_PD Prefix option',
	dhcp_req_count_any6	=> 'Recv DHCP Request message w/o Elapsed time and IA_PD Prefix option',
	dhcp_rep_count		=> 'Send DHCP Reply message',
);

pdOptions(@ARGV);

# The following generate debugging messages.
$pd::debug=$pdOpt_v|$pdOpt_vv;

# You can specifies debug options to a remote control program.
# If you want to know more detail, please see the following:
# - V6evalTool.pm: perldoc V6evalTool
# - V6evalRemote.pm: perldoc V6evalRemote
$pd::remote_debug="-o1" if $pdOpt_vv;

#
#
$IF = Link0;
$IF1 = Link1;
$exit_rtn=$V6evalTool::exitPass;
$idx=0;
$wait_ras=$pd::MIN_DELAY_BETWEEN_RAS+1;

#
#
$delegateprefix="3ffe:501:ffff::";
$preferredlifetime="600";
$validlifetime="1200";
#
$wait_time=16;
$maxcount = 4;
# time is Jan 1, 2000 (UTC), modulo 2^32
$t64 = time() - 946684800;
foreach($count = 0; $count < $maxcount; $count++){
    $sid_duid_time[$count] = ($t64 & 0xffffffff);
    $t64 = $t64 + 86400; #1 day after
}

@sid_link_addr = (
    "00:00:00:00:a0:a0",
    "00:00:00:00:a1:a1",
    "00:00:00:00:a2:a2",
    "00:00:00:00:a3:a3",
);

#
#
#
$type=$V6evalTool::NutDef{Type};
if($type eq host) {
    vLogHTML("This test is for the router only<BR>");
    exit $V6evalTool::exitRouterOnly;
}

$type=$V6evalTool::NutDef{Type};
if($type ne router) {
    vLogHTML(pdErrmsg("ERROR: $V6evalTool::NutDef{Type}: ".
                      "Unknown target type<BR>"));
    exit $V6evalTool::exitFail;
}

#
#
#
vLogHTML("<FONT SIZE=\"+1\">Initialization</FONT><BR>");
vLogHTML("Trying to setup NUT<BR>");
pdStartDefaultRA() || exit $V6evalTool::exitFail;
pdStopDHCP6Client() || exit $V6evalTool::exitFail;
$vcpp = pdSetVCPP($pd::INITIAL, $delegateprefix, 0, 0, 
	$maxcount, @sid_duid_time, @sid_link_addr, %ret);
vCPP($vcpp);
#
pdStartDHCP6Client() || exit $V6evalTool::exitFail;
#
vCapture($IF);
#
#
vLogHTML("<FONT SIZE=\"+1\">Test</FONT><BR>");

vLogHTML("Creation of Solicit message and Transmition of Solicit message.<BR>");
%ret = vRecv($IF, $wait_time, 0, 0, dhcp_sol, dhcp_sol_any, dhcp_sol_any1, dhcp_sol_any2);
$rt0 = $ret{"recvTime1"};

if($ret{status} != 0) {
	vLogHTML('No response from NUT, Configuration Problem ?<BR>');
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	pdAsyncWait() || exit $V6evalTool::exitFatal;
	exit $V6evalTool::exitFail;
}

if($ret{status} == 0) {
        vLogHTML("OK: Initial Retransmit Time $rt0<BR>");
        if ($ret{recvFrame} eq 'dhcp_sol_any1' || $ret{recvFrame} eq 'dhcp_sol_any2'){
            vLogHTML("But Elapsed time option does not included<BR>");
            $title{$idx}="<TD>$pktdesc{'dhcp_sol'}</TD><TD>exp:sending DHCP Solicit message</TD>";
    	    $title{$idx}.="<TD>result:sent DHCP Solicit message w/o Elapsed time option</TD>";
	    $result{$idx}=$V6evalTool::exitFail;
	    vLogHTML("<A NAME=\"T$idx\">Fail</A><BR>");
	}
	else{
            $title{$idx}="<TD>$pktdesc{'dhcp_sol'}</TD><TD>exp:sending DHCP Solicit message</TD>";
    	    $title{$idx}.="<TD>result:sent DHCP Solicit message</TD>";
	    $result{$idx}=$V6evalTool::exitPass;
	    vLogHTML("<A NAME=\"T$idx\">OK</A><BR>");
	}
	$idx++;

        $irt = $pd::SOL_TIMEOUT;
        $mrt = $pd::SOL_MAX_RT;
        $rt = 0;

        $rt = pdRetransmitTimer($irt, $mrt, $rt);

	$vcpp = pdSetVCPP($pd::SOLICIT, $delegateprefix, $preferredlifetime, $validlifetime, 
                      $maxcount, @sid_duid_time, @sid_link_addr, %ret);
	vCPP($vcpp);

        vLogHTML("Receipt of Advertise message.<BR>");
        vSend($IF, dhcp_adv_count, dhcp_adv_count1, dhcp_adv_count2);

        vLogHTML("Wait until maximum retransmition time $rt.<BR>");

        %ret = vRecv($IF, $rt, 0, 0, ns, ns_count1, ns_count2,
                dhcp_req_count, dhcp_req_count_any, dhcp_req_count_any1, dhcp_req_count_any2,
                dhcp_req_count_any3, dhcp_req_count_any4, dhcp_req_count_any5, dhcp_req_count_any6
		);

	if($ret{status} == 0) {
	vLogHTML("Creation of Solicit message and Transmition of Solicit message.<BR>");
            $title{$idx}="<TD>$pktdesc{'dhcp_req_count'}</TD><TD>exp:receive DHCP Advertise message until first RT expired</TD>";
	    if ($ret{recvFrame} eq 'ns' ||
		$ret{recvFrame} eq 'ns_count1' ||
		$ret{recvFrame} eq 'ns_count2'
		){
		vSend($IF, na, na_count1, ns_count2);
		%ret = vRecv($IF, $rt, 0, 0, dhcp_req_count, dhcp_req_count_any, 
				dhcp_req_count_any1, dhcp_req_count_any2,
				dhcp_req_count_any3, dhcp_req_count_any4,
				dhcp_req_count_any5, dhcp_req_count_any6);
                if($ret{status} == 0) {
		   $rt1 = $ret{"recvTime1"};
		   $rt = ($rt1 - $rt0);
                   vLogHTML("First retransmit timeout of Solicit message is $rt ($rt1-$rt0).<BR>");
		   if( $rt >= $irt){
        	      if ($ret{recvFrame} eq 'dhcp_req_count_any3' || $ret{recvFrame} eq 'dhcp_req_count_any4' ||
        	          $ret{recvFrame} eq 'dhcp_req_count_any5' || $ret{recvFrame} eq 'dhcp_req_count_any6'
			 ){
		            vLogHTML("But Elapsed time option doesn not included<BR>");
		            $title{$idx}.="<TD>result:sent DHCP Requet message after IRT time w/o Elapsed time option</TD>";
			    $result{$idx}=$V6evalTool::exitFail;
		            vLogHTML("Retransmit time $rt greater than IRT(SOL_TIMEOUT)<BR>");
			    vLogHTML("<A NAME=\"T$idx\">Fail</A><BR>");
		      }
		      else{
		            $title{$idx}.="<TD>result:sent DHCP Requet message after IRT time</TD>";
            		    $result{$idx}=$V6evalTool::exitPass;
		            vLogHTML("Retransmit time $rt greater than IRT(SOL_TIMEOUT)<BR>");
                            vLogHTML("<A NAME=\"T$idx\">OK</A><BR>");
                      }
	              $idx++;
                   }else{
		      $title{$idx}.="<TD>result:sent DHCP Requet message previous RT time</TD>";
      		      $result{$idx}=$V6evalTool::exitFail;
	              $exit_rtn=$V6evalTool::exitFail;
		      vLogHTML("Retransmit time $rt less than IRT(SOL_TIMEOUT)<BR>");
	              vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
	              $idx++;
                   }
  	        }
	    }
            elsif ($ret{recvFrame} eq 'dhcp_req_count' || $ret{recvFrame} eq 'dhcp_req_count_any'  ||
		$ret{recvFrame} eq 'dhcp_req_count_any1' || $ret{recvFrame} eq 'dhcp_req_count_any2' ||
   		$ret{recvFrame} eq 'dhcp_req_count_any3' || $ret{recvFrame} eq 'dhcp_req_count_any4' ||
		$ret{recvFrame} eq 'dhcp_req_count_any5' || $ret{recvFrame} eq 'dhcp_req_count_any6'
		){
		$rt1 = $ret{"recvTime1"};
		$rt = ($rt1 - $rt0);
		vLogHTML("First retransmit timeout of Solicit message is $rt ($rt1-$rt0).<BR>");
		if( $rt >= $irt){
        	      if ($ret{recvFrame} eq 'dhcp_req_count_any3' || $ret{recvFrame} eq 'dhcp_req_count_any4' ||
        	          $ret{recvFrame} eq 'dhcp_req_count_any5' || $ret{recvFrame} eq 'dhcp_req_count_any6'
			 ){
		            vLogHTML("But Elapsed time option not included<BR>");
		            $title{$idx}.="<TD>result:sent DHCP Requet message after IRT time w/o Elapsed time option</TD>";
			    $result{$idx}=$V6evalTool::exitFail;
		            vLogHTML("Retransmit time $rt greater than IRT(SOL_TIMEOUT)<BR>");
			    vLogHTML("<A NAME=\"T$idx\">Fail</A><BR>");
		      }
		      else{
		            $title{$idx}.="<TD>result:sent DHCP Request message after IRT time</TD>";
      		            $result{$idx}=$V6evalTool::exitPass;
		            vLogHTML("Retransmit time $rt greater than IRT(SOL_TIMEOUT)<BR>");
                            vLogHTML("<A NAME=\"T$idx\">OK: sent DHCP Request message</A><BR>");
		      }
	              $idx++;
		}else{
		      $title{$idx}.="<TD>result:sent DHCP Request message previous RT time</TD>";
      		      $result{$idx}=$V6evalTool::exitFail;
	              $exit_rtn=$V6evalTool::exitFail;
		      vLogHTML("Retransmit time $rt less than IRT(SOL_TIMEOUT)<BR>");
	              vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
	              $idx++;
		}
	    }
	    else{
	        vLogHTML('Receive Unknown DHCP message.<BR>');
    	        vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	        pdAsyncWait() || exit $V6evalTool::exitFatal;
            	exit $V6evalTool::exitFail;
            }
        }
	else{
	    vLogHTML('Cannot receive DHCP Solicit message expired Maximum Retransmition time(MRT).<BR>');
	    vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	    pdAsyncWait() || exit $V6evalTool::exitFatal;
	    exit $V6evalTool::exitFail;
	}

	$vcpp = pdSetVCPP($pd::REQUEST, $delegateprefix, $preferredlifetime, $validlifetime, 
		$maxcount, @sid_duid_time, @sid_link_addr, %ret);
	vCPP($vcpp);

        vLogHTML("Receipt of Reply message.<BR>");
	vSend($IF, dhcp_rep_count);
}
else{
        vLogHTML('Cannot receive DHCP Solicit message<BR>');
        vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	pdAsyncWait() || exit $V6evalTool::exitFatal;
        exit $V6evalTool::exitFail;
}

pdAsyncWait() || exit $V6evalTool::exitFatal;
vSleep($wait_time);

vCapture($IF1);
$wait_ra=2;

vSend($IF1, rs);
$title{$idx}="<TD>$pktdesc{'ra'}</TD><TD>exp:sending RA included correct information</TD>";
%ret = vRecv($IF1, $wait_ra, $ret{sentTime1}, 0, ra, ra1, ra2, ra3);


if ($pd::NOASYNC_RA == 0) {
    if ($ret{status} == 0) {
        $title{$idx}.="<TD>result:sent RA, ";
        $stat = pdCheckRA($delegateprefix, $validlifetime, %ret);
           if ($stat == 0) {
              $title{$idx}.="RA's Prefix, Validlifetime and PrefixLength are valid.</TD>";
              $result{$idx}=$V6evalTool::exitPass;
              vLogHTML("<A NAME=\"T$idx\">OK</A><BR>");
           }elsif ($stat == 1) {
              $title{$idx}.="RA's Prefix ValidLifetime is invalid.</TD>";
              $result{$idx}=$V6evalTool::exitFail;
	      $exit_rtn=$V6evalTool::exitFail;
              vLogHTML("<A NAME=\"T$idx\">NG: RA's Prefix ValidLifetime is invalid.</A><BR>");
           }elsif ($stat == 2) {
              $title{$idx}.="RA's PrefixLength is invalid.</TD>";
              $result{$idx}=$V6evalTool::exitWarn;
	      $exit_rtn=$V6evalTool::exitWarn;
              vLogHTML("<A NAME=\"T$idx\">Warn: RA's PrefixLength is invalid.</A><BR>");
           }elsif ($stat == 3) {
              $title{$idx}.="RA's Prefix information is invalid.</TD>";
              $result{$idx}=$V6evalTool::exitFail;
	      $exit_rtn=$V6evalTool::exitFail;
              vLogHTML("<A NAME=\"T$idx\">NG: RA's Prefix information is invalid.</A><BR>");
           }else{
              $title{$idx}.="Unknown RA.</TD>";
              $result{$idx}=$V6evalTool::exitWarn;
	      $exit_rtn=$V6evalTool::exitWarn;
              vLogHTML("<A NAME=\"T$idx\">Warn: Unknown RA.</A><BR>");
           }
        $idx++;
    } else {
	$title{$idx}.="<TD>result:NOT sent RA</TD>";
	$result{$idx}=$V6evalTool::exitFail;
        $idx++;
	$exit_rtn=$V6evalTool::exitFail;
	vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
    }
}
else{
    if ($ret{status} == 0) {
        $title{$idx}.="<TD>result:sent RA</TD>";
        $result{$idx}=$V6evalTool::exitPass;
        vLogHTML("<A NAME=\"T$idx\">OK: sent RA.</A><BR>");
    } else {
        $title{$idx}.="<TD>result:NOT sent RA</TD>";
        $result{$idx}=$V6evalTool::exitFail;
        $exit_rtn=$V6evalTool::exitFail;
        vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
    }
}

vSleep($wait_ras, "Wait for MIN_DELAY_BETWEEN_RAS (3 sec)");

vSend($IF, rs);
$title{$idx}="<TD>$pktdesc{'ra'}</TD><TD>exp:NOT sending RA on link recieving dhcp message</TD>";
%ret = vRecv($IF, $wait_ra, $ret{sentTime1}, 0, ra, ra1, ra2, ra3);

if ($ret{status} == 0) {
	$title{$idx}.="<TD>result:sent RA</TD>";
        $result{$idx}=$V6evalTool::exitFail;
	$exit_rtn=$V6evalTool::exitFail;
	vLogHTML("<A NAME=\"T$idx\">".pdErrmsg(NG)."</A><BR>");
} else {
	$title{$idx}.="<TD>result:NOT sent RA</TD>";
	$result{$idx}=$V6evalTool::exitPass;
        vLogHTML("<A NAME=\"T$idx\">OK: NOT sent RA on link recieving dhcp message.</A><BR>");
}

#
#
#
@col=('PTN', 'EXP', 'RESULT');
pdPrintSummaryHTML("*** Test Summary: PE vs CPE ***", @col,
                   %title, %result, $idx);

#
#
#
exit $exit_rtn;

######################################################################
__END__

=head1 NAME

=begin html
  &nbsp;&nbsp;RRSolicit.seq - Requesting Router behavior for Prefix Delegation 

=end html

=head1 TARGET

  Router for DHCP client

=head1 SYNOPSIS

=begin html
  &nbsp;&nbsp;<A HREF="./RRSolicit.seq">RRSolicit.seq</A> [-tooloption ...] -pkt <A HREF="./RRSolicit.def">RRSolicit.def</A>
    -tooloption : v6eval tool option

=end html

=head1 TOPOLOGY

=begin html
<BLOCKQUOTE>
<PRE>
   TN       TN1 TN2
    |        |   |        ISP site
  --+----+---+---+------- Link0   
         |
        NUT     Host
         |       |        Customer site
  -------+-------+------- Link1 3ffe:501:ffff:XXXX::/64
</PRE>
</BLOCKQUOTE>
<BLOCKQUOTE>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD rowSpan=4><TT>TN</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:a0a0</TT></TD>
    </TR>
    <TR>
      <TD><TT>Ether</TT></TD>
      <TD><TT>00:00:00:00:a0:a0</TT></TD>
    </TR>
    <TR>
      <TD><TT>Delegate Prefix</TT></TD>
      <TD><TT>3ffe:501:ffff::</TT></TD>
    </TR>
    <TR>
      <TD><TT>Prefix Length</TT></TD>
      <TD><TT>48</TT></TD>
    </TR>
    <TR>
      <TD rowSpan=4><TT>TN1</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:a1a1</TT></TD>
    </TR>
    <TR>
      <TD><TT>Ether</TT></TD>
      <TD><TT>00:00:00:00:a1:a1</TT></TD>
    </TR>
    <TR>
      <TD><TT>Delegate Prefix</TT></TD>
      <TD><TT>3ffe:501:ffff::</TT></TD>
    </TR>
    <TR>
      <TD><TT>Prefix Length</TT></TD>
      <TD><TT>48</TT></TD>
    </TR>
    <TR>
      <TD rowSpan=4><TT>TN2</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:a2a2</TT></TD>
    </TR>
    <TR>
      <TD><TT>Ether</TT></TD>
      <TD><TT>00:00:00:00:a2:a2</TT></TD>
    </TR>
    <TR>
      <TD><TT>Delegate Prefix</TT></TD>
      <TD><TT>3ffe:501:ffff::</TT></TD>
    </TR>
    <TR>
      <TD><TT>Prefix Length</TT></TD>
      <TD><TT>48</TT></TD>
    </TR>
    <TR>
      <TD rowspan="2"><TT>Host</TT></TD>
      <TD><TT>Link-local</TT></TD>
      <TD><TT>fe80::200:ff:fe00:101</TT></TD>
    </TR>
    <TR>
      <TD><TT>ether</TT></TD>
      <TD><TT>00:00:00:00:01:01</TT></TD></TR></TBODY>
  </TABLE>
</BLOCKQUOTE>

=end html

=head1 INITIALIZATION

=begin html
<OL>
  <LI>NUT sets up Prefix Delegation.
  <LI>NUT sets up Router Advertisement to the interface by the side of downstream.
</OL>

=end html

=head1 TEST PROCEDURE

=begin html
<PRE>
Tester as Server          Target as Client        Tester as Host
    |                           |                           |
    |                           |                           |
    |<--------------------------|                           |
    |   <A HREF="#JDG1">Judgment #1</A>             |                           |
    |   DHCP Solicit message    |                           |
    |                           |                           |
    |                           |                           |
    |-------------------------->|                           |
    |   DHCP Advertise message 1|                           |
    |   DHCP Advertise message 2|                           |
    |   DHCP Advertise message 3|                           |
    |                           |                           |
    |<--------------------------|                           |
    |   <A HREF="#JDG2">Judgment #2</A>             |                           |
    |   DHCP Request message    |                           |
    |                           |                           |
    |                           |                           |
    |-------------------------->|                           |
    |   DHCP Reply message      |                           |
    |                           |                           |
    |                           |<--------------------------|
    |                           |    Router Solicitation    |
    |                           |                           |
    |                           |-------------------------->|
    |                           |    <A HREF="#JDG3">Judgment #3</A>            |
    |                           |    Router Advertisement   |
    |                           |    w/ delegated prefix    |
    |                           |                           |
    |-------------------------->|                           |
    |    Router Solicitation    |                           |
    |                           |                           |
    |(<------------------------)|                           |
    |   <A HREF="#JDG4">Judgment #4</A>             |                           |
    |   No Router Advertisement |                           |
    |   w/ delegated prefix     |                           |
    |                           |                           |
    v                           v                           v
<BR>
  1. Wait DHCP Solicit message
  2. Send DHCP Advertise message 1, 2 and 3
  3. Wait DHCP Request message
  4. Send DHCP Reply message
  5. Send Router Solicitation
  6. Wait Router Advertisement
  7. Send Router Solicitation from DHCP administrative domain. 
  8. No Router Advertisement
<BR>
<b>Addresses</b>
<BLOCKQUOTE>
Solicit, Request messages<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>NUT link-local address</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>All_DHCP_Relay_Agents_and_Servers</TD>
    </TR>
    </TBODY>
  </TABLE>
<BR>
All_DHCP_Relay_Agents_and_Servers FF02::1:2<BR>
Advertise message 1, Reply message<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>fe80::200:ff:fe00:a0a0</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>NUT link-local address</TD>
    </TR>
    </TBODY>
  </TABLE>
<BR>
Advertise message 2<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>fe80::200:ff:fe00:a1a1</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>NUT link-local address</TD>
    </TR>
    </TBODY>
  </TABLE>
<BR>
Advertise message 3<BR>
<TABLE border=1>
    <TBODY>
    <TR>
      <TD>Src</TD>
      <TD>fe80::200:ff:fe00:a1a1</TD>
    </TR>
    <TR>
      <TD>Dst</TD>
      <TD>NUT link-local address</TD>
    </TR>
    </TBODY>
  </TABLE>
</BLOCKQUOTE>
<b>UDP Ports</b><BR>
      Clients listen for DHCP messages on UDP port 546
      Server listen for DHCP messages on UDP port 547<BR>
<b>DHCP Messages</b>
<BLOCKQUOTE>
DHCP Solicit message<BR>
<TABLE border=1>
    <TR>
      <TD colspan="2">msg-type</TD>
      <TD><b>SOLICIT</b>(1)</TD>
    </TR>
    <tr>
      <TD colspan="2">transaction-id</TD>
      <TD>The transaction ID for this message exchange</TD>
    </tr>
    <TR>
      <TD colspan="3">options</TD>
    </TR>
    <TR>
      <TD colspan="3"><b>Client Identifier Option</b> (MUST)</TD>
    </TR>
    <tr>
      <TD colspan="3"><b>IA_PD Option </b>(MUST)</TD> 
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>33 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>IAID</TD>
      <TD>The unique identifier which client specified</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>T1</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>T2</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD colspan="3">Elapsed Time Option (MUST)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>elapsed-time</TD>
      <TD>ANY</TD>
    </tr>
    <TR>
      <TD colspan="3">Option Request Option (Optional)</TD>
    </TR>
</TABLE>
<BR>
DHCP Advertise message 1, 2 and 3 doesn't include preference option.                            
As for the message, only Server Identifier Option differ.<br>                            
DHCP Advertise message 1<BR>
<TABLE border=1>
    <tr>
      <TD colspan="3">msg-type</TD>
      <TD><b>ADVERTISE</b>(2)</TD>
    </tr>
    <TR>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD>
    </TR>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                    
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD><B>00:00:00:00:a0:a0</B></TD></TR>
    <TR>
      <TD colspan="4">IA_PD Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR> 
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option</TD>                   
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD></TR> 
    <TR>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:ffff::</TD></TR>
</TABLE>
<BR>
DHCP Advertise message 2<BR>
<TABLE border=1>
    <TR>
      <TD colspan="3">msg-type</TD>
      <TD><b>ADVERTISE</b>(2)</TD>
    </TR>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD> 
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                    
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD><B>00:00:00:00:a1:a1</B></TD></TR>
    <TR>
      <TD colspan="4">IA_PD Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR> 
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option</TD>                   
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:ffff::</TD>
    </tr>
</TABLE>
<BR>
DHCP Advertise message 3<BR>
<TABLE border=1>
    <TR>
      <TD colspan="3">msg-type</TD>
      <TD><b>ADVERTISE</b>(2)</TD>
    </TR>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD> 
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                    
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD><B>00:00:00:00:a2:a2</B></TD></TR>
    <TR>
      <TD colspan="4">IA_PD Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option</TD>                   
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:ffff::</TD>
    </tr>
</TABLE>
<BR>
DHCP Request message with IA_PD option<BR>
<TABLE border=1>
    <tr>
      <TD colspan="3">msg-type</TD>
      <TD><b>REQUEST</b>(3)</TD>
    </tr>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The transaction ID for this message exchange</TD>
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4"><b>Client Identifier Option </b> (MUST)</TD>
    </TR>
    <TR>
      <TD colspan="4"><b>Server Identifier Option </b> (MUST)</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                    
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD><B>00:00:00:00:a0:a0</B></TD></TR>
    <tr>
      <TD colspan="4"><b>IA_PD Option </b> (MUST)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD> 
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3">IA_PD Prefix Option (Optional)</TD>                
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>   
      <TD>3ffe:501:ffff::</TD>
    </tr>
    <tr>
      <TD colspan="4"> <b> Elapsed Time Option </b> (MUST)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">elapsed-time</TD>
      <TD>ANY</TD>
    </tr>
    <tr>
      <TD colspan="4"> Option Request Option (Optional)</TD> 
    </tr>
</TABLE>
<BR>
DHCP Reply message with IA_PD option including IA_Prefix option<BR>
<TABLE border=1>
    <TR>
      <TD colspan="3">msg-type</TD>
      <TD><b>REPLY</b>(7)</TD>
    </TR>
    <tr>
      <TD colspan="3">transaction-id</TD>
      <TD>The same transaction ID previous message</TD> 
    </tr>
    <TR>
      <TD colspan="4">options</TD>
    </TR>
    <TR>
      <TD colspan="4">Client Identifier Option</TD>
    </TR>
    <TR>
      <TD colspan="4">Server Identifier Option</TD>
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">DUID Contents type</TD>                   
      <TD>1 Link-layer address plus time</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">hardware type</TD>   
      <TD>1 Ether</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">time</TD>
      <TD>Time which the server included</TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">link-layer address</TD>   
      <TD>00:00:00:00:a0:a0</TD></TR>
    <TR>
      <TD colspan="4"><b>IA_PD Option</b></TD> 
    </TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">Code</TD>
      <TD>33 (TBD)</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="2">IAID</TD>
      <TD>Unique identifier which client specified</TD>
    </tr>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T1</TD>
      <TD>300</TD></TR>
    <TR>
      <TD>&nbsp;</TD>
      <TD colspan="2">T2</TD>
      <TD>480</TD></TR>
    <tr>
      <TD>&nbsp;</TD>
      <TD colspan="3"><b>IA_PD Prefix Option</b></TD>                   
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>Code</TD>
      <TD>34 (TBD)</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>preferred-lifetime</TD>
      <TD>600</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>valid-lifetime</TD>
      <TD>1200</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>prefix-length</TD>
      <TD>48</TD>
    </tr>
    <tr>
      <TD>&nbsp;</TD>
      <TD>&nbsp;</TD>
      <TD>IPv6 prefix</TD>    
      <TD>3ffe:501:ffff::</TD>
    </tr>
</TABLE>
</BLOCKQUOTE>
</PRE>

=end html

=head1 JUDGEMENT

=begin html
<PRE>
<A NAME="JDG1"></A>
  1. DHCP Solicit message is recieved
<A NAME="JDG2"></A>
  2. DHCP Request message is recieved
<A NAME="JDG3"></A>
  3. Router Advertisement is recieved include delegated prefix, validlifietime less than validlifetime of IA_PD prefix option and prefix-length logner than delegated prefix-length
<A NAME="JDG4"></A>
  4. Router Advertisement is not received on PE side link.
</PRE>

=end html

=head1 TERMINATION

  N/A

=head1 REFERENCE

=begin html
<PRE>
draft-ietf-dhc-dhcpv6-opt-prefix-delegation-01.txt
<HR>
10. Delegating Router Solicitation <BR>
   The requesting router locates and selects a delegating router in the
   same way as described in section "DHCP Server Solicitation" of the
   DHCP specification [6].  The details of the solicitation process are
   described in this section.  <BR>
10.1 Requesting router behaviour <BR>
   The requesting router creates and transmits a Solicit message as
   described in sections "Creation of Solicit Messages" and
   "Transmission of Solicit Messages" of the DHCP specification [6].
   <B>The requesting router creates an IA_PD and assigns it an IAID.  The
   requesting router MUST include the IA_PD option in the Solicit
   message.</B> <BR>
11. Requesting router initiated prefix delegation <BR>
   A requesting router uses the same message exchanges as described in
   section "DHCP Client-Initiated Configuration Exchange" of the DHCP
   specification [6] to obtain or update prefix(es) from a delegating
   router.  The requesting router and the delegating router use the
   IA_PD Prefix option to exchange information about prefix(es) in much
   the same way IA Address options are used for assigned addresses.  <BR>
11.1 Requesting router behaviour <BR>
   The requesting router uses a Request message to populate IA_PDs with
   prefixes.  The requesting router includes one or more IA_PD options
   in the Request message.  The delegating router then returns the
   prefixes for the IA_PDs to the requesting router in IA_PD options in
   a Reply message.  <BR>
   Upon the receipt of a valid Reply message, the requesting router
   assigns a subnet from each of the delegated prefixes to each of the
   links to which it is attached, with the following exception: <B>the
   requesting router MUST NOT assign any delegated prefixes or subnets
   from the delegated prefix(es) to the link through which it received
   the DHCP message from the delegating router.</B> <BR>
   <B>If the requesting router assigns a delegated prefix to a link to
   which the router is attached, and begins to send router
   advertisements for the prefix on the link, the requesting router MUST
   set the valid lifetime in those advertisements to be no later than
   the valid lifetime specified in the IA_PD Prefix option.</B>  A
   requesting router MAY use the preferred lifetime specified in the
   IA_PD Prefix option.
<HR>
draft-ietf-dhc-dhcpv6-28.txt
<HR>
14. Reliability of Client Initiated Message Exchanges <BR>
   see <A href=./retrans_mech>the retransmission mechanism</A> <BR>
15. Message Validation <BR>
15.2. Solicit Message <BR>
   <B>Clients MUST discard any received Solicit messages.</B> <BR>
   <B>Servers MUST discard any Solicit messages that do not include a
   Client Identifier option or that do include a Server Identifier
   option.</B> <BR>
15.4. Request Message <BR>
   <B>Clients MUST discard any received Request messages.</B> <BR>
   <B>Servers MUST discard any received Request message that meet any of
   the following conditions:</B> <BR>
    -  the message does not include a Server Identifier option <BR>
    -  the contents of the Server Identifier option do not match the
       server's DUID <BR>
    -  the message does not include a Client Identifier option <BR>
17. DHCP Server Solicitation <BR>
17.1.1. Creation of Solicit Messages <BR>
   The client sets the "msg-type" field to SOLICIT. The client generates
   a transaction ID and inserts this value in the "transaction-id"
   field.  <BR>
   <B>The client MUST include a Client Identifier option to identify itself
   to the server.</B>  The client includes IA options for any IAs to which
   it wants the server to assign addresses.  The client MAY include
   addresses in the IAs as a hint to the server about addresses for
   which the client has a preference.  <B>The client MUST NOT include any
   other options in the Solicit message except as specifically allowed
   in the definition of individual options.</B> <BR>
   The client uses IA_NA options to request the assignment of
   non-temporary addresses and uses IA_TA options to request the
   assignment of temporary addresses.  Either IA_NA or IA_TA options, or
   a combination of both can be included in DHCP messages.  <BR>
   The client SHOULD include an Option Request option (see section 22.7)
   to indicate the options the client is interested in receiving.  The
   client MAY additionally include instances of those options that are
   identified in the Option Request option with data values as hints
   to the server about parameter values the client would like to have
   returned.  <BR>
   The client includes a Reconfigure Accept option (see section 22.20)
   if the client is willing to accept Reconfigure messages from the
   server.  <BR>
17.1.2. Transmission of Solicit Messages <BR>
   <B>The first Solicit message from the client on the interface MUST be
   delayed by a random amount of time between 0 and SOL_MAX_DELAY.</B> In
   the case of a Solicit message transmitted when DHCP is initiated
   by IPv6 Neighbor Discovery, the delay gives the amount of time to
   wait after IPv6 Neighbor Discovery causes the client to invoke the
   stateful address autoconfiguration protocol (see section 5.5.3 of
   RFC2462).  This random delay desynchronizes clients which start at
   the same time (for example, after a power outage).  <BR>
   The client transmits the message according to section 14, using the
   following parameters: <BR>
      IRT   SOL_TIMEOUT <BR>
      MRT   SOL_MAX_RT <BR>
      MRC   0 <BR>
      MRD   0 <BR>
   If the client has included a Rapid Commit option in its Solicit
   message, the client terminates the waiting process as soon as a Reply
   message with a Rapid Commit option is received.  <BR>
   If the client is waiting for an Advertise message, the mechanism in
   section 14 is modified as follows for use in the transmission of
   Solicit messages.  The message exchange is not terminated by the
   receipt of an Advertise before the first RT has elapsed.  <B>Rather, the
   client collects Advertise messages until the first RT has elapsed.
   Also, the first RT MUST be selected to be strictly greater than IRT
   by choosing RAND to be strictly greater than 0.</B> <BR>
   <B>A client MUST collect Advertise messages for the first RT seconds,
   unless it receives an Advertise message with a preference value
   of 255.</B>  The preference value is carried in the Preference option
   (section 22.8).  Any Advertise that does not include a Preference
   option is considered to have a preference value of 0.  If the client
   receives an Advertise message that includes a Preference option
   with a preference value of 255, the client immediately begins a
   client-initiated message exchange (as described in section 18) by
   sending a Request message to the server from which the Advertise
   message was received.  If the client receives an Advertise message
   that does not include a Preference option with a preference value of
   255, the client continues to wait until the first RT elapses.  If the
   first RT elapses and the client has received an Advertise message,
   the client SHOULD continue with a client-initiated message exchange
   by sending a Request message.  <BR>
   If the client does not receive any Advertise messages before
   the first RT has elapsed, it begins the retransmission mechanism
   described in section 14.  The client terminates the retransmission
   process as soon as it receives any Advertise message, and the client
   acts on the received Advertise message without waiting for any
   additional Advertise messages.  <BR>
18. DHCP Client-Initiated Configuration Exchange <BR>
18.1.1. Creation and Transmission of Request Messages <BR>
   The client uses a Request message to populate IAs with addresses and
   obtain other configuration information.  The client includes one or
   more IA options in the Request message.  The server then returns
   addresses and other information about the IAs to the client in IA
   options in a Reply message.  <BR>
   The client generates a transaction ID and inserts this value in the
   "transaction-id" field.  <BR>
   The client places the identifier of the destination server in a
   Server Identifier option.  <BR>
   <B>The client MUST include a Client Identifier option to identify itself
   to the server.</B>  The client adds any other appropriate options,
   including one or more IA options (if the client is requesting that
   the server assign it some network addresses).  <BR>
   <B>The client MUST include an Option Request option (see section 22.7)
   to indicate the options the client is interested in receiving.</B>  The
   client MAY include options with data values as hints to the server
   about parameter values the client would like to have returned.  <BR>
   The client includes a Reconfigure Accept option (see section
   indicating whether or not the client is willing to accept Reconfigure
   messages from the server.  <BR>
   The client transmits the message according to section 14, using the
   following parameters: <BR>
      IRT   REQ_TIMEOUT <BR>
      MRT   REQ_MAX_RT <BR>
      MRC   REQ_MAX_RC <BR>
      MRD   0 <BR>
18.1.8. Receipt of Reply Messages <BR>
   <B>Upon the receipt of a valid Reply message in response to a Solicit
   (with a Rapid Commit option), Request, Confirm, Renew, Rebind or
   Information-request message, the client extracts the configuration
   information contained in the Reply.</B>  The client MAY choose to report
   any status code or message from the status code option in the Reply
   message.  <BR>
   The client SHOULD perform duplicate address detection [21] on each
   of the addresses in any IAs it receives in the Reply message before
   using that address for traffic.  If any of the addresses are found
   to be in use on the link, the client sends a Decline message to the
   server as described in section 18.1.7.  <BR>
   <B>If the Reply was received in response to a Solicit (with a Rapid
   Commit option), Request, Renew or Rebind message, the client updates
   the information it has recorded about IAs from the IA options
   contained in the Reply message</B>: <BR>
    -  Record T1 and T2 times <BR>
    -  Add any new addresses in the IA option to the IA as recorded by
       the client <BR>
    -  Update lifetimes for any addresses in the IA option that the
       client already has recorded in the IA <BR>
    -  Discard any addresses from the IA as recorded by the client that
       have a valid lifetime of 0 in the IA Address option <BR>
5.5. Transmission and Retransmission Parameters <BR>
   This section presents a table of values used to describe the message
   transmission behavior of clients and servers.  <BR>
      Parameter     Default  Description
   -------------------------------------
   SOL_MAX_DELAY     1 sec   Max delay of first Solicit
   SOL_TIMEOUT       1 sec   Initial Solicit timeout
   SOL_MAX_RT      120 secs  Max Solicit timeout value
   REQ_TIMEOUT       1 sec   Initial Request timeout
   REQ_MAX_RT       30 secs  Max Request timeout value
   REQ_MAX_RC       10       Max Request retry attempts <BR>
24.2. DHCP Message Types <BR>
   IANA is requested to record the following message types (defined
   in section 5.3).  IANA is requested to maintain a registry of DHCP
   message types.  <BR>
      SOLICIT               1
      ADVERTISE             2
      REQUEST               3
      REPLY                 7 <BR>
A. Appearance of Options in Message Types <BR>
   The following table indicates with a "*" the options are allowed in
   each DHCP message type: <BR>
        Client Server IA_NA  Option Pref  Time Relay Auth. Server
          ID     ID   IA_TA  Request            Msg.       Unica.
Solicit   *             *      *           *           *
Advert.   *      *      *            *     *           *
Request   *      *      *      *           *           *
Reply     *      *      *            *     *           *     * <BR>
         Status  Rap. User  Vendor Vendor Inter. Recon. Recon.
          Code  Comm. Class Class  Spec.    ID    Msg.  Accept
Solicit           *     *     *      *                    *
Advert.    *            *     *      *                    *
Request                 *     *      *                    *
Reply      *      *     *     *      *                    *
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

