//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $Name: REL_2_1_1 $
//
// $TAHI: ct/ipsec4-udp/RTU_A_common.def,v 1.4 2001/12/12 04:35:11 ozoe Exp $
//

#include "./RTU_common.def"
//======================================================================
//
// Algorithm predefinition
//

AHAlgorithm aalgo_hmacmd5_012 {
	auth = hmacmd5("TAHITEST89ABCDEF");
}

AHAlgorithm aalgo_hmacmd5_foo {
	auth = hmacmd5("foo0foo1foo2foo3");
}

AHAlgorithm aalgo_hmacsha1_012 {
	auth = hmacsha1("TAHITEST89ABCDEF0123");
}


//======================================================================
//
// AH/ESP definition (default use)
//

#ifndef AALGO_FROM_SG1_NET2
#define AALGO_FROM_SG1_NET2 aalgo_hmacmd5_012
#endif

#ifndef AALGO_TO_SG1_NET2
#define AALGO_TO_SG1_NET2 aalgo_hmacmd5_012
#endif


Hdr_AH ah_from_sg {
	SPI = 0x1000;
	SequenceNumber = 1;
	algorithm = AALGO_FROM_SG1_NET2;
}

Hdr_AH ah_to_sg {
	SPI = 0x1000;
	SequenceNumber = any; #1;
	algorithm = AALGO_TO_SG1_NET2;
}

Hdr_AH ah_from_sg_sn2 {
	SPI = 0x1000;
	SequenceNumber = 2;
	algorithm = AALGO_FROM_SG1_NET2;
}

Hdr_AH ah_from_sg_sn3 {
	SPI = 0x1000;
	SequenceNumber = 3;
	algorithm = AALGO_FROM_SG1_NET2;
}

Hdr_AH ah_from_sg_sn4 {
	SPI = 0x1000;
	SequenceNumber = 4;
	algorithm = AALGO_FROM_SG1_NET2;
}


//======================================================================
//
// AH Tunnel from SG1_NET2 (Echo Request from HOST1_NET4 to HOST1_NET1)
//

#ifndef AH_FROM_SG1_NET2
#define AH_FROM_SG1_NET2 ah_from_sg
#endif

FEM_hdr_ipvX_exth(
	ahtun_from_sg1_net2_echo_request_from_host1_net4_to_host1_net1_on_net0 ,
	hether_router2nut,
	{
		_SRC(vX(IPSEC_SG1_NET2_ADDR));
		_DST(vX(IPSEC_NUT_NET0_ADDR));
	},
	{
		header = _HDR_IPVX_NAME(ahtun_from_sg1_net2_echo_request_from_host1_net4_to_host1_net1_on_net0);
		exthdr = AH_FROM_SG1_NET2;
		upper = _PACKET_IPVX_NAME(echo_request_from_host1_net4_to_host1_net1_on_net0);
	}
)

//======================================================================
//
// AH Tunnel to SG1_NET2 (Echo Reply from HOST1_NET1 to HOST1_NET4)
//

#ifndef AH_TO_SG1_NET2
#define AH_TO_SG1_NET2 ah_to_sg
#endif

FEM_hdr_ipvX_exth(
	ahtun_to_sg1_net2_echo_reply_from_host1_net1_to_host1_net4_on_net0 ,
	hether_nut2router,
	{
		_SRC(vX(IPSEC_NUT_NET0_ADDR));
		_DST(vX(IPSEC_SG1_NET2_ADDR));
	},
	{
		header = _HDR_IPVX_NAME(ahtun_to_sg1_net2_echo_reply_from_host1_net1_to_host1_net4_on_net0);
		exthdr = AH_TO_SG1_NET2;
		upper  = _PACKET_IPVX_NAME(echo_reply_from_host1_net1_to_host1_net4_on_net0);
	}
)

//end


