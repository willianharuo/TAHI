//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $Name: REL_2_1_1 $
//
// $TAHI: ct/ipsec4-udp/RTU_A_DM_Inner_Payload.def,v 1.3 2001/10/05 06:39:01 masaxmasa Exp $
//

#include "./RTU_A_common.def"
//======================================================================
//
// AH/ESP definition
//


//======================================================================
//
// Real packet definition with IPsec AH
//

FEM_udp4_echo_request(
	echo_request_from_host1_net4_to_host1_net1_on_net1_cracked,
	hether_nut2host1,
	{
		_SRC(v4(IPSEC_HOST1_NET4_ADDR));
		_DST(v4(IPSEC_HOST1_NET1_ADDR));
	},
	{
		payload = echo_data_cracked; // cracked data
	//	payload = IPSEC_ECHO_DATA;   // original data
	}
)

Payload echo_data_cracked {
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // "cracked "
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // "cracked "
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // "cracked "
}

FEM_hdr_ipv4_exth(
	ahtun_from_sg1_net2_real1 ,
	hether_router2nut,
	{
		_SRC(v4(IPSEC_SG1_NET2_ADDR));
		_DST(v4(IPSEC_NUT_NET0_ADDR));

	},
	{
		header = _HDR_IPV4_NAME(ahtun_from_sg1_net2_real1);
		exthdr = ah_from_sg_sn2;
		upper = _PACKET_IPV4_NAME(echo_request_from_host1_net4_to_host1_net1_on_net0);
                                           // Inner IPv4 header hoplimit will be modified
	}
)

FEM_hdr_ipv4_exth(
	ahtun_from_sg1_net2_cracked ,
	hether_router2nut,
	{
		_SRC(v4(IPSEC_SG1_NET2_ADDR));
		_DST(v4(IPSEC_NUT_NET0_ADDR));

	},
	{
		header = _HDR_IPV4_NAME(ahtun_from_sg1_net2_real1);
		exthdr = ah_from_sg_sn2;
		upper = _PACKET_IPV4_NAME(echo_request_from_host1_net4_to_host1_net1_on_net1_cracked);
	}
)


//======================================================================
//
// Modified packet definition with IPsec AH
//

// Common use Ether Header
Hdr_Ether hether_router2nut_0x0800 {
	SourceAddress=ether(IPSEC_ROUTER_NET0_MAC_ADDR);
	DestinationAddress=nutether();
	Type=0x0800; // need to specify IPv4
}


// Inner IPv4 payload is modified
Frame_Ether ahtun_from_sg1_net2_dm_inner_payload_echo_request_from_host1_net4_to_host1_net1_on_net0 {
	header=hether_router2nut_0x0800;
	packet=ahtun_from_sg1_net2_modpkt1;
}

Payload ahtun_from_sg1_net2_modpkt1 {
	data=substr(ahtun_from_sg1_net2_real1, 14, 1);	// Ver, Len
	data=substr(ahtun_from_sg1_net2_real1, 15, 1);	// TOS
	data=substr(ahtun_from_sg1_net2_real1, 16, 2);	// Total Len
	data=substr(ahtun_from_sg1_net2_real1, 18, 2);	// ID
	data=substr(ahtun_from_sg1_net2_real1, 20, 2);	// Flags, Ofs
	data=substr(ahtun_from_sg1_net2_real1, 22, 1);	// TTL
	data=substr(ahtun_from_sg1_net2_real1, 23, 1);	// Proto.
	data=substr(ahtun_from_sg1_net2_real1, 24, 2);	// Hdr chksum
	data=substr(ahtun_from_sg1_net2_real1, 26, 4);	// Src Addr
	data=substr(ahtun_from_sg1_net2_real1, 30, 4);	// Dst Addr

	data=substr(ahtun_from_sg1_net2_real1, 34, 24);	// AH

	// Tunnel Inner Packet
	data=substr(ahtun_from_sg1_net2_real1, 58, 1);	// Ver, Len
	data=substr(ahtun_from_sg1_net2_real1, 59, 1);	// TOS
	data=substr(ahtun_from_sg1_net2_real1, 60, 2);	// Total Len
	data=substr(ahtun_from_sg1_net2_real1, 62, 2);	// ID
	data=substr(ahtun_from_sg1_net2_real1, 64, 2);	// Flags, Ofs
	data=substr(ahtun_from_sg1_net2_real1, 66, 1);	// TTL
	data=substr(ahtun_from_sg1_net2_real1, 67, 1);	// Proto.
	data=substr(ahtun_from_sg1_net2_real1, 68, 2);	// Hdr chksum
	data=substr(ahtun_from_sg1_net2_real1, 70, 4);	// Src Addr
	data=substr(ahtun_from_sg1_net2_real1, 74, 4);	// Dst Addr

	data=substr(ahtun_from_sg1_net2_real1, 78, 1);	// ICMP Type
	data=substr(ahtun_from_sg1_net2_real1, 79, 1);	// ICMP Code
	//data=substr(ahtun_from_sg1_net2_real1, 80, 2);	// ICMP chksum
	data={0x3a,0xed};	// correct ICMP chksum
	data=substr(ahtun_from_sg1_net2_real1, 82, 2);	// ICMP ID
	data=substr(ahtun_from_sg1_net2_real1, 84, 2);	// ICMP Seq No.
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // echo request data "cracked "
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // echo request data "cracked "
	data={0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x20}; // echo request data "cracked "
}

//end
