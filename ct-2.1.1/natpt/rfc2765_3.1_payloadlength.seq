#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/natpt/rfc2765_3.1_payloadlength.seq,v 1.4 2001/10/11 01:41:47 akisada Exp $
#

BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use natpt;

checkNUT(router);

# Interface 
$IF="Link0";
$IF1="Link1";
vCapture($IF);
vCapture($IF1);

%pktdesc = (
  ipv4_option_echo   => 'Send IPv4 Echo Request with Timestamp option',
  ipv6_echo          => 'Recv IPv6 Echo Request',
  arp_nut2tn_request => 'Recv ARP request on Link1 (TN IPv4addr)',
  arp_tn2nut_reply   => 'Send ARP reply on Link1 (TN IPv4addr)',
  ns_nut2tn_siit0    => 'Recv Neighbor Solicitation on Link0 (SIIT V6addr)',
  na_tn2nut_siit0    => 'Send Neighbor Advertisement on Link0 (SIIT V6addr)',
);

if ($V6evalTool::exitPass ==  send_recv($IF1, 'ipv4_option_echo', 
					$IF, 'ipv6_echo')) {
    vLogHTML("<H3>OK</H3>");
    exit $V6evalTool::exitPass;
}

error:
vLogHTML("<FONT COLOR=#FF0000><H3>NG</H3></FONT>");
exit $V6evalTool::exitFail;

########################################################################
__END__

=head1 NAME

	rfc2765_3.1_payloadlength.seq - Verify IPv6 <-> IPv4 header 
        translation in accordance with RFC2765 [SIIT]

=head1 TARGET

	Router

=head1 SYNOPSIS

	rfc2765_3.1_payloadlength.seq [-tooloption ...] 
        -p rfc2765_3.1_payloadlength.def

=head1 INITIALIZATION

=begin html
<PRE>
	Before this test starts, run <A HREF="./initialize.html">initialize.seq</A>.
</PRE>

=end html

=head1 TEST PROCEDURE

	This test verifies that NUT can translates IPv4 header
        to IPv6 header, when IPv4 header contain options.
	
	Network Topology

	Link0
	--------------------------
	    |               |
	   TN              NUT
	    |               |
	--------------------------
	Link1

	TN -- (Link0) -- NUT        NUT -- (Link1) -- TN
	
	---------------------      ------------------------

	1.1.
                                   <===================
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK1 IPv4 address
			dst address : TN LINK0 IPv4 address
                        Don't Fragment = 1
                        More fragments = 0
                        Offset = 0
                        Timestamp Option (8 bytes)
                ICMPv4 echo request

	1.2.
	<<JUDGMENT>>
	<===================
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK1 IPv4 embedded IPv6 address
			dst address : TN LINK0 IPv4 embedded IPv6 address
                ICMPv6 echo request
         
=head1 JUDGMENT

	<< PASS >>
		TN (Link0) receive four ICMPv6 echo requests, 
                with correct payload length.
		
	<< FAIL >>	
		TN (Link0) receive four ICMPv6 echo requests, 
                with payload length 8 bytes too large.


=head1 NOTE

=head1 REFERENCE

B<RFC2765>

3.1.  Translating IPv4 Headers into IPv6 Headers

         Payload Length:
                 Total length value from IPv4 header, minus the size
                 of the IPv4 header and IPv4 options, if present.

=head1 SEE ALSO

	perldoc V6evalTool

=cut
