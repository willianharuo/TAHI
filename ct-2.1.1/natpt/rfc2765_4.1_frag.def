//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/natpt/rfc2765_4.1_frag.def,v 1.3 2001/10/11 01:41:47 akisada Exp $
//

#include "natpt.def"

#define ipv4_fragment(_pNAME, _pDF, _pMF, _pOFFSET) \
FEM_icmp4_echo_request( \
	ipv4_ ## _pNAME, \
	_HETHER_nut2tn, \
         { \
		DF = _pDF; \
                MF = _pMF; \
		FragmentOffset = _pOFFSET; \
		SourceAddress=TN_LINK0_V4_ADDRESS; \
		DestinationAddress=TN_LINK1_V4_ADDRESS; \
         }, \
         { \
                 payload=ping_data; \
         } \
)

#define ipv4_fragment_offset(_pNAME, _pDF, _pMF, _pOFFSET) \
FEM_hdr_ipv4_exth( \
	ipv4_ ## _pNAME, \
	_HETHER_nut2tn, \
         { \
		DF = _pDF; \
                MF = _pMF; \
		FragmentOffset = _pOFFSET; \
                Protocol = 1; \
		SourceAddress=TN_LINK0_V4_ADDRESS; \
		DestinationAddress=TN_LINK1_V4_ADDRESS; \
         }, \
	 { \
		header=_HDR_IPV4_NAME(ipv4_ ## _pNAME); \
                upper= payload_ ## _pNAME; \
         } \
) \
Payload payload_ ## _pNAME { \
	data = right(_PACKET_IPV4_NAME(echo_request_v4_tn2nut),20); \
}

#define ipv6_fragment(_pNAME, _pDF, _pMF, _pOFFSET) \
FEM_fragment( \
        ipv6_ ## _pNAME, \
	_HETHER_tn2nut, \
        { \
		_SRC(TN_LINK0_SIIT_ADDRESS); \
		_DST(TN_LINK1_SIIT_ADDRESS); \
		NextHeader = 44; \
        }, \
	{ \
        	NextHeader = 58; \
        	FragmentOffset = _pOFFSET; \
        	MFlag = _pMF; \
	}, \
	{ \
        	data = right(_PACKET_IPV6_NAME(echo_request_tn2nut_siit),40);\
	} \
)

#define ipv6_fragment_offset(_pNAME, _pDF, _pMF, _pOFFSET) \
FEM_fragment( \
        ipv6_ ## _pNAME, \
	_HETHER_tn2nut, \
        { \
		_SRC(TN_LINK0_SIIT_ADDRESS); \
		_DST(TN_LINK1_SIIT_ADDRESS); \
		NextHeader = 44; \
        }, \
	{ \
        	NextHeader = 58; \
        	FragmentOffset = _pOFFSET; \
        	MFlag = _pMF; \
	}, \
	{ \
        	data = right(_PACKET_IPV4_NAME(echo_request_v4_tn2nut),20);\
	} \
)
//////////////////////////////////////////////////////////////////////////

// This one will cause no fragment header - the rest will
ipv4_fragment(DF, 1, 0, 0) 
FEM_icmp6_echo_request( 
         ipv6_DF, 
         _HETHER_tn2nut, 
         { 
                _SRC(TN_LINK0_SIIT_ADDRESS); 
                _DST(TN_LINK1_SIIT_ADDRESS); 
		NextHeader = 58;
         }, 
         { 
                 payload=ping_data; 
         } 
) 

ipv4_fragment(NONE, 0, 0, 0) 
ipv6_fragment(NONE, 0, 0, 0)

ipv4_fragment_offset(MF, 0, 1, 0) 
ipv6_fragment(MF, 0, 1, 0)

ipv4_fragment_offset(OFF, 0, 0, 20) 
ipv6_fragment_offset(OFF, 0, 0, 20)

ipv4_fragment_offset(MF_OFF, 0, 1, 20) 
ipv6_fragment_offset(MF_OFF, 0, 1, 20)
