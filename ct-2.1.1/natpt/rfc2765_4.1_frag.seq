#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/natpt/rfc2765_4.1_frag.seq,v 1.4 2001/10/11 01:41:47 akisada Exp $
#

BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use natpt;

checkNUT(router);

# Interface 
$IF="Link0";
$IF1="Link1";
vCapture($IF);
vCapture($IF1);

%pktdesc = (
  ipv6_DF        => 'Send IPv6 with no fragment hdr',
  ipv4_DF        => 'Recv IPv4 with (DF,MF,Offset) = (1,0,0)',
  ipv6_NONE      => 'Send IPv6 with fragment hdr, M = 0 and Offset = 0',
  ipv4_NONE      => 'Recv IPv4 with (DF,MF,Offset) = (0,0,0)',
  ipv6_MF        => 'Send IPv6 with fragment hdr, M = 1 and Offset = 0',
  ipv4_MF        => 'Recv IPv4 with (DF,MF,Offset) = (0,1,0)',
  ipv6_OFF       => 'Send IPv6 with fragment hdr, M = 0 and Offset = 20',
  ipv4_OFF       => 'Recv IPv4 with (DF,MF,Offset) = (0,0,20)',
  ipv6_MF_OFF    => 'Send IPv6 with fragment hdr, M = 1 and Offset = 20',
  ipv4_MF_OFF    => 'Recv IPv4 with (DF,MF,Offset) = (0,1,20)',

  arp_nut2tn_request => 'Recv ARP request on Link1 (TN IPv4addr)',
  arp_tn2nut_reply   => 'Send ARP reply on Link1 (TN IPv4addr)',
  ns_nut2tn_siit0    => 'Recv Neighbor Solicitation on Link0 (SIIT V6addr)',
  na_tn2nut_siit0    => 'Send Neighbor Advertisement on Link0 (SIIT V6addr)',
);
$result = $V6evalTool::exitPass;
$result += send_recv($IF, 'ipv6_DF', $IF1, 'ipv4_DF');
$result += send_recv($IF, 'ipv6_NONE', $IF1, 'ipv4_NONE');
$result += send_recv($IF, 'ipv6_MF', $IF1, 'ipv4_MF');
$result += send_recv($IF, 'ipv6_OFF', $IF1, 'ipv4_OFF');
$result += send_recv($IF, 'ipv6_MF_OFF', $IF1, 'ipv4_MF_OFF');

if($result == $V6evalTool::exitPass) {
    vLogHTML("<H3>OK</H3>");
    exit $V6evalTool::exitPass;
}

error:
vLogHTML("<FONT COLOR=#FF0000><H3>NG</H3></FONT>");
exit $V6evalTool::exitFail;

########################################################################
__END__

=head1 NAME

	rfc2765_4.1_frag.seq - Verify IPv6 <-> IPv4 header 
        translation in accordance with RFC2765 [SIIT]

=head1 TARGET

	Router

=head1 SYNOPSIS

	rfc2765_4.1_frag.seq [-tooloption ...] 
        -p rfc2765_4.1_frag.def

=head1 INITIALIZATION

=begin html
<PRE>
	Before this test starts, run <A HREF="./initialize.html">initialize.seq</A>.
</PRE>

=end html

=head1 TEST PROCEDURE

	This test verifies that NUT translates an IPv6 package with Fragment 
        header to an IPv4 package with DF=0, and copies Offset and MF flag.
	
	Network Topology

	Link0
	--------------------------
	    |               |
	   TN              NUT
	    |               |
	--------------------------
	Link1

	TN -- (Link0) -- NUT        NUT -- (Link1) -- TN
	
	---------------------      ------------------------

=begin html <HR WIDTH=80%>

	1.1.
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                        NextHeader = 58
                        PayloadLength = 14
                ICMPv6 echo request

	1.2.
	<<JUDGMENT>>
                                   ===================>
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK0 IPv4 address
			dst address : TN LINK1 IPv4 address
                        Don't Fragment = 1
                        More fragments = 0
                        Offset = 0
                ICMPv4 echo request

=begin html <HR WIDTH=80%>

	2.1.[1-2]
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                        NextHeader = 44
                        PayloadLength = 22
                Fragment Header
                        More fragments = (0)
                                      or (1)
                        FragmentOffset = 0
                ICMPv6 echo request

	2.2.[1-2]
	<<JUDGMENT>>
                                   ===================>
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK0 IPv4 address
			dst address : TN LINK1 IPv4 address
                        (DF,MF,Offset) = (0, 0, 0)
                                      or (0, 1, 0)
                ICMPv4 echo request

=begin html <HR WIDTH=80%>

	3.1.[1-2]
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                        NextHeader = 44
                        PayloadLength = 22
                Fragment Header
                        More fragments = (0)
                                      or (1)
                        FragmentOffset = 20
                Payload data = ICMPv4 echo request

	3.2.[1-2]
	<<JUDGMENT>>
                                   ===================>
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK0 IPv4 address
			dst address : TN LINK1 IPv4 address
                        (DF,MF,Offset) = (0, 0, 20)
                                      or (0, 1, 20)
                Payload data = ICMPv4 echo request

=head1 JUDGMENT

	<< PASS >>
		NUT translates IPv6 packages to IPv4 packages, including
                Fragment header when needed.

	<< FAIL >>	
		NUT fails the translation.

=head1 NOTE

=head1 REFERENCE

B<RFC2765>

4.1.  Translating IPv6 Headers into IPv4 Headers

   If the IPv6 packet contains a Fragment header the header fields are
   set as above with the following exceptions:

         Total Length:
                 Payload length value from IPv6 header, minus 8 for
                 the Fragment header, plus the size of the IPv4
                 header.

         Flags:
                 The More Fragments flag is copied from the M flag in
                 the Fragment header.  The Don't Fragments flag is set
                 to zero allowing this packet to be fragmented by IPv4
                 routers.

         Fragment Offset:
                 Copied from the Fragment Offset field in the Fragment
                 Header.

=head1 SEE ALSO

	perldoc V6evalTool

=cut
