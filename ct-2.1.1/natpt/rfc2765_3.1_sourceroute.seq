#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/natpt/rfc2765_3.1_sourceroute.seq,v 1.4 2001/10/11 01:41:47 akisada Exp $
#

BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use natpt;

checkNUT(router);

# Interface 
$IF="Link0";
$IF1="Link1";
vCapture($IF);
vCapture($IF1);

%pktdesc = (
  ipv4_looserouteunexpired  => 'Send IPv4 option Loose Source Route (Route Unexpired)',
  ipv4_unreach_looserouteunexpired => 'Recv IPv4 Destination Unreachable/(loose) source route failed',
  ipv4_strictrouteunexpired => 'Send IPv4 option Strict Source Route (Route Unexpired)',
  ipv4_unreach_strictrouteunexpired => 'RecvIPv4 Destination Unreachable/(strict) source route failed',
  ipv4_multifail            => 'Send IPv4 with many options (incl unexpired Strict Source Route)',
  ipv4_unreach_multifail    => 'RecvIPv4 Destination Unreachable/(strict) source route failed',
  ipv6_echo                 => 'Recv IPv6 Translated Packet',

  arp_nut2tn_request => 'Recv ARP request on Link1 (TN IPv4addr)',
  arp_tn2nut_reply   => 'Send ARP reply on Link1 (TN IPv4addr)',
  ns_nut2tn_siit0    => 'Recv Neighbor Solicitation on Link0 (SIIT V6addr)',
  na_tn2nut_siit0    => 'Send Neighbor Advertisement on Link0 (SIIT V6addr)',
);

$result = $V6evalTool::exitPass;

# Does NUT send back Destination Unreachable?
$result = $V6evalTool::exitFail;
if($V6evalTool::exitPass == send_recv($IF1, 'ipv4_looserouteunexpired', 
				      $IF1, 'ipv4_unreach_looserouteunexpired') &&
   $V6evalTool::exitPass == send_recv($IF1, 'ipv4_strictrouteunexpired', 
				      $IF1, 'ipv4_unreach_strictrouteunexpired') &&
   $V6evalTool::exitPass == send_recv($IF1, 'ipv4_multifail', 
				      $IF1, 'ipv4_unreach_multifail')) {
    $result = $V6evalTool::exitPass;
}

# Does NUT forwards the packet?
if($result == $V6evalTool::exitFail) {
    if($V6evalTool::exitPass == send_recv($IF1, 'ipv4_looserouteunexpired', 
					  $IF, 'ipv6_echo') &&
       $V6evalTool::exitPass == send_recv($IF1, 'ipv4_strictrouteunexpired', 
					  $IF, 'ipv6_echo') &&
       $V6evalTool::exitPass == send_recv($IF1, 'ipv4_multifail', 
					  $IF, 'ipv6_echo')) {
	# NUT MUST NOT translate the packet
	$result = $V6evalTool::exitFail;
    } else {
	$result = $V6evalTool::exitWarn;
    }
}

if($result == $V6evalTool::exitPass) {
    vLogHTML("<H3>OK</H3>");
    exit $V6evalTool::exitPass;
}
if($result == $V6evalTool::exitWarn) {
    vLogHTML("<FONT COLOR=#00FF00><H3>WARN</H3></FONT>");
    exit $V6evalTool::exitWarn;
}
error:
    vLogHTML("<FONT COLOR=#FF0000><H3>NG</H3></FONT>");
exit $V6evalTool::exitFail;

########################################################################
__END__

=head1 NAME

	rfc2765_3.1_options.seq - Verify IPv6 <-> IPv4 header 
        translation in accordance with RFC2765 [SIIT]

=head1 TARGET

	Router

=head1 SYNOPSIS

	rfc2765_3.1_options.seq [-tooloption ...] 
        -p rfc2765_3.1_options.def

=head1 INITIALIZATION

=begin html
<PRE>
	Before this test starts, run <A HREF="./initialize.html">initialize.seq</A>.
</PRE>

=end html

=head1 TEST PROCEDURE

	This test verifies that NUT drops IPv4 packets with unexpired 
        Source Route options, and reply with ICMPv4 Destination Unreachable.
	
	Network Topology

	Link0
	--------------------------
	    |               |
	   TN              NUT
	    |               |
	--------------------------
	Link1

	TN -- (Link0) -- NUT        NUT -- (Link1) -- TN
	
	---------------------      ------------------------

=begin html <HR WIDTH=80%>

	3.1.[1-2]
                                   <===================
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK1 IPv4 address
			dst address : TN LINK0 IPv4 address
                        Don't Fragment = 1
                        More fragments = 0
                        Offset = 0
                        Option = Loose Source Route (Route unexpired)
                              or Strict Source Route (Route unexpired)
                ICMPv4 echo request

	3.2.[1-2]
	<<JUDGMENT PASS>>
                                    ===================>
	ICMPv4 Destination Unreachable
		IPv4 Header
			src address : NUT LINK1 IPv4 address
			dst address : TN LINK1 IPv4 address
                ICMPv6 Destination Unreachable
                        data = IPv4 Loose Source Route (Route unexpired)
                            or IPv4 Strict Source Route (Route unexpired)
         
	<<JUDGMENT WARN>>
        No packets received on either link
         
	<<JUDGMENT FAIL>>
	<===================
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                        Hop Limit = 63
                ICMPv6 echo request

=begin html <HR WIDTH=80%>

	4.1.1
                                   <===================
	ICMPv4 Echo request
                IPv4 Header
			src address : TN LINK1 IPv4 address
			dst address : TN LINK0 IPv4 address
                        Don't Fragment = 1
                        More fragments = 0
                        Offset = 0
  		        option = NOP
	                option = Loose Source Route (Route expired)
  		        option = NOP 
	 	        option = Strict Source Route (Route unexpired)
        		option = NOP
		        option = Record Route
		        option = End of OptionList
		        Padding = 0;
		        Padding = 0;
		        Padding = 0;
                ICMPv4 echo request

	4.2.1
	<<JUDGMENT PASS>>
                                    ===================>
	ICMPv4 Destination Unreachable
		IPv4 Header
			src address : NUT LINK1 IPv4 address
			dst address : TN LINK1 IPv4 address
                ICMPv6 Destination Unreachable
                        data = IPv4 packet sent
         
	<<JUDGMENT WARN>>
        No packets received on either link
         
	<<JUDGMENT FAIL>>
	<===================
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                        Hop Limit = 63
                ICMPv6 echo request
         

=head1 JUDGMENT

	<< PASS >>
		NUT ignores all options except unexpired Source Route.
                NUT sends ICMPv4 Destination Unreachable (Type 3/Code 5)
                upon receiving an unexpired Source Route option.

	<< FAIL >>	
		NUT translates IPv4 packets with unexpired Source Route 
                option, and forwards the packet.

	<< WARN >>	
		NUT ignores all options except unexpired Source Route.
                NUT neither forwards unexpired Source Route packets,
                nor sends an ICMPv4 Destination Unreachable back.

=head1 NOTE

=head1 REFERENCE

B<RFC2765>

3.1.  Translating IPv4 Headers into IPv6 Headers

   If IPv4 options are present in the IPv4 packet, they are ignored
   i.e., there is no attempt to translate them.  However, if an
   unexpired source route option is present then the packet MUST instead
   be discarded, and an ICMPv4 "destination unreachable/source route
   failed" (Type 3/Code 5) error message SHOULD be returned to the
   sender.

=head1 SEE ALSO

	perldoc V6evalTool

=cut
