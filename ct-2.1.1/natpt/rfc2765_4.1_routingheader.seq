#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/natpt/rfc2765_4.1_routingheader.seq,v 1.4 2001/10/11 01:41:47 akisada Exp $
#

BEGIN { $V6evalTool::TestVersion = '$Name: REL_2_1_1 $'; }
use V6evalTool;
use natpt;

checkNUT(router);

# Interface 
$IF="Link0";
$IF1="Link1";
vCapture($IF);
vCapture($IF1);

%pktdesc = (
  ipv6_route               => 'Send IPv6 Echo with unexpired Routing header',
  ipv6_combined            => 'Send IPv6 Echo with unexpired Routing header, hidden between other headers',
  icmpv6_par_prob_route    => 'Recv ICMPv6 Parameter problem, Pointer = 43',
  icmpv6_par_prob_combined => 'Recv ICMPv6 Parameter problem, Pointer = 51',

  arp_nut2tn_request => 'Recv ARP request on Link1 (TN IPv4addr)',
  arp_tn2nut_reply   => 'Send ARP reply on Link1 (TN IPv4addr)',
  ns_nut2tn_siit0    => 'Recv Neighbor Solicitation on Link0 (SIIT V6addr)',
  na_tn2nut_siit0    => 'Send Neighbor Advertisement on Link0 (SIIT V6addr)',
);

$result = $V6evalTool::exitPass;
$result += send_recv($IF, 'ipv6_route', $IF, 'icmpv6_par_prob_route');
sleep(1);
$result += send_recv($IF, 'ipv6_combined', $IF, 'icmpv6_par_prob_combined');

if($result == $V6evalTool::exitPass) {
    vLogHTML("<H3>OK</H3>");
    exit $V6evalTool::exitPass;
}

error:
vLogHTML("<FONT COLOR=#FF0000><H3>NG</H3></FONT>");
exit $V6evalTool::exitFail;

########################################################################
__END__

=head1 NAME

	rfc2765_4.1_options.seq - Verify IPv6 <-> IPv4 header 
        translation in accordance with RFC2765 [SIIT]

=head1 TARGET

	Router

=head1 SYNOPSIS

	rfc2765_4.1_options.seq [-tooloption ...] 
        -p rfc2765_4.1_options.def

=head1 INITIALIZATION

=begin html
<PRE>
	Before this test starts, run <A HREF="./initialize.html">initialize.seq</A>.
</PRE>

=end html

=head1 TEST PROCEDURE

	This test verifies that NUT drops packets with unexpired Routing 
        Headers, and sends back ICMPv6 Parameter Problem errors.
	
	Network Topology

	Link0
	--------------------------
	    |               |
	   TN              NUT
	    |               |
	--------------------------
	Link1

	TN -- (Link0) -- NUT        NUT -- (Link1) -- TN
	
	---------------------      ------------------------

=begin html <HR WIDTH=80%>

	1.1.
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                Routing option header
                      	RoutingType = 1;
                        SegmentsLeft = 0;
                        Address = TN LINK1 IPv4 embedded IPv6 address
                ICMPv6 echo request

	1.2.
	<<JUDGMENT>>
	<===================
	ICMPv6 Parameter Problem (Type 4, Code 0)
                IPv6 Header
			src address : NUT LINK0 global IPv6 address
			dst address : TN LINK0 IPv4 embedded IPv6 address
                ICMPv6 Parameter Problem
                        Type = 4
                        Code = 0
                        Pointer = 43
                        Payload = IPv6 Echo Request packet

=begin html <HR WIDTH=80%>

	2.1.
	===================>
	ICMPv6 Echo Request
		IPv6 Header
			src address : TN LINK0 IPv4 embedded IPv6 address
			dst address : TN LINK1 IPv4 embedded IPv6 address
                Hop-By-Hop option header
                        PadN (3 bytes)
                        Pad1 (1 bytes)
                        Pad1 (1 bytes)
                        Pad1 (1 bytes)
                Routing option header
                      	RoutingType = 0;
                        SegmentsLeft = 1;
                        Address = TN LINK1 IPv4 embedded IPv6 address
                Fragment option header
                        NextHeader = 60; // Destination option header
                Destination option header
                        PadN (3 bytes)
                        Pad1 (1 bytes)
                        Pad1 (1 bytes)
                        Pad1 (1 bytes)
                ICMPv6 echo request

	2.2.
	<<JUDGMENT>>
	<===================
	ICMPv6 Parameter Problem (Type 4, Code 0)
                IPv6 Header
			src address : NUT LINK0 global IPv6 address
			dst address : TN LINK0 IPv4 embedded IPv6 address
                ICMPv6 Parameter Problem
                        Type = 4
                        Code = 0
                        Pointer = 51
                        Payload = IPv6 Echo Request packet

=head1 JUDGMENT

	<< PASS >>
		NUT sends back two ICMPv6 Parameter Problem packets.

	<< FAIL >>	
		NUT translates the ICMPv6 echo requests to 
                ICMPv4 echo requests or doesn't send back two 
                ICMPv6 Parameter Problem packets.

=head1 NOTE

=head1 REFERENCE

B<RFC2765>

4.1.  Translating IPv6 Headers into IPv4 Headers

   If a routing header with a non-zero Segments Left field is present
   then the packet MUST NOT be translated, and an ICMPv6 "parameter
   problem/ erroneous header field encountered" (Type 4/Code 0) error
   message, with the Pointer field indicating the first byte of the
   Segments Left field, SHOULD be returned to the sender.

=head1 SEE ALSO

	perldoc V6evalTool

=cut
