#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/spec/FH_InvalidLength.seq,v 1.16 2003/06/09 07:39:43 ozoe Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: REL_2_1_1 $';
}

use V6evalTool;

%pktdesc = (
	echo_request		=> 'Send Echo Request (Preparation)',
	echo_reply		=> 'Recv Echo Reply',
	ns			=> 'Recv Neighbor Solicitation',
	na			=> 'Send Neighbor Advertisement',
	echo_request_1st	=> 'Send Echo Request (1st fragment) Invalid Payload Length',
	echo_request_2nd	=> 'Send Echo Request (2nd fragment)',
	icmperr			=> 'Recv ICMP Error (Parameter Problem, erroneous header field encountered)',
);

$IF = Link0;

vCapture($IF);

#----- preparation

vLogHTML('<B>Begin Preparation</B>');

vSend($IF, echo_request);

%ret = vRecv($IF, 5, 0, 0, ns, echo_reply);
if ($ret{status} != 0) {
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	exit $V6evalTool::exitFail;
}
if ($ret{recvFrame} eq 'ns') {
	vSend($IF, na);
	%ret = vRecv($IF, 5, 0, 0, echo_reply);
	if ($ret{status} != 0) {
		vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
		exit $V6evalTool::exitFail;
	}
}
if ($ret{recvFrame} ne 'echo_reply') {
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vSend($IF, na);

vLogHTML('<B>End Preparation</B>');

#----- main test

vSend($IF, echo_request_1st);

vSend($IF, echo_request_2nd);

%ret = vRecv($IF, 5, 0, 0, icmperr);
if ($ret{status} == 0 && $ret{recvFrame} eq 'icmperr') {
	vLogHTML('OK');
	exit $V6evalTool::exitPass;
}

vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
vSleep(65, "Discard Unexpected 'ICMP Time Exceeded' message (60+5 sec)");
exit $V6evalTool::exitFail;

######################################################################
__END__

=head1 NAME

  FH_InvalidLength - check Fragment Reassembly (Invalid Length)

=head1 TARGET

  Host and Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./FH_InvalidLength.seq">FH_InvalidLength.seq</A> [-tooloption ...] -pkt <A HREF="./FH_InvalidLength.def">FH_InvalidLength.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  1. Ping to Target (create Neighbor Cache Entries, if not exist)
  2. Override Neighbor Cache Entries

=head1 TEST PROCEDURE

  Tester                      Target
    |                           |
    |-------------------------->|
    |   Echo Request (1st)      |
    |                           |
    |                           |
    |-------------------------->|
    |   Echo Request (2nd)      |
    |                           |
    |                           |
    |<--------------------------|
    |   ICMP Error              |
    |                           |
    |                           |
    v                           v


  1. Send Echo Request (1st fragment)
  2. Send Echo Request (2nd fragment)
  3. Receive ICMP Error

  Echo Request (1st fragment) is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 527 (not multiple of 8 octets)
            NextHeader         = 56 (Fragment Header)
            SourceAddress      = Tester Link Local Address
            DestinationAddress = Target Link Local Address

        Fragment Header 
            NextHeader         = 58 (ICMP)
            FragmentOffset     = 0 (1st fragment)
            MFlag              = 1 (more fragment)

=head1 JUDGMENT

  PASS: ICMP Error Received

        IPv6 Header
            Version             = 6
            Traffic Class       = 0
            FlowLabel           = 0
            PayloadLength       = 575
            NextHeader          = 58 (ICMP)
            SourceAddress       = Target Link Local Address
            Destination Address = Tester Link Local Address

        ICMP Error
            Type           = 4 (Parameter Problem)
            Code           = 0 (erroneous header field encountered)
            Checksum       = (auto)
            Pointer        = 4 (Pointer to Payload Length in IPv6 Header)
            PayloadData    = (1st Fragment of Echo Request)

=head1 REFERENCE

RFC2460

4.5  Fragment Header

                        :

   The following error conditions may arise when reassembling fragmented
   packets:

      If insufficient fragments are received to complete reassembly of a
      packet within 60 seconds of the reception of the first-arriving
      fragment of that packet, reassembly of that packet must be
      abandoned and all the fragments that have been received for that
      packet must be discarded.  If the first fragment (i.e., the one
      with a Fragment Offset of zero) has been received, an ICMP Time
      Exceeded -- Fragment Reassembly Time Exceeded message should be
      sent to the source of that fragment.

=begin html
<PRE>
      <B>If the length of a fragment, as derived from the fragment packet's
      Payload Length field, is not a multiple of 8 octets and the M flag
      of that fragment is 1, then that fragment must be discarded and an
      ICMP Parameter Problem, Code 0, message should be sent to the
      source of the fragment, pointing to the Payload Length field of   
      the fragment packet.</B>
</PRE>

=head1 SEE ALSO

  perldoc V6evalTool

=cut

