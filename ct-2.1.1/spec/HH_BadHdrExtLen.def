//
// Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
// IPA (Information-technology Promotion Agency, Japan).
// All rights reserved.
// 
// Redistribution and use of this software in source and binary forms, with 
// or without modification, are permitted provided that the following 
// conditions and disclaimer are agreed and accepted by the user:
// 
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the names of the copyrighters, the name of the project which 
// is related to this software (hereinafter referred to as "project") nor 
// the names of the contributors may be used to endorse or promote products 
// derived from this software without specific prior written permission.
// 
// 4. No merchantable use may be permitted without prior written 
// notification to the copyrighters. However, using this software for the 
// purpose of testing or evaluating any products including merchantable 
// products may be permitted without any notification to the copyrighters.
// 
// 
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
// CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
// BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
// COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
// CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
// THE POSSIBILITY OF SUCH DAMAGE.
//
// $TAHI: ct/spec/HH_BadHdrExtLen.def,v 1.6 2001/10/05 06:39:16 masaxmasa Exp $
//
//////////////////////////////////////////////////////////////////////

//
// echo_request_badex
//
// - Echo Request (Hop-by-Hop Options Header with bad Hdr Ext Len)
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_request_exth(
	echo_request_badex,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_request_badex);
		exthdr = opt_badPadN;
		upper = _ICMPV6_NAME(echo_request_badex);
	},
	{
		payload = echo_data8;
	}
)

Hdr_HopByHop opt_badPadN {
	HeaderExtLength = 100;
	option = _PadN;
}

//
// echo_request_ex
//
// - Echo Request (Hop-by-Hop Options Header)
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_request_exth(
	echo_request_ex,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_request_ex);
		exthdr = opt_PadN;
		upper = _ICMPV6_NAME(echo_request_ex);
	},
	{
		payload = echo_data8;
	}
)

Hdr_HopByHop opt_PadN {
	HeaderExtLength = 0;
	option = _PadN;
}

Opt_PadN _PadN {
	pad = {0, 0, 0, 0};
}

Payload echo_data8 {
	data = {1, 2, 3, 4, 5, 6, 7, 8};
}

//
// echo_request
//
// - Echo Request
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_request(
	echo_request,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
	},
	{
		payload = echo_data8;
	}
)

//
// echo_reply
//
// - Echo Reply
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_reply(
	echo_reply,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		payload = echo_data8;
	}
)

//
// echo_reply_badex
//
// - Echo Reply (Hop-by-Hop Options Header with bad Hdr Ext Len)
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_reply_exth(
	echo_reply_badex,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_badex);
		exthdr = opt_badPadN;
		upper = _ICMPV6_NAME(echo_reply_badex);
	},
	{
		payload = echo_data8;
	}
)

//
// echo_reply_ex
//
// - Echo Reply (Hop-by-Hop Options Header)
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_echo_reply_exth(
	echo_reply_ex,
	_HETHER_nut2tn,
	{
		_SRC(nutv6());
		_DST(tnv6());
	},
	{
		header = _HDR_IPV6_NAME(echo_reply_ex);
		exthdr = opt_PadN;
		upper = _ICMPV6_NAME(echo_reply_ex);
	},
	{
		payload = echo_data8;
	}
)

//
// multicast_ns
//
// - Multicast Neighbor Solicitation
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_ns(
	multicast_ns,
	_HETHER_nut2tnsolnode,
	{
		_SRC(oneof(nutv6(), nut2v6(_GLOBAL0_UCAST_PRFX, _GLOBAL0_UCAST_PRFXLEN, "Link0")));
		_DST(_IPV6_SOLNODE_MCAST(tnv6()));
		HopLimit = 255;
	},
	{
		TargetAddress = tnv6();
		option = _SLLOPT_nut;
	}
)

//
// unicast_ns
//
// - Unicast Neighbor Solicitation
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_ns(
	unicast_ns,
	_HETHER_nut2tn,
	{
		_SRC(oneof(nutv6(), nut2v6(_GLOBAL0_UCAST_PRFX, _GLOBAL0_UCAST_PRFXLEN, "Link0")));
		_DST(tnv6());
		HopLimit = 255;
	},
	{
		TargetAddress = tnv6();
		option = _SLLOPT_nut;
	}
)

//
// na
//
// - Neighbor Advertisement
//
//////////////////////////////////////////////////////////////////////

FEM_icmp6_na(
	na,
	_HETHER_tn2nut,
	{
		_SRC(tnv6());
		_DST(nutv6());
		HopLimit = 255;
	},
	{
		SFlag = 1;
		OFlag = 1;
		TargetAddress = tnv6();
		option = _TLLOPT_tn;
	}
)
