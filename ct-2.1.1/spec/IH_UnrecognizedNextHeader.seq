#!/usr/bin/perl
#
# Copyright (C) 1999, 2000, 2001, 2002, 2003 Yokogawa Electric Corporation,
# IPA (Information-technology Promotion Agency, Japan).
# All rights reserved.
# 
# Redistribution and use of this software in source and binary forms, with 
# or without modification, are permitted provided that the following 
# conditions and disclaimer are agreed and accepted by the user:
# 
# 1. Redistributions of source code must retain the above copyright 
# notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
# notice, this list of conditions and the following disclaimer in the 
# documentation and/or other materials provided with the distribution.
# 
# 3. Neither the names of the copyrighters, the name of the project which 
# is related to this software (hereinafter referred to as "project") nor 
# the names of the contributors may be used to endorse or promote products 
# derived from this software without specific prior written permission.
# 
# 4. No merchantable use may be permitted without prior written 
# notification to the copyrighters. However, using this software for the 
# purpose of testing or evaluating any products including merchantable 
# products may be permitted without any notification to the copyrighters.
# 
# 
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHTERS, THE PROJECT AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING 
# BUT NOT LIMITED THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE, ARE DISCLAIMED.  IN NO EVENT SHALL THE 
# COPYRIGHTERS, THE PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT,STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
# THE POSSIBILITY OF SUCH DAMAGE.
#
# $TAHI: ct/spec/IH_UnrecognizedNextHeader.seq,v 1.21 2003/04/23 10:50:04 ozoe Exp $
#
######################################################################
BEGIN {
	$V6evalTool::TestVersion = '$Name: REL_2_1_1 $';
}

use V6evalTool;

%pktdesc = (
	unrecog		=> 'Send Unrecognized Next Header in IPv6 Header',
	icmperr		=> 'Recv ICMP Error (Parameter Problem, unrecognized Next Header type encountered)',
	ns		=> 'Recv Neighbor Solicitation',
	na		=> 'Send Neighbor Advertisement',
);

$IF = Link0;

vCapture($IF);

vSend($IF, unrecog);

%ret = vRecv($IF, 5, 0, 0, ns, icmperr);
if ($ret{status} != 0) {
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	exit $V6evalTool::exitFail;
}

if ($ret{recvFrame} eq 'ns') {

	vSend($IF, na);

	%ret = vRecv($IF, 5, 0, 0, icmperr);
	if ($ret{status} != 0) {
		vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
		exit $V6evalTool::exitFail;
	}
}

if ($ret{recvFrame} ne 'icmperr') {
	vLogHTML('<FONT COLOR="#FF0000">NG</FONT>');
	exit $V6evalTool::exitFail;
}

vLogHTML('OK');
exit $V6evalTool::exitPass;


######################################################################
__END__

=head1 NAME

  IH_UnrecognizedNextHeader - check Unrecognized Next Header in IPv6 Header

=head1 TARGET

  Host and Router

=head1 SYNOPSIS

=begin html
<PRE>
  <A HREF="./IH_UnrecognizedNextHeader.seq">IH_UnrecognizedNextHeader.seq</A> [-tooloption ...] -pkt <A HREF="./IH_UnrecognizedNextHeader.def">IH_UnrecognizedNextHeader.def</A>
    -tooloption : v6eval tool option
</PRE>

=end html

=head1 INITIALIZATION

  None

=head1 TEST PROCEDURE

  Tester                      Target
    |                           |
    |-------------------------->|
    |   Test Packet             |
    |                           |
    |                           |
    |<--------------------------|
    |   Neighbor Solicitation   |
    |                           |
    |                           |
    |-------------------------->|
    |   Neighbor Advertisement  |
    |                           |
    |                           |
    |<--------------------------|
    |   ICMP Error              |
    |                           |
    v                           v

  1. Send Test Packet (Unrecognized Next Header in IPv6 Header)
  2. Wait ICMP Error or NS
  3. If NS received then send NA, and wait ICMP Error again
  4. Receive ICMP Error

  Test Packet to Target Data is:

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 10
            NextHeader         = 128 (Unrecognized value)
            SourceAddress      = Tester Address
            DestinationAddress = Tester Address

=head1 JUDGMENT

  PASS: ICMP Error Received

        IPv6 Header
            Version            = 6
            Traffic Class      = 0
            FlowLabel          = 0
            PayloadLength      = 58
            NextHeader         = 58 (ICMP)
            SourceAddress      = Target Address
            DestinationAddress = Tester Address

        ICMP Error
            Type           = 4 (Parameter Problem)
            Code           = 1 (unrecognized Next Header type encountered)
            Checksum       = (auto)
            Pointer        = 6 (Offset to Next Header type)
            PayloadData    = (Sent Packet)

=head1 REFERENCE

RFC2460

4.  IPv6 Extension Headers

=begin html
<PRE>
   If, as a result of processing a header, a node is required to proceed
   to the next header but the Next Header value in the current header is
   unrecognized by the node, <B>it should discard the packet and send an
   ICMP Parameter Problem message to the source of the packet, with an
   ICMP Code value of 1 ("unrecognized Next Header type encountered")
   and the ICMP Pointer field containing the offset of the unrecognized
   value within the original packet.</B>  The same action should be taken if
   a node encounters a Next Header value of zero in any header other
   than an IPv6 header.
</PRE>

=end html

=head1 SEE ALSO

  perldoc V6evalTool

=cut

